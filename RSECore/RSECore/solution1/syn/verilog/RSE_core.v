// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2017.1
// Copyright (C) 1986-2017 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

(* CORE_GENERATION_INFO="RSE_core,hls_ip_2017_1,{HLS_INPUT_TYPE=c,HLS_INPUT_FLOAT=0,HLS_INPUT_FIXED=1,HLS_INPUT_PART=xczu9eg-ffvb1156-1-i-es1,HLS_INPUT_CLOCK=10.000000,HLS_INPUT_ARCH=others,HLS_SYN_CLOCK=5.068000,HLS_SYN_LAT=14,HLS_SYN_TPT=none,HLS_SYN_MEM=64,HLS_SYN_DSP=0,HLS_SYN_FF=18066,HLS_SYN_LUT=29385}" *)

module RSE_core (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        operation,
        index,
        is_parity,
        data,
        parity,
        parity_ap_vld
);

parameter    ap_ST_fsm_state1 = 4'd1;
parameter    ap_ST_fsm_pp0_stage0 = 4'd2;
parameter    ap_ST_fsm_state6 = 4'd4;
parameter    ap_ST_fsm_state7 = 4'd8;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
input  [7:0] operation;
input  [31:0] index;
input  [0:0] is_parity;
input  [367:0] data;
output  [367:0] parity;
output   parity_ap_vld;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg parity_ap_vld;

(* fsm_encoding = "none" *) reg   [3:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
reg   [367:0] data_buffer_0;
reg   [367:0] data_buffer_1;
reg   [367:0] data_buffer_2;
reg   [367:0] data_buffer_3;
reg   [367:0] data_buffer_4;
reg   [367:0] data_buffer_5;
reg   [367:0] data_buffer_6;
reg   [367:0] data_buffer_7;
reg   [367:0] parity_buffer_0;
reg   [367:0] parity_buffer_1;
reg   [367:0] parity_buffer_2;
reg   [367:0] parity_buffer_3;
reg   [8:0] i_reg_197;
wire   [7:0] operation_read_read_fu_184_p2;
reg   [367:0] data_buffer_0_load_reg_1058;
reg   [367:0] data_buffer_1_load_reg_1063;
reg   [367:0] data_buffer_2_load_reg_1068;
reg   [367:0] data_buffer_3_load_reg_1073;
reg   [367:0] data_buffer_4_load_reg_1078;
reg   [367:0] data_buffer_5_load_reg_1083;
reg   [367:0] data_buffer_6_load_reg_1088;
reg   [367:0] data_buffer_7_load_reg_1093;
wire   [0:0] tmp_3_fu_663_p2;
reg   [0:0] tmp_3_reg_1101;
wire    ap_CS_fsm_pp0_stage0;
wire    ap_block_state2_pp0_stage0_iter0;
wire    ap_block_state3_pp0_stage0_iter1;
wire    ap_block_state4_pp0_stage0_iter2;
wire    ap_block_state5_pp0_stage0_iter3;
wire    ap_block_pp0_stage0_11001;
reg   [0:0] ap_reg_pp0_iter1_tmp_3_reg_1101;
reg   [0:0] ap_reg_pp0_iter2_tmp_3_reg_1101;
wire   [367:0] tmp_4_fu_669_p1;
reg   [367:0] tmp_4_reg_1105;
reg   [367:0] ap_reg_pp0_iter1_tmp_4_reg_1105;
reg   [367:0] ap_reg_pp0_iter2_tmp_4_reg_1105;
wire   [7:0] input_0_fu_678_p1;
reg   [7:0] input_0_reg_1114;
wire   [7:0] input_1_fu_687_p1;
reg   [7:0] input_1_reg_1122;
wire   [7:0] input_2_fu_696_p1;
reg   [7:0] input_2_reg_1130;
wire   [7:0] input_3_fu_705_p1;
reg   [7:0] input_3_reg_1138;
wire   [7:0] input_4_fu_714_p1;
reg   [7:0] input_4_reg_1146;
wire   [7:0] input_5_fu_723_p1;
reg   [7:0] input_5_reg_1154;
wire   [7:0] input_6_fu_732_p1;
reg   [7:0] input_6_reg_1162;
wire   [7:0] input_7_fu_741_p1;
reg   [7:0] input_7_reg_1170;
wire   [8:0] i_1_fu_745_p2;
reg    ap_enable_reg_pp0_iter0;
wire    ap_block_pp0_stage0_subdone;
reg    ap_condition_pp0_exit_iter0_state2;
reg    ap_enable_reg_pp0_iter1;
reg    ap_enable_reg_pp0_iter2;
reg    ap_enable_reg_pp0_iter3;
wire   [1:0] tmp_aesl_mux_load_4i368P_fu_208_empty;
wire   [367:0] tmp_aesl_mux_load_4i368P_fu_208_ap_return;
wire    grp_GF_multiply_fu_222_ap_start;
wire    grp_GF_multiply_fu_222_ap_done;
wire    grp_GF_multiply_fu_222_ap_idle;
wire    grp_GF_multiply_fu_222_ap_ready;
wire   [7:0] grp_GF_multiply_fu_222_ap_return;
wire    grp_GF_multiply_fu_233_ap_start;
wire    grp_GF_multiply_fu_233_ap_done;
wire    grp_GF_multiply_fu_233_ap_idle;
wire    grp_GF_multiply_fu_233_ap_ready;
wire   [7:0] grp_GF_multiply_fu_233_ap_return;
wire    grp_GF_multiply_fu_244_ap_start;
wire    grp_GF_multiply_fu_244_ap_done;
wire    grp_GF_multiply_fu_244_ap_idle;
wire    grp_GF_multiply_fu_244_ap_ready;
wire   [7:0] grp_GF_multiply_fu_244_ap_return;
wire    grp_GF_multiply_fu_255_ap_start;
wire    grp_GF_multiply_fu_255_ap_done;
wire    grp_GF_multiply_fu_255_ap_idle;
wire    grp_GF_multiply_fu_255_ap_ready;
wire   [7:0] grp_GF_multiply_fu_255_ap_return;
wire    grp_GF_multiply_fu_266_ap_start;
wire    grp_GF_multiply_fu_266_ap_done;
wire    grp_GF_multiply_fu_266_ap_idle;
wire    grp_GF_multiply_fu_266_ap_ready;
wire   [7:0] grp_GF_multiply_fu_266_ap_return;
wire    grp_GF_multiply_fu_277_ap_start;
wire    grp_GF_multiply_fu_277_ap_done;
wire    grp_GF_multiply_fu_277_ap_idle;
wire    grp_GF_multiply_fu_277_ap_ready;
wire   [7:0] grp_GF_multiply_fu_277_ap_return;
wire    grp_GF_multiply_fu_288_ap_start;
wire    grp_GF_multiply_fu_288_ap_done;
wire    grp_GF_multiply_fu_288_ap_idle;
wire    grp_GF_multiply_fu_288_ap_ready;
wire   [7:0] grp_GF_multiply_fu_288_ap_return;
wire    grp_GF_multiply_fu_299_ap_start;
wire    grp_GF_multiply_fu_299_ap_done;
wire    grp_GF_multiply_fu_299_ap_idle;
wire    grp_GF_multiply_fu_299_ap_ready;
wire   [7:0] grp_GF_multiply_fu_299_ap_return;
wire    grp_GF_multiply_fu_310_ap_start;
wire    grp_GF_multiply_fu_310_ap_done;
wire    grp_GF_multiply_fu_310_ap_idle;
wire    grp_GF_multiply_fu_310_ap_ready;
wire   [7:0] grp_GF_multiply_fu_310_ap_return;
wire    grp_GF_multiply_fu_321_ap_start;
wire    grp_GF_multiply_fu_321_ap_done;
wire    grp_GF_multiply_fu_321_ap_idle;
wire    grp_GF_multiply_fu_321_ap_ready;
wire   [7:0] grp_GF_multiply_fu_321_ap_return;
wire    grp_GF_multiply_fu_332_ap_start;
wire    grp_GF_multiply_fu_332_ap_done;
wire    grp_GF_multiply_fu_332_ap_idle;
wire    grp_GF_multiply_fu_332_ap_ready;
wire   [7:0] grp_GF_multiply_fu_332_ap_return;
wire    grp_GF_multiply_fu_343_ap_start;
wire    grp_GF_multiply_fu_343_ap_done;
wire    grp_GF_multiply_fu_343_ap_idle;
wire    grp_GF_multiply_fu_343_ap_ready;
wire   [7:0] grp_GF_multiply_fu_343_ap_return;
wire    grp_GF_multiply_fu_354_ap_start;
wire    grp_GF_multiply_fu_354_ap_done;
wire    grp_GF_multiply_fu_354_ap_idle;
wire    grp_GF_multiply_fu_354_ap_ready;
wire   [7:0] grp_GF_multiply_fu_354_ap_return;
wire    grp_GF_multiply_fu_365_ap_start;
wire    grp_GF_multiply_fu_365_ap_done;
wire    grp_GF_multiply_fu_365_ap_idle;
wire    grp_GF_multiply_fu_365_ap_ready;
wire   [7:0] grp_GF_multiply_fu_365_ap_return;
wire    grp_GF_multiply_fu_376_ap_start;
wire    grp_GF_multiply_fu_376_ap_done;
wire    grp_GF_multiply_fu_376_ap_idle;
wire    grp_GF_multiply_fu_376_ap_ready;
wire   [7:0] grp_GF_multiply_fu_376_ap_return;
wire    grp_GF_multiply_fu_387_ap_start;
wire    grp_GF_multiply_fu_387_ap_done;
wire    grp_GF_multiply_fu_387_ap_idle;
wire    grp_GF_multiply_fu_387_ap_ready;
wire   [7:0] grp_GF_multiply_fu_387_ap_return;
wire    grp_GF_multiply_fu_398_ap_start;
wire    grp_GF_multiply_fu_398_ap_done;
wire    grp_GF_multiply_fu_398_ap_idle;
wire    grp_GF_multiply_fu_398_ap_ready;
wire   [7:0] grp_GF_multiply_fu_398_ap_return;
wire    grp_GF_multiply_fu_409_ap_start;
wire    grp_GF_multiply_fu_409_ap_done;
wire    grp_GF_multiply_fu_409_ap_idle;
wire    grp_GF_multiply_fu_409_ap_ready;
wire   [7:0] grp_GF_multiply_fu_409_ap_return;
wire    grp_GF_multiply_fu_420_ap_start;
wire    grp_GF_multiply_fu_420_ap_done;
wire    grp_GF_multiply_fu_420_ap_idle;
wire    grp_GF_multiply_fu_420_ap_ready;
wire   [7:0] grp_GF_multiply_fu_420_ap_return;
wire    grp_GF_multiply_fu_431_ap_start;
wire    grp_GF_multiply_fu_431_ap_done;
wire    grp_GF_multiply_fu_431_ap_idle;
wire    grp_GF_multiply_fu_431_ap_ready;
wire   [7:0] grp_GF_multiply_fu_431_ap_return;
wire    grp_GF_multiply_fu_442_ap_start;
wire    grp_GF_multiply_fu_442_ap_done;
wire    grp_GF_multiply_fu_442_ap_idle;
wire    grp_GF_multiply_fu_442_ap_ready;
wire   [7:0] grp_GF_multiply_fu_442_ap_return;
wire    grp_GF_multiply_fu_453_ap_start;
wire    grp_GF_multiply_fu_453_ap_done;
wire    grp_GF_multiply_fu_453_ap_idle;
wire    grp_GF_multiply_fu_453_ap_ready;
wire   [7:0] grp_GF_multiply_fu_453_ap_return;
wire    grp_GF_multiply_fu_464_ap_start;
wire    grp_GF_multiply_fu_464_ap_done;
wire    grp_GF_multiply_fu_464_ap_idle;
wire    grp_GF_multiply_fu_464_ap_ready;
wire   [7:0] grp_GF_multiply_fu_464_ap_return;
wire    grp_GF_multiply_fu_475_ap_start;
wire    grp_GF_multiply_fu_475_ap_done;
wire    grp_GF_multiply_fu_475_ap_idle;
wire    grp_GF_multiply_fu_475_ap_ready;
wire   [7:0] grp_GF_multiply_fu_475_ap_return;
wire    grp_GF_multiply_fu_486_ap_start;
wire    grp_GF_multiply_fu_486_ap_done;
wire    grp_GF_multiply_fu_486_ap_idle;
wire    grp_GF_multiply_fu_486_ap_ready;
wire   [7:0] grp_GF_multiply_fu_486_ap_return;
wire    grp_GF_multiply_fu_497_ap_start;
wire    grp_GF_multiply_fu_497_ap_done;
wire    grp_GF_multiply_fu_497_ap_idle;
wire    grp_GF_multiply_fu_497_ap_ready;
wire   [7:0] grp_GF_multiply_fu_497_ap_return;
wire    grp_GF_multiply_fu_508_ap_start;
wire    grp_GF_multiply_fu_508_ap_done;
wire    grp_GF_multiply_fu_508_ap_idle;
wire    grp_GF_multiply_fu_508_ap_ready;
wire   [7:0] grp_GF_multiply_fu_508_ap_return;
wire    grp_GF_multiply_fu_519_ap_start;
wire    grp_GF_multiply_fu_519_ap_done;
wire    grp_GF_multiply_fu_519_ap_idle;
wire    grp_GF_multiply_fu_519_ap_ready;
wire   [7:0] grp_GF_multiply_fu_519_ap_return;
wire    grp_GF_multiply_fu_530_ap_start;
wire    grp_GF_multiply_fu_530_ap_done;
wire    grp_GF_multiply_fu_530_ap_idle;
wire    grp_GF_multiply_fu_530_ap_ready;
wire   [7:0] grp_GF_multiply_fu_530_ap_return;
wire    grp_GF_multiply_fu_541_ap_start;
wire    grp_GF_multiply_fu_541_ap_done;
wire    grp_GF_multiply_fu_541_ap_idle;
wire    grp_GF_multiply_fu_541_ap_ready;
wire   [7:0] grp_GF_multiply_fu_541_ap_return;
wire    grp_GF_multiply_fu_552_ap_start;
wire    grp_GF_multiply_fu_552_ap_done;
wire    grp_GF_multiply_fu_552_ap_idle;
wire    grp_GF_multiply_fu_552_ap_ready;
wire   [7:0] grp_GF_multiply_fu_552_ap_return;
wire    grp_GF_multiply_fu_563_ap_start;
wire    grp_GF_multiply_fu_563_ap_done;
wire    grp_GF_multiply_fu_563_ap_idle;
wire    grp_GF_multiply_fu_563_ap_ready;
wire   [7:0] grp_GF_multiply_fu_563_ap_return;
reg    ap_reg_grp_GF_multiply_fu_222_ap_start;
wire    ap_block_pp0_stage0;
reg    ap_reg_grp_GF_multiply_fu_233_ap_start;
reg    ap_reg_grp_GF_multiply_fu_244_ap_start;
reg    ap_reg_grp_GF_multiply_fu_255_ap_start;
reg    ap_reg_grp_GF_multiply_fu_266_ap_start;
reg    ap_reg_grp_GF_multiply_fu_277_ap_start;
reg    ap_reg_grp_GF_multiply_fu_288_ap_start;
reg    ap_reg_grp_GF_multiply_fu_299_ap_start;
reg    ap_reg_grp_GF_multiply_fu_310_ap_start;
reg    ap_reg_grp_GF_multiply_fu_321_ap_start;
reg    ap_reg_grp_GF_multiply_fu_332_ap_start;
reg    ap_reg_grp_GF_multiply_fu_343_ap_start;
reg    ap_reg_grp_GF_multiply_fu_354_ap_start;
reg    ap_reg_grp_GF_multiply_fu_365_ap_start;
reg    ap_reg_grp_GF_multiply_fu_376_ap_start;
reg    ap_reg_grp_GF_multiply_fu_387_ap_start;
reg    ap_reg_grp_GF_multiply_fu_398_ap_start;
reg    ap_reg_grp_GF_multiply_fu_409_ap_start;
reg    ap_reg_grp_GF_multiply_fu_420_ap_start;
reg    ap_reg_grp_GF_multiply_fu_431_ap_start;
reg    ap_reg_grp_GF_multiply_fu_442_ap_start;
reg    ap_reg_grp_GF_multiply_fu_453_ap_start;
reg    ap_reg_grp_GF_multiply_fu_464_ap_start;
reg    ap_reg_grp_GF_multiply_fu_475_ap_start;
reg    ap_reg_grp_GF_multiply_fu_486_ap_start;
reg    ap_reg_grp_GF_multiply_fu_497_ap_start;
reg    ap_reg_grp_GF_multiply_fu_508_ap_start;
reg    ap_reg_grp_GF_multiply_fu_519_ap_start;
reg    ap_reg_grp_GF_multiply_fu_530_ap_start;
reg    ap_reg_grp_GF_multiply_fu_541_ap_start;
reg    ap_reg_grp_GF_multiply_fu_552_ap_start;
reg    ap_reg_grp_GF_multiply_fu_563_ap_start;
wire   [2:0] tmp_10_fu_611_p1;
wire   [367:0] tmp_9_fu_949_p2;
wire   [367:0] tmp_13_1_fu_980_p2;
wire   [367:0] tmp_13_2_fu_1011_p2;
wire   [367:0] tmp_13_3_fu_1042_p2;
wire   [367:0] tmp_8_fu_673_p2;
wire   [367:0] tmp_8_1_fu_682_p2;
wire   [367:0] tmp_8_2_fu_691_p2;
wire   [367:0] tmp_8_3_fu_700_p2;
wire   [367:0] tmp_8_4_fu_709_p2;
wire   [367:0] tmp_8_5_fu_718_p2;
wire   [367:0] tmp_8_6_fu_727_p2;
wire   [367:0] tmp_8_7_fu_736_p2;
wire   [7:0] tmp3_fu_757_p2;
wire   [7:0] tmp2_fu_751_p2;
wire   [7:0] tmp6_fu_775_p2;
wire   [7:0] tmp5_fu_769_p2;
wire   [7:0] tmp4_fu_781_p2;
wire   [7:0] tmp1_fu_763_p2;
wire   [7:0] tmp9_fu_799_p2;
wire   [7:0] tmp8_fu_793_p2;
wire   [7:0] tmp12_fu_817_p2;
wire   [7:0] tmp11_fu_811_p2;
wire   [7:0] tmp10_fu_823_p2;
wire   [7:0] tmp7_fu_805_p2;
wire   [7:0] tmp15_fu_841_p2;
wire   [7:0] tmp14_fu_835_p2;
wire   [7:0] tmp18_fu_859_p2;
wire   [7:0] tmp17_fu_853_p2;
wire   [7:0] tmp16_fu_865_p2;
wire   [7:0] tmp13_fu_847_p2;
wire   [7:0] tmp21_fu_883_p2;
wire   [7:0] tmp20_fu_877_p2;
wire   [7:0] tmp24_fu_901_p2;
wire   [7:0] tmp23_fu_895_p2;
wire   [7:0] tmp22_fu_907_p2;
wire   [7:0] tmp19_fu_889_p2;
wire   [367:0] tmp_5_fu_919_p2;
wire   [367:0] tmp_6_fu_924_p2;
wire   [7:0] output_0_fu_787_p2;
wire   [367:0] tmp_2_fu_940_p1;
wire   [367:0] tmp_7_fu_944_p2;
wire   [367:0] tmp_s_fu_934_p2;
wire   [7:0] output_1_fu_829_p2;
wire   [367:0] tmp_11_1_fu_971_p1;
wire   [367:0] tmp_12_1_fu_975_p2;
wire   [367:0] tmp_10_1_fu_965_p2;
wire   [7:0] output_2_fu_871_p2;
wire   [367:0] tmp_11_2_fu_1002_p1;
wire   [367:0] tmp_12_2_fu_1006_p2;
wire   [367:0] tmp_10_2_fu_996_p2;
wire   [7:0] output_3_fu_913_p2;
wire   [367:0] tmp_11_3_fu_1033_p1;
wire   [367:0] tmp_12_3_fu_1037_p2;
wire   [367:0] tmp_10_3_fu_1027_p2;
wire    ap_CS_fsm_state6;
reg   [3:0] ap_NS_fsm;
reg    ap_idle_pp0;
wire    ap_enable_pp0;

// power-on initialization
initial begin
#0 ap_CS_fsm = 4'd1;
#0 data_buffer_0 = 368'd0;
#0 data_buffer_1 = 368'd0;
#0 data_buffer_2 = 368'd0;
#0 data_buffer_3 = 368'd0;
#0 data_buffer_4 = 368'd0;
#0 data_buffer_5 = 368'd0;
#0 data_buffer_6 = 368'd0;
#0 data_buffer_7 = 368'd0;
#0 parity_buffer_0 = 368'd0;
#0 parity_buffer_1 = 368'd0;
#0 parity_buffer_2 = 368'd0;
#0 parity_buffer_3 = 368'd0;
#0 ap_enable_reg_pp0_iter0 = 1'b0;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 ap_enable_reg_pp0_iter2 = 1'b0;
#0 ap_enable_reg_pp0_iter3 = 1'b0;
#0 ap_reg_grp_GF_multiply_fu_222_ap_start = 1'b0;
#0 ap_reg_grp_GF_multiply_fu_233_ap_start = 1'b0;
#0 ap_reg_grp_GF_multiply_fu_244_ap_start = 1'b0;
#0 ap_reg_grp_GF_multiply_fu_255_ap_start = 1'b0;
#0 ap_reg_grp_GF_multiply_fu_266_ap_start = 1'b0;
#0 ap_reg_grp_GF_multiply_fu_277_ap_start = 1'b0;
#0 ap_reg_grp_GF_multiply_fu_288_ap_start = 1'b0;
#0 ap_reg_grp_GF_multiply_fu_299_ap_start = 1'b0;
#0 ap_reg_grp_GF_multiply_fu_310_ap_start = 1'b0;
#0 ap_reg_grp_GF_multiply_fu_321_ap_start = 1'b0;
#0 ap_reg_grp_GF_multiply_fu_332_ap_start = 1'b0;
#0 ap_reg_grp_GF_multiply_fu_343_ap_start = 1'b0;
#0 ap_reg_grp_GF_multiply_fu_354_ap_start = 1'b0;
#0 ap_reg_grp_GF_multiply_fu_365_ap_start = 1'b0;
#0 ap_reg_grp_GF_multiply_fu_376_ap_start = 1'b0;
#0 ap_reg_grp_GF_multiply_fu_387_ap_start = 1'b0;
#0 ap_reg_grp_GF_multiply_fu_398_ap_start = 1'b0;
#0 ap_reg_grp_GF_multiply_fu_409_ap_start = 1'b0;
#0 ap_reg_grp_GF_multiply_fu_420_ap_start = 1'b0;
#0 ap_reg_grp_GF_multiply_fu_431_ap_start = 1'b0;
#0 ap_reg_grp_GF_multiply_fu_442_ap_start = 1'b0;
#0 ap_reg_grp_GF_multiply_fu_453_ap_start = 1'b0;
#0 ap_reg_grp_GF_multiply_fu_464_ap_start = 1'b0;
#0 ap_reg_grp_GF_multiply_fu_475_ap_start = 1'b0;
#0 ap_reg_grp_GF_multiply_fu_486_ap_start = 1'b0;
#0 ap_reg_grp_GF_multiply_fu_497_ap_start = 1'b0;
#0 ap_reg_grp_GF_multiply_fu_508_ap_start = 1'b0;
#0 ap_reg_grp_GF_multiply_fu_519_ap_start = 1'b0;
#0 ap_reg_grp_GF_multiply_fu_530_ap_start = 1'b0;
#0 ap_reg_grp_GF_multiply_fu_541_ap_start = 1'b0;
#0 ap_reg_grp_GF_multiply_fu_552_ap_start = 1'b0;
#0 ap_reg_grp_GF_multiply_fu_563_ap_start = 1'b0;
end

aesl_mux_load_4i368P tmp_aesl_mux_load_4i368P_fu_208(
    .empty(tmp_aesl_mux_load_4i368P_fu_208_empty),
    .parity_buffer_3(parity_buffer_3),
    .parity_buffer_0(parity_buffer_0),
    .parity_buffer_1(parity_buffer_1),
    .parity_buffer_2(parity_buffer_2),
    .ap_return(tmp_aesl_mux_load_4i368P_fu_208_ap_return)
);

GF_multiply grp_GF_multiply_fu_222(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(grp_GF_multiply_fu_222_ap_start),
    .ap_done(grp_GF_multiply_fu_222_ap_done),
    .ap_idle(grp_GF_multiply_fu_222_ap_idle),
    .ap_ready(grp_GF_multiply_fu_222_ap_ready),
    .X(input_0_reg_1114),
    .Y(8'd76),
    .ap_return(grp_GF_multiply_fu_222_ap_return)
);

GF_multiply grp_GF_multiply_fu_233(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(grp_GF_multiply_fu_233_ap_start),
    .ap_done(grp_GF_multiply_fu_233_ap_done),
    .ap_idle(grp_GF_multiply_fu_233_ap_idle),
    .ap_ready(grp_GF_multiply_fu_233_ap_ready),
    .X(input_1_reg_1122),
    .Y(8'd103),
    .ap_return(grp_GF_multiply_fu_233_ap_return)
);

GF_multiply grp_GF_multiply_fu_244(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(grp_GF_multiply_fu_244_ap_start),
    .ap_done(grp_GF_multiply_fu_244_ap_done),
    .ap_idle(grp_GF_multiply_fu_244_ap_idle),
    .ap_ready(grp_GF_multiply_fu_244_ap_ready),
    .X(input_2_reg_1130),
    .Y(8'd149),
    .ap_return(grp_GF_multiply_fu_244_ap_return)
);

GF_multiply grp_GF_multiply_fu_255(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(grp_GF_multiply_fu_255_ap_start),
    .ap_done(grp_GF_multiply_fu_255_ap_done),
    .ap_idle(grp_GF_multiply_fu_255_ap_idle),
    .ap_ready(grp_GF_multiply_fu_255_ap_ready),
    .X(input_3_reg_1138),
    .Y(8'd51),
    .ap_return(grp_GF_multiply_fu_255_ap_return)
);

GF_multiply grp_GF_multiply_fu_266(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(grp_GF_multiply_fu_266_ap_start),
    .ap_done(grp_GF_multiply_fu_266_ap_done),
    .ap_idle(grp_GF_multiply_fu_266_ap_idle),
    .ap_ready(grp_GF_multiply_fu_266_ap_ready),
    .X(input_4_reg_1146),
    .Y(8'd248),
    .ap_return(grp_GF_multiply_fu_266_ap_return)
);

GF_multiply grp_GF_multiply_fu_277(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(grp_GF_multiply_fu_277_ap_start),
    .ap_done(grp_GF_multiply_fu_277_ap_done),
    .ap_idle(grp_GF_multiply_fu_277_ap_idle),
    .ap_ready(grp_GF_multiply_fu_277_ap_ready),
    .X(input_5_reg_1154),
    .Y(8'd170),
    .ap_return(grp_GF_multiply_fu_277_ap_return)
);

GF_multiply grp_GF_multiply_fu_288(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(grp_GF_multiply_fu_288_ap_start),
    .ap_done(grp_GF_multiply_fu_288_ap_done),
    .ap_idle(grp_GF_multiply_fu_288_ap_idle),
    .ap_ready(grp_GF_multiply_fu_288_ap_ready),
    .X(input_6_reg_1162),
    .Y(8'd97),
    .ap_return(grp_GF_multiply_fu_288_ap_return)
);

GF_multiply grp_GF_multiply_fu_299(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(grp_GF_multiply_fu_299_ap_start),
    .ap_done(grp_GF_multiply_fu_299_ap_done),
    .ap_idle(grp_GF_multiply_fu_299_ap_idle),
    .ap_ready(grp_GF_multiply_fu_299_ap_ready),
    .X(input_7_reg_1170),
    .Y(8'd54),
    .ap_return(grp_GF_multiply_fu_299_ap_return)
);

GF_multiply grp_GF_multiply_fu_310(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(grp_GF_multiply_fu_310_ap_start),
    .ap_done(grp_GF_multiply_fu_310_ap_done),
    .ap_idle(grp_GF_multiply_fu_310_ap_idle),
    .ap_ready(grp_GF_multiply_fu_310_ap_ready),
    .X(input_0_reg_1114),
    .Y(8'd196),
    .ap_return(grp_GF_multiply_fu_310_ap_return)
);

GF_multiply grp_GF_multiply_fu_321(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(grp_GF_multiply_fu_321_ap_start),
    .ap_done(grp_GF_multiply_fu_321_ap_done),
    .ap_idle(grp_GF_multiply_fu_321_ap_idle),
    .ap_ready(grp_GF_multiply_fu_321_ap_ready),
    .X(input_1_reg_1122),
    .Y(8'd162),
    .ap_return(grp_GF_multiply_fu_321_ap_return)
);

GF_multiply grp_GF_multiply_fu_332(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(grp_GF_multiply_fu_332_ap_start),
    .ap_done(grp_GF_multiply_fu_332_ap_done),
    .ap_idle(grp_GF_multiply_fu_332_ap_idle),
    .ap_ready(grp_GF_multiply_fu_332_ap_ready),
    .X(input_2_reg_1130),
    .Y(8'd35),
    .ap_return(grp_GF_multiply_fu_332_ap_return)
);

GF_multiply grp_GF_multiply_fu_343(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(grp_GF_multiply_fu_343_ap_start),
    .ap_done(grp_GF_multiply_fu_343_ap_done),
    .ap_idle(grp_GF_multiply_fu_343_ap_idle),
    .ap_ready(grp_GF_multiply_fu_343_ap_ready),
    .X(input_3_reg_1138),
    .Y(8'd228),
    .ap_return(grp_GF_multiply_fu_343_ap_return)
);

GF_multiply grp_GF_multiply_fu_354(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(grp_GF_multiply_fu_354_ap_start),
    .ap_done(grp_GF_multiply_fu_354_ap_done),
    .ap_idle(grp_GF_multiply_fu_354_ap_idle),
    .ap_ready(grp_GF_multiply_fu_354_ap_ready),
    .X(input_4_reg_1146),
    .Y(8'd235),
    .ap_return(grp_GF_multiply_fu_354_ap_return)
);

GF_multiply grp_GF_multiply_fu_365(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(grp_GF_multiply_fu_365_ap_start),
    .ap_done(grp_GF_multiply_fu_365_ap_done),
    .ap_idle(grp_GF_multiply_fu_365_ap_idle),
    .ap_ready(grp_GF_multiply_fu_365_ap_ready),
    .X(input_5_reg_1154),
    .Y(8'd41),
    .ap_return(grp_GF_multiply_fu_365_ap_return)
);

GF_multiply grp_GF_multiply_fu_376(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(grp_GF_multiply_fu_376_ap_start),
    .ap_done(grp_GF_multiply_fu_376_ap_done),
    .ap_idle(grp_GF_multiply_fu_376_ap_idle),
    .ap_ready(grp_GF_multiply_fu_376_ap_ready),
    .X(input_6_reg_1162),
    .Y(8'd35),
    .ap_return(grp_GF_multiply_fu_376_ap_return)
);

GF_multiply grp_GF_multiply_fu_387(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(grp_GF_multiply_fu_387_ap_start),
    .ap_done(grp_GF_multiply_fu_387_ap_done),
    .ap_idle(grp_GF_multiply_fu_387_ap_idle),
    .ap_ready(grp_GF_multiply_fu_387_ap_ready),
    .X(input_7_reg_1170),
    .Y(8'd47),
    .ap_return(grp_GF_multiply_fu_387_ap_return)
);

GF_multiply grp_GF_multiply_fu_398(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(grp_GF_multiply_fu_398_ap_start),
    .ap_done(grp_GF_multiply_fu_398_ap_done),
    .ap_idle(grp_GF_multiply_fu_398_ap_idle),
    .ap_ready(grp_GF_multiply_fu_398_ap_ready),
    .X(input_0_reg_1114),
    .Y(8'd214),
    .ap_return(grp_GF_multiply_fu_398_ap_return)
);

GF_multiply grp_GF_multiply_fu_409(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(grp_GF_multiply_fu_409_ap_start),
    .ap_done(grp_GF_multiply_fu_409_ap_done),
    .ap_idle(grp_GF_multiply_fu_409_ap_idle),
    .ap_ready(grp_GF_multiply_fu_409_ap_ready),
    .X(input_1_reg_1122),
    .Y(8'd46),
    .ap_return(grp_GF_multiply_fu_409_ap_return)
);

GF_multiply grp_GF_multiply_fu_420(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(grp_GF_multiply_fu_420_ap_start),
    .ap_done(grp_GF_multiply_fu_420_ap_done),
    .ap_idle(grp_GF_multiply_fu_420_ap_idle),
    .ap_ready(grp_GF_multiply_fu_420_ap_ready),
    .X(input_2_reg_1130),
    .Y(8'd79),
    .ap_return(grp_GF_multiply_fu_420_ap_return)
);

GF_multiply grp_GF_multiply_fu_431(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(grp_GF_multiply_fu_431_ap_start),
    .ap_done(grp_GF_multiply_fu_431_ap_done),
    .ap_idle(grp_GF_multiply_fu_431_ap_idle),
    .ap_ready(grp_GF_multiply_fu_431_ap_ready),
    .X(input_3_reg_1138),
    .Y(8'd120),
    .ap_return(grp_GF_multiply_fu_431_ap_return)
);

GF_multiply grp_GF_multiply_fu_442(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(grp_GF_multiply_fu_442_ap_start),
    .ap_done(grp_GF_multiply_fu_442_ap_done),
    .ap_idle(grp_GF_multiply_fu_442_ap_idle),
    .ap_ready(grp_GF_multiply_fu_442_ap_ready),
    .X(input_4_reg_1146),
    .Y(8'd78),
    .ap_return(grp_GF_multiply_fu_442_ap_return)
);

GF_multiply grp_GF_multiply_fu_453(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(grp_GF_multiply_fu_453_ap_start),
    .ap_done(grp_GF_multiply_fu_453_ap_done),
    .ap_idle(grp_GF_multiply_fu_453_ap_idle),
    .ap_ready(grp_GF_multiply_fu_453_ap_ready),
    .X(input_5_reg_1154),
    .Y(8'd110),
    .ap_return(grp_GF_multiply_fu_453_ap_return)
);

GF_multiply grp_GF_multiply_fu_464(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(grp_GF_multiply_fu_464_ap_start),
    .ap_done(grp_GF_multiply_fu_464_ap_done),
    .ap_idle(grp_GF_multiply_fu_464_ap_idle),
    .ap_ready(grp_GF_multiply_fu_464_ap_ready),
    .X(input_6_reg_1162),
    .Y(8'd150),
    .ap_return(grp_GF_multiply_fu_464_ap_return)
);

GF_multiply grp_GF_multiply_fu_475(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(grp_GF_multiply_fu_475_ap_start),
    .ap_done(grp_GF_multiply_fu_475_ap_done),
    .ap_idle(grp_GF_multiply_fu_475_ap_idle),
    .ap_ready(grp_GF_multiply_fu_475_ap_ready),
    .X(input_7_reg_1170),
    .Y(8'd125),
    .ap_return(grp_GF_multiply_fu_475_ap_return)
);

GF_multiply grp_GF_multiply_fu_486(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(grp_GF_multiply_fu_486_ap_start),
    .ap_done(grp_GF_multiply_fu_486_ap_done),
    .ap_idle(grp_GF_multiply_fu_486_ap_idle),
    .ap_ready(grp_GF_multiply_fu_486_ap_ready),
    .X(input_0_reg_1114),
    .Y(8'd95),
    .ap_return(grp_GF_multiply_fu_486_ap_return)
);

GF_multiply grp_GF_multiply_fu_497(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(grp_GF_multiply_fu_497_ap_start),
    .ap_done(grp_GF_multiply_fu_497_ap_done),
    .ap_idle(grp_GF_multiply_fu_497_ap_idle),
    .ap_ready(grp_GF_multiply_fu_497_ap_ready),
    .X(input_1_reg_1122),
    .Y(8'd234),
    .ap_return(grp_GF_multiply_fu_497_ap_return)
);

GF_multiply grp_GF_multiply_fu_508(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(grp_GF_multiply_fu_508_ap_start),
    .ap_done(grp_GF_multiply_fu_508_ap_done),
    .ap_idle(grp_GF_multiply_fu_508_ap_idle),
    .ap_ready(grp_GF_multiply_fu_508_ap_ready),
    .X(input_2_reg_1130),
    .Y(8'd248),
    .ap_return(grp_GF_multiply_fu_508_ap_return)
);

GF_multiply grp_GF_multiply_fu_519(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(grp_GF_multiply_fu_519_ap_start),
    .ap_done(grp_GF_multiply_fu_519_ap_done),
    .ap_idle(grp_GF_multiply_fu_519_ap_idle),
    .ap_ready(grp_GF_multiply_fu_519_ap_ready),
    .X(input_3_reg_1138),
    .Y(8'd174),
    .ap_return(grp_GF_multiply_fu_519_ap_return)
);

GF_multiply grp_GF_multiply_fu_530(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(grp_GF_multiply_fu_530_ap_start),
    .ap_done(grp_GF_multiply_fu_530_ap_done),
    .ap_idle(grp_GF_multiply_fu_530_ap_idle),
    .ap_ready(grp_GF_multiply_fu_530_ap_ready),
    .X(input_4_reg_1146),
    .Y(8'd92),
    .ap_return(grp_GF_multiply_fu_530_ap_return)
);

GF_multiply grp_GF_multiply_fu_541(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(grp_GF_multiply_fu_541_ap_start),
    .ap_done(grp_GF_multiply_fu_541_ap_done),
    .ap_idle(grp_GF_multiply_fu_541_ap_idle),
    .ap_ready(grp_GF_multiply_fu_541_ap_ready),
    .X(input_5_reg_1154),
    .Y(8'd236),
    .ap_return(grp_GF_multiply_fu_541_ap_return)
);

GF_multiply grp_GF_multiply_fu_552(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(grp_GF_multiply_fu_552_ap_start),
    .ap_done(grp_GF_multiply_fu_552_ap_done),
    .ap_idle(grp_GF_multiply_fu_552_ap_idle),
    .ap_ready(grp_GF_multiply_fu_552_ap_ready),
    .X(input_6_reg_1162),
    .Y(8'd213),
    .ap_return(grp_GF_multiply_fu_552_ap_return)
);

GF_multiply grp_GF_multiply_fu_563(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(grp_GF_multiply_fu_563_ap_start),
    .ap_done(grp_GF_multiply_fu_563_ap_done),
    .ap_idle(grp_GF_multiply_fu_563_ap_idle),
    .ap_ready(grp_GF_multiply_fu_563_ap_ready),
    .X(input_7_reg_1170),
    .Y(8'd101),
    .ap_return(grp_GF_multiply_fu_563_ap_return)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter0 <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp0_stage0) & (ap_block_pp0_stage0_subdone == 1'b0) & (1'b1 == ap_condition_pp0_exit_iter0_state2))) begin
            ap_enable_reg_pp0_iter0 <= 1'b0;
        end else if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1) & (operation_read_read_fu_184_p2 == 8'd2))) begin
            ap_enable_reg_pp0_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if ((ap_block_pp0_stage0_subdone == 1'b0)) begin
            if ((1'b1 == ap_condition_pp0_exit_iter0_state2)) begin
                ap_enable_reg_pp0_iter1 <= (ap_condition_pp0_exit_iter0_state2 ^ 1'b1);
            end else if ((1'b1 == 1'b1)) begin
                ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
            end
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter2 <= 1'b0;
    end else begin
        if ((ap_block_pp0_stage0_subdone == 1'b0)) begin
            ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter3 <= 1'b0;
    end else begin
        if ((ap_block_pp0_stage0_subdone == 1'b0)) begin
            ap_enable_reg_pp0_iter3 <= ap_enable_reg_pp0_iter2;
        end else if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1) & (operation_read_read_fu_184_p2 == 8'd2))) begin
            ap_enable_reg_pp0_iter3 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_reg_grp_GF_multiply_fu_222_ap_start <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp0_stage0) & (ap_block_pp0_stage0_11001 == 1'b0) & (tmp_3_fu_663_p2 == 1'd1) & (1'b1 == ap_enable_reg_pp0_iter0))) begin
            ap_reg_grp_GF_multiply_fu_222_ap_start <= 1'b1;
        end else if ((1'b1 == grp_GF_multiply_fu_222_ap_ready)) begin
            ap_reg_grp_GF_multiply_fu_222_ap_start <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_reg_grp_GF_multiply_fu_233_ap_start <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp0_stage0) & (ap_block_pp0_stage0_11001 == 1'b0) & (tmp_3_fu_663_p2 == 1'd1) & (1'b1 == ap_enable_reg_pp0_iter0))) begin
            ap_reg_grp_GF_multiply_fu_233_ap_start <= 1'b1;
        end else if ((1'b1 == grp_GF_multiply_fu_233_ap_ready)) begin
            ap_reg_grp_GF_multiply_fu_233_ap_start <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_reg_grp_GF_multiply_fu_244_ap_start <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp0_stage0) & (ap_block_pp0_stage0_11001 == 1'b0) & (tmp_3_fu_663_p2 == 1'd1) & (1'b1 == ap_enable_reg_pp0_iter0))) begin
            ap_reg_grp_GF_multiply_fu_244_ap_start <= 1'b1;
        end else if ((1'b1 == grp_GF_multiply_fu_244_ap_ready)) begin
            ap_reg_grp_GF_multiply_fu_244_ap_start <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_reg_grp_GF_multiply_fu_255_ap_start <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp0_stage0) & (ap_block_pp0_stage0_11001 == 1'b0) & (tmp_3_fu_663_p2 == 1'd1) & (1'b1 == ap_enable_reg_pp0_iter0))) begin
            ap_reg_grp_GF_multiply_fu_255_ap_start <= 1'b1;
        end else if ((1'b1 == grp_GF_multiply_fu_255_ap_ready)) begin
            ap_reg_grp_GF_multiply_fu_255_ap_start <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_reg_grp_GF_multiply_fu_266_ap_start <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp0_stage0) & (ap_block_pp0_stage0_11001 == 1'b0) & (tmp_3_fu_663_p2 == 1'd1) & (1'b1 == ap_enable_reg_pp0_iter0))) begin
            ap_reg_grp_GF_multiply_fu_266_ap_start <= 1'b1;
        end else if ((1'b1 == grp_GF_multiply_fu_266_ap_ready)) begin
            ap_reg_grp_GF_multiply_fu_266_ap_start <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_reg_grp_GF_multiply_fu_277_ap_start <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp0_stage0) & (ap_block_pp0_stage0_11001 == 1'b0) & (tmp_3_fu_663_p2 == 1'd1) & (1'b1 == ap_enable_reg_pp0_iter0))) begin
            ap_reg_grp_GF_multiply_fu_277_ap_start <= 1'b1;
        end else if ((1'b1 == grp_GF_multiply_fu_277_ap_ready)) begin
            ap_reg_grp_GF_multiply_fu_277_ap_start <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_reg_grp_GF_multiply_fu_288_ap_start <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp0_stage0) & (ap_block_pp0_stage0_11001 == 1'b0) & (tmp_3_fu_663_p2 == 1'd1) & (1'b1 == ap_enable_reg_pp0_iter0))) begin
            ap_reg_grp_GF_multiply_fu_288_ap_start <= 1'b1;
        end else if ((1'b1 == grp_GF_multiply_fu_288_ap_ready)) begin
            ap_reg_grp_GF_multiply_fu_288_ap_start <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_reg_grp_GF_multiply_fu_299_ap_start <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp0_stage0) & (ap_block_pp0_stage0_11001 == 1'b0) & (tmp_3_fu_663_p2 == 1'd1) & (1'b1 == ap_enable_reg_pp0_iter0))) begin
            ap_reg_grp_GF_multiply_fu_299_ap_start <= 1'b1;
        end else if ((1'b1 == grp_GF_multiply_fu_299_ap_ready)) begin
            ap_reg_grp_GF_multiply_fu_299_ap_start <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_reg_grp_GF_multiply_fu_310_ap_start <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp0_stage0) & (ap_block_pp0_stage0_11001 == 1'b0) & (tmp_3_fu_663_p2 == 1'd1) & (1'b1 == ap_enable_reg_pp0_iter0))) begin
            ap_reg_grp_GF_multiply_fu_310_ap_start <= 1'b1;
        end else if ((1'b1 == grp_GF_multiply_fu_310_ap_ready)) begin
            ap_reg_grp_GF_multiply_fu_310_ap_start <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_reg_grp_GF_multiply_fu_321_ap_start <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp0_stage0) & (ap_block_pp0_stage0_11001 == 1'b0) & (tmp_3_fu_663_p2 == 1'd1) & (1'b1 == ap_enable_reg_pp0_iter0))) begin
            ap_reg_grp_GF_multiply_fu_321_ap_start <= 1'b1;
        end else if ((1'b1 == grp_GF_multiply_fu_321_ap_ready)) begin
            ap_reg_grp_GF_multiply_fu_321_ap_start <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_reg_grp_GF_multiply_fu_332_ap_start <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp0_stage0) & (ap_block_pp0_stage0_11001 == 1'b0) & (tmp_3_fu_663_p2 == 1'd1) & (1'b1 == ap_enable_reg_pp0_iter0))) begin
            ap_reg_grp_GF_multiply_fu_332_ap_start <= 1'b1;
        end else if ((1'b1 == grp_GF_multiply_fu_332_ap_ready)) begin
            ap_reg_grp_GF_multiply_fu_332_ap_start <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_reg_grp_GF_multiply_fu_343_ap_start <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp0_stage0) & (ap_block_pp0_stage0_11001 == 1'b0) & (tmp_3_fu_663_p2 == 1'd1) & (1'b1 == ap_enable_reg_pp0_iter0))) begin
            ap_reg_grp_GF_multiply_fu_343_ap_start <= 1'b1;
        end else if ((1'b1 == grp_GF_multiply_fu_343_ap_ready)) begin
            ap_reg_grp_GF_multiply_fu_343_ap_start <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_reg_grp_GF_multiply_fu_354_ap_start <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp0_stage0) & (ap_block_pp0_stage0_11001 == 1'b0) & (tmp_3_fu_663_p2 == 1'd1) & (1'b1 == ap_enable_reg_pp0_iter0))) begin
            ap_reg_grp_GF_multiply_fu_354_ap_start <= 1'b1;
        end else if ((1'b1 == grp_GF_multiply_fu_354_ap_ready)) begin
            ap_reg_grp_GF_multiply_fu_354_ap_start <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_reg_grp_GF_multiply_fu_365_ap_start <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp0_stage0) & (ap_block_pp0_stage0_11001 == 1'b0) & (tmp_3_fu_663_p2 == 1'd1) & (1'b1 == ap_enable_reg_pp0_iter0))) begin
            ap_reg_grp_GF_multiply_fu_365_ap_start <= 1'b1;
        end else if ((1'b1 == grp_GF_multiply_fu_365_ap_ready)) begin
            ap_reg_grp_GF_multiply_fu_365_ap_start <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_reg_grp_GF_multiply_fu_376_ap_start <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp0_stage0) & (ap_block_pp0_stage0_11001 == 1'b0) & (tmp_3_fu_663_p2 == 1'd1) & (1'b1 == ap_enable_reg_pp0_iter0))) begin
            ap_reg_grp_GF_multiply_fu_376_ap_start <= 1'b1;
        end else if ((1'b1 == grp_GF_multiply_fu_376_ap_ready)) begin
            ap_reg_grp_GF_multiply_fu_376_ap_start <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_reg_grp_GF_multiply_fu_387_ap_start <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp0_stage0) & (ap_block_pp0_stage0_11001 == 1'b0) & (tmp_3_fu_663_p2 == 1'd1) & (1'b1 == ap_enable_reg_pp0_iter0))) begin
            ap_reg_grp_GF_multiply_fu_387_ap_start <= 1'b1;
        end else if ((1'b1 == grp_GF_multiply_fu_387_ap_ready)) begin
            ap_reg_grp_GF_multiply_fu_387_ap_start <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_reg_grp_GF_multiply_fu_398_ap_start <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp0_stage0) & (ap_block_pp0_stage0_11001 == 1'b0) & (tmp_3_fu_663_p2 == 1'd1) & (1'b1 == ap_enable_reg_pp0_iter0))) begin
            ap_reg_grp_GF_multiply_fu_398_ap_start <= 1'b1;
        end else if ((1'b1 == grp_GF_multiply_fu_398_ap_ready)) begin
            ap_reg_grp_GF_multiply_fu_398_ap_start <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_reg_grp_GF_multiply_fu_409_ap_start <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp0_stage0) & (ap_block_pp0_stage0_11001 == 1'b0) & (tmp_3_fu_663_p2 == 1'd1) & (1'b1 == ap_enable_reg_pp0_iter0))) begin
            ap_reg_grp_GF_multiply_fu_409_ap_start <= 1'b1;
        end else if ((1'b1 == grp_GF_multiply_fu_409_ap_ready)) begin
            ap_reg_grp_GF_multiply_fu_409_ap_start <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_reg_grp_GF_multiply_fu_420_ap_start <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp0_stage0) & (ap_block_pp0_stage0_11001 == 1'b0) & (tmp_3_fu_663_p2 == 1'd1) & (1'b1 == ap_enable_reg_pp0_iter0))) begin
            ap_reg_grp_GF_multiply_fu_420_ap_start <= 1'b1;
        end else if ((1'b1 == grp_GF_multiply_fu_420_ap_ready)) begin
            ap_reg_grp_GF_multiply_fu_420_ap_start <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_reg_grp_GF_multiply_fu_431_ap_start <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp0_stage0) & (ap_block_pp0_stage0_11001 == 1'b0) & (tmp_3_fu_663_p2 == 1'd1) & (1'b1 == ap_enable_reg_pp0_iter0))) begin
            ap_reg_grp_GF_multiply_fu_431_ap_start <= 1'b1;
        end else if ((1'b1 == grp_GF_multiply_fu_431_ap_ready)) begin
            ap_reg_grp_GF_multiply_fu_431_ap_start <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_reg_grp_GF_multiply_fu_442_ap_start <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp0_stage0) & (ap_block_pp0_stage0_11001 == 1'b0) & (tmp_3_fu_663_p2 == 1'd1) & (1'b1 == ap_enable_reg_pp0_iter0))) begin
            ap_reg_grp_GF_multiply_fu_442_ap_start <= 1'b1;
        end else if ((1'b1 == grp_GF_multiply_fu_442_ap_ready)) begin
            ap_reg_grp_GF_multiply_fu_442_ap_start <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_reg_grp_GF_multiply_fu_453_ap_start <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp0_stage0) & (ap_block_pp0_stage0_11001 == 1'b0) & (tmp_3_fu_663_p2 == 1'd1) & (1'b1 == ap_enable_reg_pp0_iter0))) begin
            ap_reg_grp_GF_multiply_fu_453_ap_start <= 1'b1;
        end else if ((1'b1 == grp_GF_multiply_fu_453_ap_ready)) begin
            ap_reg_grp_GF_multiply_fu_453_ap_start <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_reg_grp_GF_multiply_fu_464_ap_start <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp0_stage0) & (ap_block_pp0_stage0_11001 == 1'b0) & (tmp_3_fu_663_p2 == 1'd1) & (1'b1 == ap_enable_reg_pp0_iter0))) begin
            ap_reg_grp_GF_multiply_fu_464_ap_start <= 1'b1;
        end else if ((1'b1 == grp_GF_multiply_fu_464_ap_ready)) begin
            ap_reg_grp_GF_multiply_fu_464_ap_start <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_reg_grp_GF_multiply_fu_475_ap_start <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp0_stage0) & (ap_block_pp0_stage0_11001 == 1'b0) & (tmp_3_fu_663_p2 == 1'd1) & (1'b1 == ap_enable_reg_pp0_iter0))) begin
            ap_reg_grp_GF_multiply_fu_475_ap_start <= 1'b1;
        end else if ((1'b1 == grp_GF_multiply_fu_475_ap_ready)) begin
            ap_reg_grp_GF_multiply_fu_475_ap_start <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_reg_grp_GF_multiply_fu_486_ap_start <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp0_stage0) & (ap_block_pp0_stage0_11001 == 1'b0) & (tmp_3_fu_663_p2 == 1'd1) & (1'b1 == ap_enable_reg_pp0_iter0))) begin
            ap_reg_grp_GF_multiply_fu_486_ap_start <= 1'b1;
        end else if ((1'b1 == grp_GF_multiply_fu_486_ap_ready)) begin
            ap_reg_grp_GF_multiply_fu_486_ap_start <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_reg_grp_GF_multiply_fu_497_ap_start <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp0_stage0) & (ap_block_pp0_stage0_11001 == 1'b0) & (tmp_3_fu_663_p2 == 1'd1) & (1'b1 == ap_enable_reg_pp0_iter0))) begin
            ap_reg_grp_GF_multiply_fu_497_ap_start <= 1'b1;
        end else if ((1'b1 == grp_GF_multiply_fu_497_ap_ready)) begin
            ap_reg_grp_GF_multiply_fu_497_ap_start <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_reg_grp_GF_multiply_fu_508_ap_start <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp0_stage0) & (ap_block_pp0_stage0_11001 == 1'b0) & (tmp_3_fu_663_p2 == 1'd1) & (1'b1 == ap_enable_reg_pp0_iter0))) begin
            ap_reg_grp_GF_multiply_fu_508_ap_start <= 1'b1;
        end else if ((1'b1 == grp_GF_multiply_fu_508_ap_ready)) begin
            ap_reg_grp_GF_multiply_fu_508_ap_start <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_reg_grp_GF_multiply_fu_519_ap_start <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp0_stage0) & (ap_block_pp0_stage0_11001 == 1'b0) & (tmp_3_fu_663_p2 == 1'd1) & (1'b1 == ap_enable_reg_pp0_iter0))) begin
            ap_reg_grp_GF_multiply_fu_519_ap_start <= 1'b1;
        end else if ((1'b1 == grp_GF_multiply_fu_519_ap_ready)) begin
            ap_reg_grp_GF_multiply_fu_519_ap_start <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_reg_grp_GF_multiply_fu_530_ap_start <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp0_stage0) & (ap_block_pp0_stage0_11001 == 1'b0) & (tmp_3_fu_663_p2 == 1'd1) & (1'b1 == ap_enable_reg_pp0_iter0))) begin
            ap_reg_grp_GF_multiply_fu_530_ap_start <= 1'b1;
        end else if ((1'b1 == grp_GF_multiply_fu_530_ap_ready)) begin
            ap_reg_grp_GF_multiply_fu_530_ap_start <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_reg_grp_GF_multiply_fu_541_ap_start <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp0_stage0) & (ap_block_pp0_stage0_11001 == 1'b0) & (tmp_3_fu_663_p2 == 1'd1) & (1'b1 == ap_enable_reg_pp0_iter0))) begin
            ap_reg_grp_GF_multiply_fu_541_ap_start <= 1'b1;
        end else if ((1'b1 == grp_GF_multiply_fu_541_ap_ready)) begin
            ap_reg_grp_GF_multiply_fu_541_ap_start <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_reg_grp_GF_multiply_fu_552_ap_start <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp0_stage0) & (ap_block_pp0_stage0_11001 == 1'b0) & (tmp_3_fu_663_p2 == 1'd1) & (1'b1 == ap_enable_reg_pp0_iter0))) begin
            ap_reg_grp_GF_multiply_fu_552_ap_start <= 1'b1;
        end else if ((1'b1 == grp_GF_multiply_fu_552_ap_ready)) begin
            ap_reg_grp_GF_multiply_fu_552_ap_start <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_reg_grp_GF_multiply_fu_563_ap_start <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp0_stage0) & (ap_block_pp0_stage0_11001 == 1'b0) & (tmp_3_fu_663_p2 == 1'd1) & (1'b1 == ap_enable_reg_pp0_iter0))) begin
            ap_reg_grp_GF_multiply_fu_563_ap_start <= 1'b1;
        end else if ((1'b1 == grp_GF_multiply_fu_563_ap_ready)) begin
            ap_reg_grp_GF_multiply_fu_563_ap_start <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1) & (operation_read_read_fu_184_p2 == 8'd2))) begin
        i_reg_197 <= 9'd0;
    end else if (((1'b1 == ap_CS_fsm_pp0_stage0) & (ap_block_pp0_stage0_11001 == 1'b0) & (tmp_3_fu_663_p2 == 1'd1) & (1'b1 == ap_enable_reg_pp0_iter0))) begin
        i_reg_197 <= i_1_fu_745_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (ap_block_pp0_stage0_11001 == 1'b0))) begin
        ap_reg_pp0_iter1_tmp_3_reg_1101 <= tmp_3_reg_1101;
        ap_reg_pp0_iter1_tmp_4_reg_1105[8 : 0] <= tmp_4_reg_1105[8 : 0];
        tmp_3_reg_1101 <= tmp_3_fu_663_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((ap_block_pp0_stage0_11001 == 1'b0)) begin
        ap_reg_pp0_iter2_tmp_3_reg_1101 <= ap_reg_pp0_iter1_tmp_3_reg_1101;
        ap_reg_pp0_iter2_tmp_4_reg_1105[8 : 0] <= ap_reg_pp0_iter1_tmp_4_reg_1105[8 : 0];
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1) & (operation_read_read_fu_184_p2 == 8'd1) & (tmp_10_fu_611_p1 == 3'd0))) begin
        data_buffer_0 <= data;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1) & (operation_read_read_fu_184_p2 == 8'd2))) begin
        data_buffer_0_load_reg_1058 <= data_buffer_0;
        data_buffer_1_load_reg_1063 <= data_buffer_1;
        data_buffer_2_load_reg_1068 <= data_buffer_2;
        data_buffer_3_load_reg_1073 <= data_buffer_3;
        data_buffer_4_load_reg_1078 <= data_buffer_4;
        data_buffer_5_load_reg_1083 <= data_buffer_5;
        data_buffer_6_load_reg_1088 <= data_buffer_6;
        data_buffer_7_load_reg_1093 <= data_buffer_7;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1) & (operation_read_read_fu_184_p2 == 8'd1) & (tmp_10_fu_611_p1 == 3'd1))) begin
        data_buffer_1 <= data;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1) & (operation_read_read_fu_184_p2 == 8'd1) & (tmp_10_fu_611_p1 == 3'd2))) begin
        data_buffer_2 <= data;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1) & (operation_read_read_fu_184_p2 == 8'd1) & (tmp_10_fu_611_p1 == 3'd3))) begin
        data_buffer_3 <= data;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1) & (operation_read_read_fu_184_p2 == 8'd1) & (tmp_10_fu_611_p1 == 3'd4))) begin
        data_buffer_4 <= data;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1) & (operation_read_read_fu_184_p2 == 8'd1) & (tmp_10_fu_611_p1 == 3'd5))) begin
        data_buffer_5 <= data;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1) & (operation_read_read_fu_184_p2 == 8'd1) & (tmp_10_fu_611_p1 == 3'd6))) begin
        data_buffer_6 <= data;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1) & (operation_read_read_fu_184_p2 == 8'd1) & (tmp_10_fu_611_p1 == 3'd7))) begin
        data_buffer_7 <= data;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (ap_block_pp0_stage0_11001 == 1'b0) & (tmp_3_fu_663_p2 == 1'd1))) begin
        input_0_reg_1114 <= input_0_fu_678_p1;
        input_1_reg_1122 <= input_1_fu_687_p1;
        input_2_reg_1130 <= input_2_fu_696_p1;
        input_3_reg_1138 <= input_3_fu_705_p1;
        input_4_reg_1146 <= input_4_fu_714_p1;
        input_5_reg_1154 <= input_5_fu_723_p1;
        input_6_reg_1162 <= input_6_fu_732_p1;
        input_7_reg_1170 <= input_7_fu_741_p1;
        tmp_4_reg_1105[8 : 0] <= tmp_4_fu_669_p1[8 : 0];
    end
end

always @ (posedge ap_clk) begin
    if (((ap_block_pp0_stage0_11001 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter3) & (ap_reg_pp0_iter2_tmp_3_reg_1101 == 1'd1))) begin
        parity_buffer_0 <= tmp_9_fu_949_p2;
        parity_buffer_1 <= tmp_13_1_fu_980_p2;
        parity_buffer_2 <= tmp_13_2_fu_1011_p2;
        parity_buffer_3 <= tmp_13_3_fu_1042_p2;
    end
end

always @ (*) begin
    if ((tmp_3_fu_663_p2 == 1'd0)) begin
        ap_condition_pp0_exit_iter0_state2 = 1'b1;
    end else begin
        ap_condition_pp0_exit_iter0_state2 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state6)) begin
        ap_done = 1'b1;
    end else begin
        ap_done = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_start) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_enable_reg_pp0_iter0) & (1'b0 == ap_enable_reg_pp0_iter1) & (1'b0 == ap_enable_reg_pp0_iter2) & (1'b0 == ap_enable_reg_pp0_iter3))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state6)) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1) & (operation_read_read_fu_184_p2 == 8'd4))) begin
        parity_ap_vld = 1'b1;
    end else begin
        parity_ap_vld = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1) & (((operation_read_read_fu_184_p2 == 8'd1) & (tmp_10_fu_611_p1 == 3'd0)) | ((operation_read_read_fu_184_p2 == 8'd1) & (tmp_10_fu_611_p1 == 3'd1)) | ((operation_read_read_fu_184_p2 == 8'd1) & (tmp_10_fu_611_p1 == 3'd2)) | ((operation_read_read_fu_184_p2 == 8'd1) & (tmp_10_fu_611_p1 == 3'd3)) | ((operation_read_read_fu_184_p2 == 8'd1) & (tmp_10_fu_611_p1 == 3'd4)) | ((operation_read_read_fu_184_p2 == 8'd1) & (tmp_10_fu_611_p1 == 3'd5)) | ((operation_read_read_fu_184_p2 == 8'd1) & (tmp_10_fu_611_p1 == 3'd6)) | ((operation_read_read_fu_184_p2 == 8'd1) & (tmp_10_fu_611_p1 == 3'd7))))) begin
                ap_NS_fsm = ap_ST_fsm_state7;
            end else if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1) & (operation_read_read_fu_184_p2 == 8'd2))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1) & ((operation_read_read_fu_184_p2 == 8'd4) | (~(operation_read_read_fu_184_p2 == 8'd1) & ~(operation_read_read_fu_184_p2 == 8'd2))))) begin
                ap_NS_fsm = ap_ST_fsm_state6;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_pp0_stage0 : begin
            if ((~((ap_block_pp0_stage0_subdone == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter3) & (ap_enable_reg_pp0_iter2 == 1'b0)) & ~((1'b1 == ap_enable_reg_pp0_iter0) & (ap_block_pp0_stage0_subdone == 1'b0) & (tmp_3_fu_663_p2 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b0)))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else if ((((ap_block_pp0_stage0_subdone == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter3) & (ap_enable_reg_pp0_iter2 == 1'b0)) | ((1'b1 == ap_enable_reg_pp0_iter0) & (ap_block_pp0_stage0_subdone == 1'b0) & (tmp_3_fu_663_p2 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b0)))) begin
                ap_NS_fsm = ap_ST_fsm_state6;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end
        end
        ap_ST_fsm_state6 : begin
            ap_NS_fsm = ap_ST_fsm_state1;
        end
        ap_ST_fsm_state7 : begin
            ap_NS_fsm = ap_ST_fsm_state6;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state6 = ap_CS_fsm[32'd2];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_subdone = ~(1'b1 == 1'b1);

assign ap_block_state2_pp0_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state3_pp0_stage0_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state4_pp0_stage0_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state5_pp0_stage0_iter3 = ~(1'b1 == 1'b1);

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign grp_GF_multiply_fu_222_ap_start = ap_reg_grp_GF_multiply_fu_222_ap_start;

assign grp_GF_multiply_fu_233_ap_start = ap_reg_grp_GF_multiply_fu_233_ap_start;

assign grp_GF_multiply_fu_244_ap_start = ap_reg_grp_GF_multiply_fu_244_ap_start;

assign grp_GF_multiply_fu_255_ap_start = ap_reg_grp_GF_multiply_fu_255_ap_start;

assign grp_GF_multiply_fu_266_ap_start = ap_reg_grp_GF_multiply_fu_266_ap_start;

assign grp_GF_multiply_fu_277_ap_start = ap_reg_grp_GF_multiply_fu_277_ap_start;

assign grp_GF_multiply_fu_288_ap_start = ap_reg_grp_GF_multiply_fu_288_ap_start;

assign grp_GF_multiply_fu_299_ap_start = ap_reg_grp_GF_multiply_fu_299_ap_start;

assign grp_GF_multiply_fu_310_ap_start = ap_reg_grp_GF_multiply_fu_310_ap_start;

assign grp_GF_multiply_fu_321_ap_start = ap_reg_grp_GF_multiply_fu_321_ap_start;

assign grp_GF_multiply_fu_332_ap_start = ap_reg_grp_GF_multiply_fu_332_ap_start;

assign grp_GF_multiply_fu_343_ap_start = ap_reg_grp_GF_multiply_fu_343_ap_start;

assign grp_GF_multiply_fu_354_ap_start = ap_reg_grp_GF_multiply_fu_354_ap_start;

assign grp_GF_multiply_fu_365_ap_start = ap_reg_grp_GF_multiply_fu_365_ap_start;

assign grp_GF_multiply_fu_376_ap_start = ap_reg_grp_GF_multiply_fu_376_ap_start;

assign grp_GF_multiply_fu_387_ap_start = ap_reg_grp_GF_multiply_fu_387_ap_start;

assign grp_GF_multiply_fu_398_ap_start = ap_reg_grp_GF_multiply_fu_398_ap_start;

assign grp_GF_multiply_fu_409_ap_start = ap_reg_grp_GF_multiply_fu_409_ap_start;

assign grp_GF_multiply_fu_420_ap_start = ap_reg_grp_GF_multiply_fu_420_ap_start;

assign grp_GF_multiply_fu_431_ap_start = ap_reg_grp_GF_multiply_fu_431_ap_start;

assign grp_GF_multiply_fu_442_ap_start = ap_reg_grp_GF_multiply_fu_442_ap_start;

assign grp_GF_multiply_fu_453_ap_start = ap_reg_grp_GF_multiply_fu_453_ap_start;

assign grp_GF_multiply_fu_464_ap_start = ap_reg_grp_GF_multiply_fu_464_ap_start;

assign grp_GF_multiply_fu_475_ap_start = ap_reg_grp_GF_multiply_fu_475_ap_start;

assign grp_GF_multiply_fu_486_ap_start = ap_reg_grp_GF_multiply_fu_486_ap_start;

assign grp_GF_multiply_fu_497_ap_start = ap_reg_grp_GF_multiply_fu_497_ap_start;

assign grp_GF_multiply_fu_508_ap_start = ap_reg_grp_GF_multiply_fu_508_ap_start;

assign grp_GF_multiply_fu_519_ap_start = ap_reg_grp_GF_multiply_fu_519_ap_start;

assign grp_GF_multiply_fu_530_ap_start = ap_reg_grp_GF_multiply_fu_530_ap_start;

assign grp_GF_multiply_fu_541_ap_start = ap_reg_grp_GF_multiply_fu_541_ap_start;

assign grp_GF_multiply_fu_552_ap_start = ap_reg_grp_GF_multiply_fu_552_ap_start;

assign grp_GF_multiply_fu_563_ap_start = ap_reg_grp_GF_multiply_fu_563_ap_start;

assign i_1_fu_745_p2 = (9'd8 + i_reg_197);

assign input_0_fu_678_p1 = tmp_8_fu_673_p2[7:0];

assign input_1_fu_687_p1 = tmp_8_1_fu_682_p2[7:0];

assign input_2_fu_696_p1 = tmp_8_2_fu_691_p2[7:0];

assign input_3_fu_705_p1 = tmp_8_3_fu_700_p2[7:0];

assign input_4_fu_714_p1 = tmp_8_4_fu_709_p2[7:0];

assign input_5_fu_723_p1 = tmp_8_5_fu_718_p2[7:0];

assign input_6_fu_732_p1 = tmp_8_6_fu_727_p2[7:0];

assign input_7_fu_741_p1 = tmp_8_7_fu_736_p2[7:0];

assign operation_read_read_fu_184_p2 = operation;

assign output_0_fu_787_p2 = (tmp4_fu_781_p2 ^ tmp1_fu_763_p2);

assign output_1_fu_829_p2 = (tmp10_fu_823_p2 ^ tmp7_fu_805_p2);

assign output_2_fu_871_p2 = (tmp16_fu_865_p2 ^ tmp13_fu_847_p2);

assign output_3_fu_913_p2 = (tmp22_fu_907_p2 ^ tmp19_fu_889_p2);

assign parity = tmp_aesl_mux_load_4i368P_fu_208_ap_return;

assign tmp10_fu_823_p2 = (tmp12_fu_817_p2 ^ tmp11_fu_811_p2);

assign tmp11_fu_811_p2 = (grp_GF_multiply_fu_354_ap_return ^ grp_GF_multiply_fu_365_ap_return);

assign tmp12_fu_817_p2 = (grp_GF_multiply_fu_376_ap_return ^ grp_GF_multiply_fu_387_ap_return);

assign tmp13_fu_847_p2 = (tmp15_fu_841_p2 ^ tmp14_fu_835_p2);

assign tmp14_fu_835_p2 = (grp_GF_multiply_fu_409_ap_return ^ grp_GF_multiply_fu_398_ap_return);

assign tmp15_fu_841_p2 = (grp_GF_multiply_fu_420_ap_return ^ grp_GF_multiply_fu_431_ap_return);

assign tmp16_fu_865_p2 = (tmp18_fu_859_p2 ^ tmp17_fu_853_p2);

assign tmp17_fu_853_p2 = (grp_GF_multiply_fu_442_ap_return ^ grp_GF_multiply_fu_453_ap_return);

assign tmp18_fu_859_p2 = (grp_GF_multiply_fu_464_ap_return ^ grp_GF_multiply_fu_475_ap_return);

assign tmp19_fu_889_p2 = (tmp21_fu_883_p2 ^ tmp20_fu_877_p2);

assign tmp1_fu_763_p2 = (tmp3_fu_757_p2 ^ tmp2_fu_751_p2);

assign tmp20_fu_877_p2 = (grp_GF_multiply_fu_497_ap_return ^ grp_GF_multiply_fu_486_ap_return);

assign tmp21_fu_883_p2 = (grp_GF_multiply_fu_508_ap_return ^ grp_GF_multiply_fu_519_ap_return);

assign tmp22_fu_907_p2 = (tmp24_fu_901_p2 ^ tmp23_fu_895_p2);

assign tmp23_fu_895_p2 = (grp_GF_multiply_fu_530_ap_return ^ grp_GF_multiply_fu_541_ap_return);

assign tmp24_fu_901_p2 = (grp_GF_multiply_fu_552_ap_return ^ grp_GF_multiply_fu_563_ap_return);

assign tmp2_fu_751_p2 = (grp_GF_multiply_fu_233_ap_return ^ grp_GF_multiply_fu_222_ap_return);

assign tmp3_fu_757_p2 = (grp_GF_multiply_fu_244_ap_return ^ grp_GF_multiply_fu_255_ap_return);

assign tmp4_fu_781_p2 = (tmp6_fu_775_p2 ^ tmp5_fu_769_p2);

assign tmp5_fu_769_p2 = (grp_GF_multiply_fu_266_ap_return ^ grp_GF_multiply_fu_277_ap_return);

assign tmp6_fu_775_p2 = (grp_GF_multiply_fu_288_ap_return ^ grp_GF_multiply_fu_299_ap_return);

assign tmp7_fu_805_p2 = (tmp9_fu_799_p2 ^ tmp8_fu_793_p2);

assign tmp8_fu_793_p2 = (grp_GF_multiply_fu_321_ap_return ^ grp_GF_multiply_fu_310_ap_return);

assign tmp9_fu_799_p2 = (grp_GF_multiply_fu_332_ap_return ^ grp_GF_multiply_fu_343_ap_return);

assign tmp_10_1_fu_965_p2 = (parity_buffer_1 & tmp_6_fu_924_p2);

assign tmp_10_2_fu_996_p2 = (parity_buffer_2 & tmp_6_fu_924_p2);

assign tmp_10_3_fu_1027_p2 = (parity_buffer_3 & tmp_6_fu_924_p2);

assign tmp_10_fu_611_p1 = index[2:0];

assign tmp_11_1_fu_971_p1 = output_1_fu_829_p2;

assign tmp_11_2_fu_1002_p1 = output_2_fu_871_p2;

assign tmp_11_3_fu_1033_p1 = output_3_fu_913_p2;

assign tmp_12_1_fu_975_p2 = tmp_11_1_fu_971_p1 << ap_reg_pp0_iter2_tmp_4_reg_1105;

assign tmp_12_2_fu_1006_p2 = tmp_11_2_fu_1002_p1 << ap_reg_pp0_iter2_tmp_4_reg_1105;

assign tmp_12_3_fu_1037_p2 = tmp_11_3_fu_1033_p1 << ap_reg_pp0_iter2_tmp_4_reg_1105;

assign tmp_13_1_fu_980_p2 = (tmp_12_1_fu_975_p2 | tmp_10_1_fu_965_p2);

assign tmp_13_2_fu_1011_p2 = (tmp_12_2_fu_1006_p2 | tmp_10_2_fu_996_p2);

assign tmp_13_3_fu_1042_p2 = (tmp_12_3_fu_1037_p2 | tmp_10_3_fu_1027_p2);

assign tmp_2_fu_940_p1 = output_0_fu_787_p2;

assign tmp_3_fu_663_p2 = ((i_reg_197 < 9'd368) ? 1'b1 : 1'b0);

assign tmp_4_fu_669_p1 = i_reg_197;

assign tmp_5_fu_919_p2 = 368'd255 << ap_reg_pp0_iter2_tmp_4_reg_1105;

assign tmp_6_fu_924_p2 = (tmp_5_fu_919_p2 ^ 368'd601226901190101306339707032778070279008174732520529886901066488712245510429339761526706943586500787976175353855);

assign tmp_7_fu_944_p2 = tmp_2_fu_940_p1 << ap_reg_pp0_iter2_tmp_4_reg_1105;

assign tmp_8_1_fu_682_p2 = data_buffer_1_load_reg_1063 >> tmp_4_fu_669_p1;

assign tmp_8_2_fu_691_p2 = data_buffer_2_load_reg_1068 >> tmp_4_fu_669_p1;

assign tmp_8_3_fu_700_p2 = data_buffer_3_load_reg_1073 >> tmp_4_fu_669_p1;

assign tmp_8_4_fu_709_p2 = data_buffer_4_load_reg_1078 >> tmp_4_fu_669_p1;

assign tmp_8_5_fu_718_p2 = data_buffer_5_load_reg_1083 >> tmp_4_fu_669_p1;

assign tmp_8_6_fu_727_p2 = data_buffer_6_load_reg_1088 >> tmp_4_fu_669_p1;

assign tmp_8_7_fu_736_p2 = data_buffer_7_load_reg_1093 >> tmp_4_fu_669_p1;

assign tmp_8_fu_673_p2 = data_buffer_0_load_reg_1058 >> tmp_4_fu_669_p1;

assign tmp_9_fu_949_p2 = (tmp_7_fu_944_p2 | tmp_s_fu_934_p2);

assign tmp_aesl_mux_load_4i368P_fu_208_empty = index[1:0];

assign tmp_s_fu_934_p2 = (parity_buffer_0 & tmp_6_fu_924_p2);

always @ (posedge ap_clk) begin
    tmp_4_reg_1105[367:9] <= 359'b00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
    ap_reg_pp0_iter1_tmp_4_reg_1105[367:9] <= 359'b00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
    ap_reg_pp0_iter2_tmp_4_reg_1105[367:9] <= 359'b00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
end

endmodule //RSE_core
