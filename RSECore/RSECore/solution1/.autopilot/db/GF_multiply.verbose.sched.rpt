

================================================================
== Vivado HLS Report for 'GF_multiply'
================================================================
* Date:           Thu Jan 25 10:43:58 2018

* Version:        2017.1 (Build 1846317 on Thu Jun 22 18:17:09 MDT 2017)
* Project:        RSECore
* Solution:       solution1
* Product family: zynquplus
* Target device:  xczu9eg-ffvb1156-1-i-es1


================================================================
== Performance Estimates
================================================================
+ Timing (ns): 
    * Summary: 
    +--------+-------+----------+------------+
    |  Clock | Target| Estimated| Uncertainty|
    +--------+-------+----------+------------+
    |ap_clk  |  10.00|      5.07|        1.25|
    +--------+-------+----------+------------+

+ Latency (clock cycles): 
    * Summary: 
    +-----+-----+-----+-----+----------+
    |  Latency  |  Interval | Pipeline |
    | min | max | min | max |   Type   |
    +-----+-----+-----+-----+----------+
    |    2|    2|    1|    1| function |
    +-----+-----+-----+-----+----------+

    + Detail: 
        * Instance: 
        N/A

        * Loop: 
        N/A

============================================================
+ Verbose Summary: Synthesis Manager
============================================================
InlineROM: 1
ExposeGlobal: 0
============================================================
+ Verbose Summary: CDFG Model
============================================================
IsTopModel: 0
ResetActiveHigh: 1
IsCombinational: 0
IsDatapathOnly: 0
HasWiredReturn: 1
HasMFsm: 2
HasVarLatency: 0
IsPipeline: 1
IsRtlPipelined: 1
IsInstanceOverlapped: 0
IsDontTouch: 0
HasImplIP: 0
IsGatedGlobalClock: 0

+ Individual pipeline summary: 
  * Pipeline-0: initiation interval (II) = 1, depth = 3


============================================================
+ Verbose Summary: Schedule
============================================================
* Number of FSM states: 3
* Pipeline: 1
  Pipeline-0: II = 1, D = 3, States = { 1 2 3 }
* Dataflow Pipeline: 0

* FSM state transitions: 
1 --> 
	2  / true
2 --> 
	3  / true
3 --> 
* FSM state operations: 

 <State 1>: 1.35ns
ST_1: Y_read (6)  [1/1] 0.00ns
_ifconv:1  %Y_read = call i8 @_ssdm_op_Read.ap_auto.i8(i8 %Y) nounwind

ST_1: X_read (7)  [1/1] 0.00ns
_ifconv:2  %X_read = call i8 @_ssdm_op_Read.ap_auto.i8(i8 %X) nounwind

ST_1: tmp (8)  [1/1] 0.86ns  loc: Encoder.c:40
_ifconv:3  %tmp = icmp eq i8 %X_read, 0

ST_1: tmp_s (9)  [1/1] 0.86ns  loc: Encoder.c:40
_ifconv:4  %tmp_s = icmp eq i8 %Y_read, 0

ST_1: tmp_i (11)  [1/1] 0.00ns  loc: Encoder.c:34->Encoder.c:40
_ifconv:6  %tmp_i = zext i8 %X_read to i64

ST_1: Table_addr (12)  [1/1] 0.00ns  loc: Encoder.c:34->Encoder.c:40
_ifconv:7  %Table_addr = getelementptr inbounds [256 x i8]* @Table_r, i64 0, i64 %tmp_i

ST_1: Table_load (13)  [2/2] 1.35ns  loc: Encoder.c:34->Encoder.c:40
_ifconv:8  %Table_load = load i8* %Table_addr, align 1

ST_1: tmp_i1 (14)  [1/1] 0.00ns  loc: Encoder.c:34->Encoder.c:40
_ifconv:9  %tmp_i1 = zext i8 %Y_read to i64

ST_1: Table_addr_1 (15)  [1/1] 0.00ns  loc: Encoder.c:34->Encoder.c:40
_ifconv:10  %Table_addr_1 = getelementptr inbounds [256 x i8]* @Table_r, i64 0, i64 %tmp_i1

ST_1: Table_load_1 (16)  [2/2] 1.35ns  loc: Encoder.c:34->Encoder.c:40
_ifconv:11  %Table_load_1 = load i8* %Table_addr_1, align 1


 <State 2>: 5.07ns
ST_2: Table_load (13)  [1/2] 1.35ns  loc: Encoder.c:34->Encoder.c:40
_ifconv:8  %Table_load = load i8* %Table_addr, align 1

ST_2: Table_load_1 (16)  [1/2] 1.35ns  loc: Encoder.c:34->Encoder.c:40
_ifconv:11  %Table_load_1 = load i8* %Table_addr_1, align 1

ST_2: tmp_i4_cast (17)  [1/1] 0.00ns  loc: Encoder.c:11->Encoder.c:40
_ifconv:12  %tmp_i4_cast = zext i8 %Table_load to i9

ST_2: tmp_i_cast (18)  [1/1] 0.00ns  loc: Encoder.c:11->Encoder.c:40
_ifconv:13  %tmp_i_cast = zext i8 %Table_load_1 to i9

ST_2: Sum (19)  [1/1] 0.91ns  loc: Encoder.c:11->Encoder.c:40
_ifconv:14  %Sum = add i9 %tmp_i4_cast, %tmp_i_cast

ST_2: tmp_25 (20)  [1/1] 0.00ns  loc: Encoder.c:12->Encoder.c:40
_ifconv:15  %tmp_25 = call i1 @_ssdm_op_BitSelect.i1.i9.i32(i9 %Sum, i32 8)

ST_2: tmp_2_i (21)  [1/1] 0.91ns  loc: Encoder.c:34->Encoder.c:40
_ifconv:16  %tmp_2_i = add i8 %Table_load_1, %Table_load

ST_2: tmp_3_i (22)  [1/1] 0.91ns  loc: Encoder.c:12->Encoder.c:40
_ifconv:17  %tmp_3_i = add i8 %tmp_2_i, 1

ST_2: X_assign_4 (23)  [1/1] 0.55ns  loc: Encoder.c:12->Encoder.c:40
_ifconv:18  %X_assign_4 = select i1 %tmp_25, i8 %tmp_3_i, i8 %tmp_2_i

ST_2: tmp_i5 (24)  [1/1] 0.00ns  loc: Encoder.c:26->Encoder.c:40
_ifconv:19  %tmp_i5 = zext i8 %X_assign_4 to i64

ST_2: Table_1_addr (25)  [1/1] 0.00ns  loc: Encoder.c:26->Encoder.c:40
_ifconv:20  %Table_1_addr = getelementptr inbounds [256 x i8]* @Table_1, i64 0, i64 %tmp_i5

ST_2: Table_1_load (26)  [2/2] 1.35ns  loc: Encoder.c:26->Encoder.c:40
_ifconv:21  %Table_1_load = load i8* %Table_1_addr, align 1


 <State 3>: 1.90ns
ST_3: StgValue_26 (5)  [1/1] 0.00ns
_ifconv:0  call void (...)* @_ssdm_op_SpecClockDomain([8 x i8]* @default, [1 x i8]* @empty) nounwind

ST_3: or_cond (10)  [1/1] 0.00ns  loc: Encoder.c:40 (grouped into LUT with out node tmp_6)
_ifconv:5  %or_cond = or i1 %tmp, %tmp_s

ST_3: Table_1_load (26)  [1/2] 1.35ns  loc: Encoder.c:26->Encoder.c:40
_ifconv:21  %Table_1_load = load i8* %Table_1_addr, align 1

ST_3: tmp_6 (27)  [1/1] 0.55ns  loc: Encoder.c:40 (out node of the LUT)
_ifconv:22  %tmp_6 = select i1 %or_cond, i8 0, i8 %Table_1_load

ST_3: StgValue_30 (28)  [1/1] 0.00ns  loc: Encoder.c:40
_ifconv:23  ret i8 %tmp_6



============================================================
+ Verbose Summary: Timing violations
============================================================
Target clock period: 10ns, clock uncertainty: 1.25ns.

 <State 1>: 1.35ns
The critical path consists of the following:
	wire read on port 'Y' [6]  (0 ns)
	'getelementptr' operation ('Table_addr_1', Encoder.c:34->Encoder.c:40) [15]  (0 ns)
	'load' operation ('Y', Encoder.c:34->Encoder.c:40) on array 'Table_r' [16]  (1.35 ns)

 <State 2>: 5.07ns
The critical path consists of the following:
	'load' operation ('X', Encoder.c:34->Encoder.c:40) on array 'Table_r' [13]  (1.35 ns)
	'add' operation ('tmp_2_i', Encoder.c:34->Encoder.c:40) [21]  (0.907 ns)
	'add' operation ('tmp_3_i', Encoder.c:12->Encoder.c:40) [22]  (0.907 ns)
	'select' operation ('X', Encoder.c:12->Encoder.c:40) [23]  (0.55 ns)
	'getelementptr' operation ('Table_1_addr', Encoder.c:26->Encoder.c:40) [25]  (0 ns)
	'load' operation ('Table_1_load', Encoder.c:26->Encoder.c:40) on array 'Table_1' [26]  (1.35 ns)

 <State 3>: 1.9ns
The critical path consists of the following:
	'load' operation ('Table_1_load', Encoder.c:26->Encoder.c:40) on array 'Table_1' [26]  (1.35 ns)
	'select' operation ('tmp_6', Encoder.c:40) [27]  (0.55 ns)


============================================================
+ Verbose Summary: Binding
============================================================
N/A
* FSMD analyzer results:
  - Output states:
 - Input state : 
  - Chain level:
	State 1
	State 2
	State 3


============================================================
+ Verbose Summary: Datapath Resource usage 
============================================================
N/A
