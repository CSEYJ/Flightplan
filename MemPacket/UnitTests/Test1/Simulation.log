Evaluating packet #1(1155 bytes)
 0x0000(0) : 00 00 00 00 00 00 00 00 00 00 00 00 08 00 45 00 
0x0010(16) : 04 75 76 d8 40 00 40 11 c1 9d 7f 00 00 01 7f 00 
0x0020(32) : 00 01 a9 d3 2b cb 04 61 02 75 00 00 00 00 00 01 
0x0030(48) : 01 00 73 65 74 20 10 10 10 10 10 10 10 10 31 55 
0x0040(64) : 46 58 74 47 2d 31 32 76 79 50 55 74 6f 77 6b 63 
0x0050(80) : 75 5a 53 75 59 6a 33 4a 62 56 79 33 41 7a 58 50 
0x0060(96) : 56 4f 66 55 51 68 4e 4d 35 73 44 74 6d 78 54 65 
0x0070(112) : 55 76 57 30 64 5a 20 30 20 30 20 31 30 32 34 0d 
0x0080(128) : 0a 31 55 46 58 74 47 2d 31 32 76 79 50 55 74 6f 
0x0090(144) : 77 6b 63 75 5a 53 75 59 6a 33 4a 62 56 79 33 41 
0x00a0(160) : 7a 58 50 56 4f 66 55 51 68 4e 4d 35 73 44 74 6d 
0x00b0(176) : 78 54 65 55 76 57 30 64 5a 4b 43 33 47 46 44 45 
0x00c0(192) : 6e 63 6a 39 46 42 5a 78 59 76 30 4f 36 74 38 31 
0x00d0(208) : 4b 6d 57 44 48 57 71 71 71 31 74 35 47 34 4a 31 
0x00e0(224) : 67 30 42 77 42 6b 72 6a 65 72 36 6b 69 45 6d 30 
0x00f0(240) : 2d 47 44 47 6d 32 34 62 33 79 67 4a 30 7a 4c 68 
0x0100(256) : 7a 57 62 38 45 51 72 73 46 78 62 78 41 4c 78 39 
0x0110(272) : 62 38 50 4c 41 54 77 44 50 61 58 51 58 73 35 55 
0x0120(288) : 4d 67 63 61 34 53 52 4a 4e 30 45 58 4c 39 67 77 
0x0130(304) : 48 33 46 53 58 41 66 77 6b 41 4b 47 30 50 6b 4d 
0x0140(320) : 33 4c 78 37 6e 4d 51 38 4d 65 67 68 6e 4b 62 33 
0x0150(336) : 4f 71 56 76 2e 38 70 6a 4a 38 7a 4a 58 68 67 62 
0x0160(352) : 30 62 69 6e 78 37 77 48 6c 61 79 58 75 58 61 47 
0x0170(368) : 4c 33 39 4b 42 7a 31 55 35 2e 6f 63 66 53 42 67 
0x0180(384) : 31 75 52 79 2d 4c 44 6b 76 39 46 6f 67 70 32 2d 
0x0190(400) : 73 43 4a 32 39 4b 57 45 49 49 71 79 6b 30 63 6c 
0x01a0(416) : 75 31 68 74 4e 75 62 47 31 72 32 68 65 35 68 56 
0x01b0(432) : 48 2e 58 51 4a 31 65 62 4b 53 58 32 53 37 6f 4b 
0x01c0(448) : 39 54 42 57 4d 6e 6d 4e 63 70 33 45 75 6b 6a 39 
0x01d0(464) : 69 45 5a 2d 47 42 62 61 64 36 63 34 45 4f 4f 4e 
0x01e0(480) : 73 61 74 43 4c 64 5a 78 51 63 39 49 4b 74 52 31 
0x01f0(496) : 35 2e 30 4c 39 62 76 6e 69 57 72 77 75 44 48 6b 
0x0200(512) : 6e 38 77 36 6c 55 31 41 34 42 53 50 32 75 51 37 
0x0210(528) : 73 51 54 30 30 4d 6e 69 73 63 63 6c 70 74 54 62 
0x0220(544) : 2d 4f 68 6b 73 6a 75 77 75 4c 4a 77 44 6a 31 33 
0x0230(560) : 38 55 33 38 72 71 71 68 51 51 51 45 48 75 70 47 
0x0240(576) : 47 55 2e 36 42 74 30 33 43 4b 7a 50 31 2d 53 39 
0x0250(592) : 54 57 48 49 4b 35 2e 6c 56 4f 7a 6d 47 6d 30 57 
0x0260(608) : 45 2d 63 51 73 64 54 32 78 52 52 79 51 74 36 74 
0x0270(624) : 4e 4e 41 69 54 38 52 79 57 4f 6a 6e 38 6a 48 4d 
0x0280(640) : 69 75 6d 59 56 45 61 51 66 2d 4d 33 74 53 77 45 
0x0290(656) : 71 34 77 48 43 4c 44 6a 6a 77 55 72 65 6c 43 4b 
0x02a0(672) : 64 79 74 36 41 52 57 70 52 74 73 49 4a 6e 57 37 
0x02b0(688) : 72 52 4f 32 6d 63 6c 55 57 44 4a 38 79 56 54 61 
0x02c0(704) : 53 4b 67 63 6c 42 51 41 32 47 53 4c 31 7a 54 74 
0x02d0(720) : 4f 72 76 38 52 65 63 79 72 77 34 6e 50 58 4c 72 
0x02e0(736) : 72 30 53 62 42 73 6c 44 36 43 59 38 39 2d 2d 58 
0x02f0(752) : 72 75 66 47 57 47 43 4c 41 48 36 5a 6f 53 50 65 
0x0300(768) : 53 72 44 64 68 79 71 6e 38 4d 76 48 4d 75 6f 42 
0x0310(784) : 6d 53 52 47 69 65 62 73 76 69 50 68 38 6f 4a 61 
0x0320(800) : 64 57 42 49 54 2d 34 62 4c 7a 74 68 73 66 73 63 
0x0330(816) : 35 49 74 6e 77 53 64 70 38 31 55 47 70 6f 71 52 
0x0340(832) : 49 2d 6a 6c 2e 6e 4c 4b 6c 43 2d 62 72 73 42 78 
0x0350(848) : 38 32 69 32 56 4b 72 64 4c 4a 75 38 35 69 5a 4f 
0x0360(864) : 69 48 37 67 32 53 2e 6e 65 2e 4d 55 71 59 50 79 
0x0370(880) : 61 35 2e 33 50 70 68 6b 36 5a 74 43 46 51 61 78 
0x0380(896) : 68 68 63 6b 38 61 56 6d 59 73 45 4d 4f 64 49 79 
0x0390(912) : 6a 47 30 36 33 68 72 41 45 69 4d 54 36 77 50 6f 
0x03a0(928) : 62 2d 57 6a 5a 2d 55 36 72 69 53 44 4b 6c 41 31 
0x03b0(944) : 2d 41 37 33 72 79 44 33 65 5a 57 6c 54 76 58 32 
0x03c0(960) : 75 31 6d 53 30 45 59 73 77 2e 33 45 6a 44 46 6a 
0x03d0(976) : 4e 4e 6d 43 4a 7a 46 79 57 6d 68 7a 66 43 2d 59 
0x03e0(992) : 44 6c 2e 44 7a 57 33 75 55 37 36 43 4b 4d 76 69 
0x03f0(1008) : 6a 66 75 30 63 38 79 36 75 64 33 58 70 32 33 30 
0x0400(1024) : 6f 31 45 6c 58 48 64 30 4f 6b 43 6a 34 35 50 6e 
0x0410(1040) : 6b 48 6e 4b 50 6b 51 48 4c 54 70 39 56 73 39 48 
0x0420(1056) : 75 4e 31 50 66 65 50 31 4d 62 6b 51 67 37 42 4f 
0x0430(1072) : 50 7a 69 6f 68 36 34 30 5a 74 39 33 6a 4a 4b 62 
0x0440(1088) : 67 4c 2d 4a 2e 4f 4c 4b 2e 33 6c 65 42 77 31 61 
0x0450(1104) : 74 6a 4d 59 71 51 5a 4e 48 69 51 2d 2d 6c 61 67 
0x0460(1120) : 34 5a 7a 32 79 49 4e 77 4d 36 59 58 30 5a 35 75 
0x0470(1136) : 48 52 51 35 73 7a 53 37 67 74 36 66 63 68 4a 67 
0x0480(1152) : 45 0d 0a 
===================================================================
Entering system XilinxSwitch
input packet (1155 bytes)
 0x0000(0) : 00 00 00 00 00 00 00 00 00 00 00 00 08 00 45 00 
0x0010(16) : 04 75 76 d8 40 00 40 11 c1 9d 7f 00 00 01 7f 00 
0x0020(32) : 00 01 a9 d3 2b cb 04 61 02 75 00 00 00 00 00 01 
0x0030(48) : 01 00 73 65 74 20 10 10 10 10 10 10 10 10 31 55 
0x0040(64) : 46 58 74 47 2d 31 32 76 79 50 55 74 6f 77 6b 63 
0x0050(80) : 75 5a 53 75 59 6a 33 4a 62 56 79 33 41 7a 58 50 
0x0060(96) : 56 4f 66 55 51 68 4e 4d 35 73 44 74 6d 78 54 65 
0x0070(112) : 55 76 57 30 64 5a 20 30 20 30 20 31 30 32 34 0d 
0x0080(128) : 0a 31 55 46 58 74 47 2d 31 32 76 79 50 55 74 6f 
0x0090(144) : 77 6b 63 75 5a 53 75 59 6a 33 4a 62 56 79 33 41 
0x00a0(160) : 7a 58 50 56 4f 66 55 51 68 4e 4d 35 73 44 74 6d 
0x00b0(176) : 78 54 65 55 76 57 30 64 5a 4b 43 33 47 46 44 45 
0x00c0(192) : 6e 63 6a 39 46 42 5a 78 59 76 30 4f 36 74 38 31 
0x00d0(208) : 4b 6d 57 44 48 57 71 71 71 31 74 35 47 34 4a 31 
0x00e0(224) : 67 30 42 77 42 6b 72 6a 65 72 36 6b 69 45 6d 30 
0x00f0(240) : 2d 47 44 47 6d 32 34 62 33 79 67 4a 30 7a 4c 68 
0x0100(256) : 7a 57 62 38 45 51 72 73 46 78 62 78 41 4c 78 39 
0x0110(272) : 62 38 50 4c 41 54 77 44 50 61 58 51 58 73 35 55 
0x0120(288) : 4d 67 63 61 34 53 52 4a 4e 30 45 58 4c 39 67 77 
0x0130(304) : 48 33 46 53 58 41 66 77 6b 41 4b 47 30 50 6b 4d 
0x0140(320) : 33 4c 78 37 6e 4d 51 38 4d 65 67 68 6e 4b 62 33 
0x0150(336) : 4f 71 56 76 2e 38 70 6a 4a 38 7a 4a 58 68 67 62 
0x0160(352) : 30 62 69 6e 78 37 77 48 6c 61 79 58 75 58 61 47 
0x0170(368) : 4c 33 39 4b 42 7a 31 55 35 2e 6f 63 66 53 42 67 
0x0180(384) : 31 75 52 79 2d 4c 44 6b 76 39 46 6f 67 70 32 2d 
0x0190(400) : 73 43 4a 32 39 4b 57 45 49 49 71 79 6b 30 63 6c 
0x01a0(416) : 75 31 68 74 4e 75 62 47 31 72 32 68 65 35 68 56 
0x01b0(432) : 48 2e 58 51 4a 31 65 62 4b 53 58 32 53 37 6f 4b 
0x01c0(448) : 39 54 42 57 4d 6e 6d 4e 63 70 33 45 75 6b 6a 39 
0x01d0(464) : 69 45 5a 2d 47 42 62 61 64 36 63 34 45 4f 4f 4e 
0x01e0(480) : 73 61 74 43 4c 64 5a 78 51 63 39 49 4b 74 52 31 
0x01f0(496) : 35 2e 30 4c 39 62 76 6e 69 57 72 77 75 44 48 6b 
0x0200(512) : 6e 38 77 36 6c 55 31 41 34 42 53 50 32 75 51 37 
0x0210(528) : 73 51 54 30 30 4d 6e 69 73 63 63 6c 70 74 54 62 
0x0220(544) : 2d 4f 68 6b 73 6a 75 77 75 4c 4a 77 44 6a 31 33 
0x0230(560) : 38 55 33 38 72 71 71 68 51 51 51 45 48 75 70 47 
0x0240(576) : 47 55 2e 36 42 74 30 33 43 4b 7a 50 31 2d 53 39 
0x0250(592) : 54 57 48 49 4b 35 2e 6c 56 4f 7a 6d 47 6d 30 57 
0x0260(608) : 45 2d 63 51 73 64 54 32 78 52 52 79 51 74 36 74 
0x0270(624) : 4e 4e 41 69 54 38 52 79 57 4f 6a 6e 38 6a 48 4d 
0x0280(640) : 69 75 6d 59 56 45 61 51 66 2d 4d 33 74 53 77 45 
0x0290(656) : 71 34 77 48 43 4c 44 6a 6a 77 55 72 65 6c 43 4b 
0x02a0(672) : 64 79 74 36 41 52 57 70 52 74 73 49 4a 6e 57 37 
0x02b0(688) : 72 52 4f 32 6d 63 6c 55 57 44 4a 38 79 56 54 61 
0x02c0(704) : 53 4b 67 63 6c 42 51 41 32 47 53 4c 31 7a 54 74 
0x02d0(720) : 4f 72 76 38 52 65 63 79 72 77 34 6e 50 58 4c 72 
0x02e0(736) : 72 30 53 62 42 73 6c 44 36 43 59 38 39 2d 2d 58 
0x02f0(752) : 72 75 66 47 57 47 43 4c 41 48 36 5a 6f 53 50 65 
0x0300(768) : 53 72 44 64 68 79 71 6e 38 4d 76 48 4d 75 6f 42 
0x0310(784) : 6d 53 52 47 69 65 62 73 76 69 50 68 38 6f 4a 61 
0x0320(800) : 64 57 42 49 54 2d 34 62 4c 7a 74 68 73 66 73 63 
0x0330(816) : 35 49 74 6e 77 53 64 70 38 31 55 47 70 6f 71 52 
0x0340(832) : 49 2d 6a 6c 2e 6e 4c 4b 6c 43 2d 62 72 73 42 78 
0x0350(848) : 38 32 69 32 56 4b 72 64 4c 4a 75 38 35 69 5a 4f 
0x0360(864) : 69 48 37 67 32 53 2e 6e 65 2e 4d 55 71 59 50 79 
0x0370(880) : 61 35 2e 33 50 70 68 6b 36 5a 74 43 46 51 61 78 
0x0380(896) : 68 68 63 6b 38 61 56 6d 59 73 45 4d 4f 64 49 79 
0x0390(912) : 6a 47 30 36 33 68 72 41 45 69 4d 54 36 77 50 6f 
0x03a0(928) : 62 2d 57 6a 5a 2d 55 36 72 69 53 44 4b 6c 41 31 
0x03b0(944) : 2d 41 37 33 72 79 44 33 65 5a 57 6c 54 76 58 32 
0x03c0(960) : 75 31 6d 53 30 45 59 73 77 2e 33 45 6a 44 46 6a 
0x03d0(976) : 4e 4e 6d 43 4a 7a 46 79 57 6d 68 7a 66 43 2d 59 
0x03e0(992) : 44 6c 2e 44 7a 57 33 75 55 37 36 43 4b 4d 76 69 
0x03f0(1008) : 6a 66 75 30 63 38 79 36 75 64 33 58 70 32 33 30 
0x0400(1024) : 6f 31 45 6c 58 48 64 30 4f 6b 43 6a 34 35 50 6e 
0x0410(1040) : 6b 48 6e 4b 50 6b 51 48 4c 54 70 39 56 73 39 48 
0x0420(1056) : 75 4e 31 50 66 65 50 31 4d 62 6b 51 67 37 42 4f 
0x0430(1072) : 50 7a 69 6f 68 36 34 30 5a 74 39 33 6a 4a 4b 62 
0x0440(1088) : 67 4c 2d 4a 2e 4f 4c 4b 2e 33 6c 65 42 77 31 61 
0x0450(1104) : 74 6a 4d 59 71 51 5a 4e 48 69 51 2d 2d 6c 61 67 
0x0460(1120) : 34 5a 7a 32 79 49 4e 77 4d 36 59 58 30 5a 35 75 
0x0470(1136) : 48 52 51 35 73 7a 53 37 67 74 36 66 63 68 4a 67 
0x0480(1152) : 45 0d 0a 
initial input and inout tuples:
	ioports = (
		ingress_port = 0x0(0)
		egress_port = 0x0(0)
	)
clear internal and output-only tuples
===================================================================
Entering engine Parser
input packet (1155 bytes)
 0x0000(0) : 00 00 00 00 00 00 00 00 00 00 00 00 08 00 45 00 
0x0010(16) : 04 75 76 d8 40 00 40 11 c1 9d 7f 00 00 01 7f 00 
0x0020(32) : 00 01 a9 d3 2b cb 04 61 02 75 00 00 00 00 00 01 
0x0030(48) : 01 00 73 65 74 20 10 10 10 10 10 10 10 10 31 55 
0x0040(64) : 46 58 74 47 2d 31 32 76 79 50 55 74 6f 77 6b 63 
0x0050(80) : 75 5a 53 75 59 6a 33 4a 62 56 79 33 41 7a 58 50 
0x0060(96) : 56 4f 66 55 51 68 4e 4d 35 73 44 74 6d 78 54 65 
0x0070(112) : 55 76 57 30 64 5a 20 30 20 30 20 31 30 32 34 0d 
0x0080(128) : 0a 31 55 46 58 74 47 2d 31 32 76 79 50 55 74 6f 
0x0090(144) : 77 6b 63 75 5a 53 75 59 6a 33 4a 62 56 79 33 41 
0x00a0(160) : 7a 58 50 56 4f 66 55 51 68 4e 4d 35 73 44 74 6d 
0x00b0(176) : 78 54 65 55 76 57 30 64 5a 4b 43 33 47 46 44 45 
0x00c0(192) : 6e 63 6a 39 46 42 5a 78 59 76 30 4f 36 74 38 31 
0x00d0(208) : 4b 6d 57 44 48 57 71 71 71 31 74 35 47 34 4a 31 
0x00e0(224) : 67 30 42 77 42 6b 72 6a 65 72 36 6b 69 45 6d 30 
0x00f0(240) : 2d 47 44 47 6d 32 34 62 33 79 67 4a 30 7a 4c 68 
0x0100(256) : 7a 57 62 38 45 51 72 73 46 78 62 78 41 4c 78 39 
0x0110(272) : 62 38 50 4c 41 54 77 44 50 61 58 51 58 73 35 55 
0x0120(288) : 4d 67 63 61 34 53 52 4a 4e 30 45 58 4c 39 67 77 
0x0130(304) : 48 33 46 53 58 41 66 77 6b 41 4b 47 30 50 6b 4d 
0x0140(320) : 33 4c 78 37 6e 4d 51 38 4d 65 67 68 6e 4b 62 33 
0x0150(336) : 4f 71 56 76 2e 38 70 6a 4a 38 7a 4a 58 68 67 62 
0x0160(352) : 30 62 69 6e 78 37 77 48 6c 61 79 58 75 58 61 47 
0x0170(368) : 4c 33 39 4b 42 7a 31 55 35 2e 6f 63 66 53 42 67 
0x0180(384) : 31 75 52 79 2d 4c 44 6b 76 39 46 6f 67 70 32 2d 
0x0190(400) : 73 43 4a 32 39 4b 57 45 49 49 71 79 6b 30 63 6c 
0x01a0(416) : 75 31 68 74 4e 75 62 47 31 72 32 68 65 35 68 56 
0x01b0(432) : 48 2e 58 51 4a 31 65 62 4b 53 58 32 53 37 6f 4b 
0x01c0(448) : 39 54 42 57 4d 6e 6d 4e 63 70 33 45 75 6b 6a 39 
0x01d0(464) : 69 45 5a 2d 47 42 62 61 64 36 63 34 45 4f 4f 4e 
0x01e0(480) : 73 61 74 43 4c 64 5a 78 51 63 39 49 4b 74 52 31 
0x01f0(496) : 35 2e 30 4c 39 62 76 6e 69 57 72 77 75 44 48 6b 
0x0200(512) : 6e 38 77 36 6c 55 31 41 34 42 53 50 32 75 51 37 
0x0210(528) : 73 51 54 30 30 4d 6e 69 73 63 63 6c 70 74 54 62 
0x0220(544) : 2d 4f 68 6b 73 6a 75 77 75 4c 4a 77 44 6a 31 33 
0x0230(560) : 38 55 33 38 72 71 71 68 51 51 51 45 48 75 70 47 
0x0240(576) : 47 55 2e 36 42 74 30 33 43 4b 7a 50 31 2d 53 39 
0x0250(592) : 54 57 48 49 4b 35 2e 6c 56 4f 7a 6d 47 6d 30 57 
0x0260(608) : 45 2d 63 51 73 64 54 32 78 52 52 79 51 74 36 74 
0x0270(624) : 4e 4e 41 69 54 38 52 79 57 4f 6a 6e 38 6a 48 4d 
0x0280(640) : 69 75 6d 59 56 45 61 51 66 2d 4d 33 74 53 77 45 
0x0290(656) : 71 34 77 48 43 4c 44 6a 6a 77 55 72 65 6c 43 4b 
0x02a0(672) : 64 79 74 36 41 52 57 70 52 74 73 49 4a 6e 57 37 
0x02b0(688) : 72 52 4f 32 6d 63 6c 55 57 44 4a 38 79 56 54 61 
0x02c0(704) : 53 4b 67 63 6c 42 51 41 32 47 53 4c 31 7a 54 74 
0x02d0(720) : 4f 72 76 38 52 65 63 79 72 77 34 6e 50 58 4c 72 
0x02e0(736) : 72 30 53 62 42 73 6c 44 36 43 59 38 39 2d 2d 58 
0x02f0(752) : 72 75 66 47 57 47 43 4c 41 48 36 5a 6f 53 50 65 
0x0300(768) : 53 72 44 64 68 79 71 6e 38 4d 76 48 4d 75 6f 42 
0x0310(784) : 6d 53 52 47 69 65 62 73 76 69 50 68 38 6f 4a 61 
0x0320(800) : 64 57 42 49 54 2d 34 62 4c 7a 74 68 73 66 73 63 
0x0330(816) : 35 49 74 6e 77 53 64 70 38 31 55 47 70 6f 71 52 
0x0340(832) : 49 2d 6a 6c 2e 6e 4c 4b 6c 43 2d 62 72 73 42 78 
0x0350(848) : 38 32 69 32 56 4b 72 64 4c 4a 75 38 35 69 5a 4f 
0x0360(864) : 69 48 37 67 32 53 2e 6e 65 2e 4d 55 71 59 50 79 
0x0370(880) : 61 35 2e 33 50 70 68 6b 36 5a 74 43 46 51 61 78 
0x0380(896) : 68 68 63 6b 38 61 56 6d 59 73 45 4d 4f 64 49 79 
0x0390(912) : 6a 47 30 36 33 68 72 41 45 69 4d 54 36 77 50 6f 
0x03a0(928) : 62 2d 57 6a 5a 2d 55 36 72 69 53 44 4b 6c 41 31 
0x03b0(944) : 2d 41 37 33 72 79 44 33 65 5a 57 6c 54 76 58 32 
0x03c0(960) : 75 31 6d 53 30 45 59 73 77 2e 33 45 6a 44 46 6a 
0x03d0(976) : 4e 4e 6d 43 4a 7a 46 79 57 6d 68 7a 66 43 2d 59 
0x03e0(992) : 44 6c 2e 44 7a 57 33 75 55 37 36 43 4b 4d 76 69 
0x03f0(1008) : 6a 66 75 30 63 38 79 36 75 64 33 58 70 32 33 30 
0x0400(1024) : 6f 31 45 6c 58 48 64 30 4f 6b 43 6a 34 35 50 6e 
0x0410(1040) : 6b 48 6e 4b 50 6b 51 48 4c 54 70 39 56 73 39 48 
0x0420(1056) : 75 4e 31 50 66 65 50 31 4d 62 6b 51 67 37 42 4f 
0x0430(1072) : 50 7a 69 6f 68 36 34 30 5a 74 39 33 6a 4a 4b 62 
0x0440(1088) : 67 4c 2d 4a 2e 4f 4c 4b 2e 33 6c 65 42 77 31 61 
0x0450(1104) : 74 6a 4d 59 71 51 5a 4e 48 69 51 2d 2d 6c 61 67 
0x0460(1120) : 34 5a 7a 32 79 49 4e 77 4d 36 59 58 30 5a 35 75 
0x0470(1136) : 48 52 51 35 73 7a 53 37 67 74 36 66 63 68 4a 67 
0x0480(1152) : 45 0d 0a 
initial input and inout tuples:
	control = (
		offset = 0x0000(0)
		virtual_offset = 0x0000(0)
		section = 0x0(0)
		activeBank = 0x0(0)
		done = 0x0(0)
		error = 0x0(0)
	)
clear internal and output-only tuples
	hdr = (
		eth = (
		isValid = 0x0(0)
		dst = 0x000000000000(0)
		src = 0x000000000000(0)
		type = 0x0000(0)
	)
		fec = (
		isValid = 0x0(0)
		traffic_class = 0x0(0)
		block_index = 0x00(0)
		packet_index = 0x00(0)
		original_type = 0x0000(0)
	)
		ipv4 = (
		isValid = 0x0(0)
		version = 0x0(0)
		ihl = 0x0(0)
		diffserv = 0x00(0)
		totallen = 0x0000(0)
		identification = 0x0000(0)
		flags = 0x0(0)
		fragoffset = 0x0000(0)
		ttl = 0x00(0)
		protocol = 0x00(0)
		hdrchecksum = 0x0000(0)
		srcAddr = 0x00000000(0)
		dstAddr = 0x00000000(0)
	)
		udp = (
		isValid = 0x0(0)
		sport = 0x0000(0)
		dport = 0x0000(0)
		len = 0x0000(0)
		chksum = 0x0000(0)
	)
	)
	Parser_extracts = (
		size = 0x00000000(0)
	)
processing section start in stage 1
-------------------------------------------------------------------
Section start starting

	extracting 112 bits at offset 0x0000(0)
		dst_0 = 0x000000000000(0)
		src_0 = 0x000000000000(0)
		type_0 = 0x0800(2048)

	method update (tuples)
		hdr.eth.isValid = 0x1(1)
		hdr.eth.dst = 0x000000000000(0)
		hdr.eth.src = 0x000000000000(0)
		hdr.eth.type = 0x0800(2048)
		Parser_extracts.size = 0x00000070(112)


	method move_to_section = parse_ipv4

updated tuples:
	control = (
		offset = 0x0070(112)
		virtual_offset = 0x0070(112)
		section = 0x2(2)
		activeBank = 0x0(0)
		done = 0x0(0)
		error = 0x0(0)
	)
	hdr = (
		eth = (
		isValid = 0x1(1)
		dst = 0x000000000000(0)
		src = 0x000000000000(0)
		type = 0x0800(2048)
	)
		fec = (
		isValid = 0x0(0)
		traffic_class = 0x0(0)
		block_index = 0x00(0)
		packet_index = 0x00(0)
		original_type = 0x0000(0)
	)
		ipv4 = (
		isValid = 0x0(0)
		version = 0x0(0)
		ihl = 0x0(0)
		diffserv = 0x00(0)
		totallen = 0x0000(0)
		identification = 0x0000(0)
		flags = 0x0(0)
		fragoffset = 0x0000(0)
		ttl = 0x00(0)
		protocol = 0x00(0)
		hdrchecksum = 0x0000(0)
		srcAddr = 0x00000000(0)
		dstAddr = 0x00000000(0)
	)
		udp = (
		isValid = 0x0(0)
		sport = 0x0000(0)
		dport = 0x0000(0)
		len = 0x0000(0)
		chksum = 0x0000(0)
	)
	)
	Parser_extracts = (
		size = 0x00000070(112)
	)
Section start finished
-------------------------------------------------------------------
processing section parse_ipv4 in stage 2
-------------------------------------------------------------------
Section parse_ipv4 starting

	extracting 160 bits at offset 0x0070(112)
		version_0 = 0x4(4)
		ihl_0 = 0x5(5)
		diffserv_0 = 0x00(0)
		totallen_0 = 0x0475(1141)
		identification_0 = 0x76d8(30424)
		flags_0 = 0x2(2)
		fragoffset_0 = 0x0000(0)
		ttl_0 = 0x40(64)
		protocol_0 = 0x11(17)
		hdrchecksum_0 = 0xc19d(49565)
		srcAddr_0 = 0x7f000001(2130706433)
		dstAddr_0 = 0x7f000001(2130706433)

	method update (tuples)
		hdr.ipv4.isValid = 0x1(1)
		hdr.ipv4.version = 0x4(4)
		hdr.ipv4.ihl = 0x5(5)
		hdr.ipv4.diffserv = 0x00(0)
		hdr.ipv4.totallen = 0x0475(1141)
		hdr.ipv4.identification = 0x76d8(30424)
		hdr.ipv4.flags = 0x2(2)
		hdr.ipv4.fragoffset = 0x0000(0)
		hdr.ipv4.ttl = 0x40(64)
		hdr.ipv4.protocol = 0x11(17)
		hdr.ipv4.hdrchecksum = 0xc19d(49565)
		hdr.ipv4.srcAddr = 0x7f000001(2130706433)
		hdr.ipv4.dstAddr = 0x7f000001(2130706433)
		Parser_extracts.size = 0x00000110(272)


	method move_to_section = parse_udp

updated tuples:
	control = (
		offset = 0x0110(272)
		virtual_offset = 0x0110(272)
		section = 0x3(3)
		activeBank = 0x0(0)
		done = 0x0(0)
		error = 0x0(0)
	)
	hdr = (
		eth = (
		isValid = 0x1(1)
		dst = 0x000000000000(0)
		src = 0x000000000000(0)
		type = 0x0800(2048)
	)
		fec = (
		isValid = 0x0(0)
		traffic_class = 0x0(0)
		block_index = 0x00(0)
		packet_index = 0x00(0)
		original_type = 0x0000(0)
	)
		ipv4 = (
		isValid = 0x1(1)
		version = 0x4(4)
		ihl = 0x5(5)
		diffserv = 0x00(0)
		totallen = 0x0475(1141)
		identification = 0x76d8(30424)
		flags = 0x2(2)
		fragoffset = 0x0000(0)
		ttl = 0x40(64)
		protocol = 0x11(17)
		hdrchecksum = 0xc19d(49565)
		srcAddr = 0x7f000001(2130706433)
		dstAddr = 0x7f000001(2130706433)
	)
		udp = (
		isValid = 0x0(0)
		sport = 0x0000(0)
		dport = 0x0000(0)
		len = 0x0000(0)
		chksum = 0x0000(0)
	)
	)
	Parser_extracts = (
		size = 0x00000110(272)
	)
Section parse_ipv4 finished
-------------------------------------------------------------------
processing section parse_udp in stage 3
-------------------------------------------------------------------
Section parse_udp starting

	extracting 64 bits at offset 0x0110(272)
		sport_0 = 0xa9d3(43475)
		dport_0 = 0x2bcb(11211)
		len_0 = 0x0461(1121)
		chksum_0 = 0x0275(629)

	method update (tuples)
		hdr.udp.isValid = 0x1(1)
		hdr.udp.sport = 0xa9d3(43475)
		hdr.udp.dport = 0x2bcb(11211)
		hdr.udp.len = 0x0461(1121)
		hdr.udp.chksum = 0x0275(629)
		Parser_extracts.size = 0x00000150(336)


	method move_to_section = accept

updated tuples:
	control = (
		offset = 0x0150(336)
		virtual_offset = 0x0150(336)
		section = 0x4(4)
		activeBank = 0x0(0)
		done = 0x0(0)
		error = 0x0(0)
	)
	hdr = (
		eth = (
		isValid = 0x1(1)
		dst = 0x000000000000(0)
		src = 0x000000000000(0)
		type = 0x0800(2048)
	)
		fec = (
		isValid = 0x0(0)
		traffic_class = 0x0(0)
		block_index = 0x00(0)
		packet_index = 0x00(0)
		original_type = 0x0000(0)
	)
		ipv4 = (
		isValid = 0x1(1)
		version = 0x4(4)
		ihl = 0x5(5)
		diffserv = 0x00(0)
		totallen = 0x0475(1141)
		identification = 0x76d8(30424)
		flags = 0x2(2)
		fragoffset = 0x0000(0)
		ttl = 0x40(64)
		protocol = 0x11(17)
		hdrchecksum = 0xc19d(49565)
		srcAddr = 0x7f000001(2130706433)
		dstAddr = 0x7f000001(2130706433)
	)
		udp = (
		isValid = 0x1(1)
		sport = 0xa9d3(43475)
		dport = 0x2bcb(11211)
		len = 0x0461(1121)
		chksum = 0x0275(629)
	)
	)
	Parser_extracts = (
		size = 0x00000150(336)
	)
Section parse_udp finished
-------------------------------------------------------------------
processing section accept in stage 4
-------------------------------------------------------------------
Section accept starting


	method move_to_section = done(0)

updated tuples:
	control = (
		offset = 0x0150(336)
		virtual_offset = 0x0150(336)
		section = 0x0(0)
		activeBank = 0x0(0)
		done = 0x1(1)
		error = 0x0(0)
	)
	hdr = (
		eth = (
		isValid = 0x1(1)
		dst = 0x000000000000(0)
		src = 0x000000000000(0)
		type = 0x0800(2048)
	)
		fec = (
		isValid = 0x0(0)
		traffic_class = 0x0(0)
		block_index = 0x00(0)
		packet_index = 0x00(0)
		original_type = 0x0000(0)
	)
		ipv4 = (
		isValid = 0x1(1)
		version = 0x4(4)
		ihl = 0x5(5)
		diffserv = 0x00(0)
		totallen = 0x0475(1141)
		identification = 0x76d8(30424)
		flags = 0x2(2)
		fragoffset = 0x0000(0)
		ttl = 0x40(64)
		protocol = 0x11(17)
		hdrchecksum = 0xc19d(49565)
		srcAddr = 0x7f000001(2130706433)
		dstAddr = 0x7f000001(2130706433)
	)
		udp = (
		isValid = 0x1(1)
		sport = 0xa9d3(43475)
		dport = 0x2bcb(11211)
		len = 0x0461(1121)
		chksum = 0x0275(629)
	)
	)
	Parser_extracts = (
		size = 0x00000150(336)
	)
Section accept finished
-------------------------------------------------------------------
final inout and output tuples:

Note: this engine's wrapper will clear the upper control tuple fields on output, except for the 'control.error' field.

	control = (
		offset = 0x0000(0)
		virtual_offset = 0x0000(0)
		section = 0x0(0)
		activeBank = 0x0(0)
		done = 0x0(0)
		error = 0x0(0)
	)
	hdr = (
		eth = (
		isValid = 0x1(1)
		dst = 0x000000000000(0)
		src = 0x000000000000(0)
		type = 0x0800(2048)
	)
		fec = (
		isValid = 0x0(0)
		traffic_class = 0x0(0)
		block_index = 0x00(0)
		packet_index = 0x00(0)
		original_type = 0x0000(0)
	)
		ipv4 = (
		isValid = 0x1(1)
		version = 0x4(4)
		ihl = 0x5(5)
		diffserv = 0x00(0)
		totallen = 0x0475(1141)
		identification = 0x76d8(30424)
		flags = 0x2(2)
		fragoffset = 0x0000(0)
		ttl = 0x40(64)
		protocol = 0x11(17)
		hdrchecksum = 0xc19d(49565)
		srcAddr = 0x7f000001(2130706433)
		dstAddr = 0x7f000001(2130706433)
	)
		udp = (
		isValid = 0x1(1)
		sport = 0xa9d3(43475)
		dport = 0x2bcb(11211)
		len = 0x0461(1121)
		chksum = 0x0275(629)
	)
	)
	Parser_extracts = (
		size = 0x00000150(336)
	)
Exiting engine Parser
===================================================================
===================================================================
Entering engine CheckCache_lvl
input packet (0 bytes)
initial input and inout tuples:
	hdr = (
		eth = (
		isValid = 0x1(1)
		dst = 0x000000000000(0)
		src = 0x000000000000(0)
		type = 0x0800(2048)
	)
		fec = (
		isValid = 0x0(0)
		traffic_class = 0x0(0)
		block_index = 0x00(0)
		packet_index = 0x00(0)
		original_type = 0x0000(0)
	)
		ipv4 = (
		isValid = 0x1(1)
		version = 0x4(4)
		ihl = 0x5(5)
		diffserv = 0x00(0)
		totallen = 0x0475(1141)
		identification = 0x76d8(30424)
		flags = 0x2(2)
		fragoffset = 0x0000(0)
		ttl = 0x40(64)
		protocol = 0x11(17)
		hdrchecksum = 0xc19d(49565)
		srcAddr = 0x7f000001(2130706433)
		dstAddr = 0x7f000001(2130706433)
	)
		udp = (
		isValid = 0x1(1)
		sport = 0xa9d3(43475)
		dport = 0x2bcb(11211)
		len = 0x0461(1121)
		chksum = 0x0275(629)
	)
	)
	ioports = (
		ingress_port = 0x0(0)
		egress_port = 0x0(0)
	)
clear internal and output-only tuples
	control = (
		offset = 0x0000(0)
		virtual_offset = 0x0000(0)
		section = 0x0(0)
		activeBank = 0x0(0)
		done = 0x0(0)
		error = 0x0(0)
	)
	CheckCache_fl = (
		forward_1 = 0x0(0)
	)
	local_state = (
		id = 0x0000(0)
	)
processing section setup in stage 1
-------------------------------------------------------------------
Section setup starting


	method move_to_section = done(0)

updated tuples:
	control = (
		offset = 0x0000(0)
		virtual_offset = 0x0000(0)
		section = 0x0(0)
		activeBank = 0x0(0)
		done = 0x1(1)
		error = 0x0(0)
	)
	CheckCache_fl = (
		forward_1 = 0x0(0)
	)
	hdr = (
		eth = (
		isValid = 0x1(1)
		dst = 0x000000000000(0)
		src = 0x000000000000(0)
		type = 0x0800(2048)
	)
		fec = (
		isValid = 0x0(0)
		traffic_class = 0x0(0)
		block_index = 0x00(0)
		packet_index = 0x00(0)
		original_type = 0x0000(0)
	)
		ipv4 = (
		isValid = 0x1(1)
		version = 0x4(4)
		ihl = 0x5(5)
		diffserv = 0x00(0)
		totallen = 0x0475(1141)
		identification = 0x76d8(30424)
		flags = 0x2(2)
		fragoffset = 0x0000(0)
		ttl = 0x40(64)
		protocol = 0x11(17)
		hdrchecksum = 0xc19d(49565)
		srcAddr = 0x7f000001(2130706433)
		dstAddr = 0x7f000001(2130706433)
	)
		udp = (
		isValid = 0x1(1)
		sport = 0xa9d3(43475)
		dport = 0x2bcb(11211)
		len = 0x0461(1121)
		chksum = 0x0275(629)
	)
	)
	ioports = (
		ingress_port = 0x0(0)
		egress_port = 0x0(0)
	)
	local_state = (
		id = 0x0000(0)
	)
Section setup finished
-------------------------------------------------------------------
final inout and output tuples:

Note: this engine's wrapper will clear the upper control tuple fields on output, except for the 'control.error' field.

	CheckCache_fl = (
		forward_1 = 0x0(0)
	)
	hdr = (
		eth = (
		isValid = 0x1(1)
		dst = 0x000000000000(0)
		src = 0x000000000000(0)
		type = 0x0800(2048)
	)
		fec = (
		isValid = 0x0(0)
		traffic_class = 0x0(0)
		block_index = 0x00(0)
		packet_index = 0x00(0)
		original_type = 0x0000(0)
	)
		ipv4 = (
		isValid = 0x1(1)
		version = 0x4(4)
		ihl = 0x5(5)
		diffserv = 0x00(0)
		totallen = 0x0475(1141)
		identification = 0x76d8(30424)
		flags = 0x2(2)
		fragoffset = 0x0000(0)
		ttl = 0x40(64)
		protocol = 0x11(17)
		hdrchecksum = 0xc19d(49565)
		srcAddr = 0x7f000001(2130706433)
		dstAddr = 0x7f000001(2130706433)
	)
		udp = (
		isValid = 0x1(1)
		sport = 0xa9d3(43475)
		dport = 0x2bcb(11211)
		len = 0x0461(1121)
		chksum = 0x0275(629)
	)
	)
	ioports = (
		ingress_port = 0x0(0)
		egress_port = 0x0(0)
	)
	local_state = (
		id = 0x0000(0)
	)
Exiting engine CheckCache_lvl
===================================================================
===================================================================
Entering engine CheckCache_lvl_0
input packet (0 bytes)
initial input and inout tuples:
	CheckCache_fl = (
		forward_1 = 0x0(0)
	)
	hdr = (
		eth = (
		isValid = 0x1(1)
		dst = 0x000000000000(0)
		src = 0x000000000000(0)
		type = 0x0800(2048)
	)
		fec = (
		isValid = 0x0(0)
		traffic_class = 0x0(0)
		block_index = 0x00(0)
		packet_index = 0x00(0)
		original_type = 0x0000(0)
	)
		ipv4 = (
		isValid = 0x1(1)
		version = 0x4(4)
		ihl = 0x5(5)
		diffserv = 0x00(0)
		totallen = 0x0475(1141)
		identification = 0x76d8(30424)
		flags = 0x2(2)
		fragoffset = 0x0000(0)
		ttl = 0x40(64)
		protocol = 0x11(17)
		hdrchecksum = 0xc19d(49565)
		srcAddr = 0x7f000001(2130706433)
		dstAddr = 0x7f000001(2130706433)
	)
		udp = (
		isValid = 0x1(1)
		sport = 0xa9d3(43475)
		dport = 0x2bcb(11211)
		len = 0x0461(1121)
		chksum = 0x0275(629)
	)
	)
	ioports = (
		ingress_port = 0x0(0)
		egress_port = 0x0(0)
	)
	local_state = (
		id = 0x0000(0)
	)
clear internal and output-only tuples
	control = (
		offset = 0x0000(0)
		virtual_offset = 0x0000(0)
		section = 0x0(0)
		activeBank = 0x0(0)
		done = 0x0(0)
		error = 0x0(0)
	)
	memcached_input = (
		stateful_valid = 0x0(0)
	)
processing section condition_sec_0 in stage 1
-------------------------------------------------------------------
Section condition_sec_0 starting

	method update (tuples)
		local_state.id = 0x0005(5)


	method move_to_section = condition_sec

updated tuples:
	control = (
		offset = 0x0000(0)
		virtual_offset = 0x0000(0)
		section = 0x2(2)
		activeBank = 0x0(0)
		done = 0x0(0)
		error = 0x0(0)
	)
	CheckCache_fl = (
		forward_1 = 0x0(0)
	)
	hdr = (
		eth = (
		isValid = 0x1(1)
		dst = 0x000000000000(0)
		src = 0x000000000000(0)
		type = 0x0800(2048)
	)
		fec = (
		isValid = 0x0(0)
		traffic_class = 0x0(0)
		block_index = 0x00(0)
		packet_index = 0x00(0)
		original_type = 0x0000(0)
	)
		ipv4 = (
		isValid = 0x1(1)
		version = 0x4(4)
		ihl = 0x5(5)
		diffserv = 0x00(0)
		totallen = 0x0475(1141)
		identification = 0x76d8(30424)
		flags = 0x2(2)
		fragoffset = 0x0000(0)
		ttl = 0x40(64)
		protocol = 0x11(17)
		hdrchecksum = 0xc19d(49565)
		srcAddr = 0x7f000001(2130706433)
		dstAddr = 0x7f000001(2130706433)
	)
		udp = (
		isValid = 0x1(1)
		sport = 0xa9d3(43475)
		dport = 0x2bcb(11211)
		len = 0x0461(1121)
		chksum = 0x0275(629)
	)
	)
	ioports = (
		ingress_port = 0x0(0)
		egress_port = 0x0(0)
	)
	local_state = (
		id = 0x0005(5)
	)
	memcached_input = (
		stateful_valid = 0x0(0)
	)
Section condition_sec_0 finished
-------------------------------------------------------------------
processing section condition_sec in stage 2
-------------------------------------------------------------------
Section condition_sec starting

	method update (tuples)
		local_state.id = 0x0005(5)


	method move_to_section = act_0_sec

updated tuples:
	control = (
		offset = 0x0000(0)
		virtual_offset = 0x0000(0)
		section = 0x1(1)
		activeBank = 0x0(0)
		done = 0x0(0)
		error = 0x0(0)
	)
	CheckCache_fl = (
		forward_1 = 0x0(0)
	)
	hdr = (
		eth = (
		isValid = 0x1(1)
		dst = 0x000000000000(0)
		src = 0x000000000000(0)
		type = 0x0800(2048)
	)
		fec = (
		isValid = 0x0(0)
		traffic_class = 0x0(0)
		block_index = 0x00(0)
		packet_index = 0x00(0)
		original_type = 0x0000(0)
	)
		ipv4 = (
		isValid = 0x1(1)
		version = 0x4(4)
		ihl = 0x5(5)
		diffserv = 0x00(0)
		totallen = 0x0475(1141)
		identification = 0x76d8(30424)
		flags = 0x2(2)
		fragoffset = 0x0000(0)
		ttl = 0x40(64)
		protocol = 0x11(17)
		hdrchecksum = 0xc19d(49565)
		srcAddr = 0x7f000001(2130706433)
		dstAddr = 0x7f000001(2130706433)
	)
		udp = (
		isValid = 0x1(1)
		sport = 0xa9d3(43475)
		dport = 0x2bcb(11211)
		len = 0x0461(1121)
		chksum = 0x0275(629)
	)
	)
	ioports = (
		ingress_port = 0x0(0)
		egress_port = 0x0(0)
	)
	local_state = (
		id = 0x0005(5)
	)
	memcached_input = (
		stateful_valid = 0x0(0)
	)
Section condition_sec finished
-------------------------------------------------------------------
processing section act_0_sec in stage 3
-------------------------------------------------------------------
Section act_0_sec starting

	method update (tuples)
		memcached_input.stateful_valid = 0x1(1)
		local_state.id = 0x0004(4)


	method move_to_section = local_end

updated tuples:
	control = (
		offset = 0x0000(0)
		virtual_offset = 0x0000(0)
		section = 0x4(4)
		activeBank = 0x0(0)
		done = 0x0(0)
		error = 0x0(0)
	)
	CheckCache_fl = (
		forward_1 = 0x0(0)
	)
	hdr = (
		eth = (
		isValid = 0x1(1)
		dst = 0x000000000000(0)
		src = 0x000000000000(0)
		type = 0x0800(2048)
	)
		fec = (
		isValid = 0x0(0)
		traffic_class = 0x0(0)
		block_index = 0x00(0)
		packet_index = 0x00(0)
		original_type = 0x0000(0)
	)
		ipv4 = (
		isValid = 0x1(1)
		version = 0x4(4)
		ihl = 0x5(5)
		diffserv = 0x00(0)
		totallen = 0x0475(1141)
		identification = 0x76d8(30424)
		flags = 0x2(2)
		fragoffset = 0x0000(0)
		ttl = 0x40(64)
		protocol = 0x11(17)
		hdrchecksum = 0xc19d(49565)
		srcAddr = 0x7f000001(2130706433)
		dstAddr = 0x7f000001(2130706433)
	)
		udp = (
		isValid = 0x1(1)
		sport = 0xa9d3(43475)
		dport = 0x2bcb(11211)
		len = 0x0461(1121)
		chksum = 0x0275(629)
	)
	)
	ioports = (
		ingress_port = 0x0(0)
		egress_port = 0x0(0)
	)
	local_state = (
		id = 0x0004(4)
	)
	memcached_input = (
		stateful_valid = 0x1(1)
	)
Section act_0_sec finished
-------------------------------------------------------------------
processing section local_end in stage 4
-------------------------------------------------------------------
Section local_end starting


	method move_to_section = done(0)

updated tuples:
	control = (
		offset = 0x0000(0)
		virtual_offset = 0x0000(0)
		section = 0x0(0)
		activeBank = 0x0(0)
		done = 0x1(1)
		error = 0x0(0)
	)
	CheckCache_fl = (
		forward_1 = 0x0(0)
	)
	hdr = (
		eth = (
		isValid = 0x1(1)
		dst = 0x000000000000(0)
		src = 0x000000000000(0)
		type = 0x0800(2048)
	)
		fec = (
		isValid = 0x0(0)
		traffic_class = 0x0(0)
		block_index = 0x00(0)
		packet_index = 0x00(0)
		original_type = 0x0000(0)
	)
		ipv4 = (
		isValid = 0x1(1)
		version = 0x4(4)
		ihl = 0x5(5)
		diffserv = 0x00(0)
		totallen = 0x0475(1141)
		identification = 0x76d8(30424)
		flags = 0x2(2)
		fragoffset = 0x0000(0)
		ttl = 0x40(64)
		protocol = 0x11(17)
		hdrchecksum = 0xc19d(49565)
		srcAddr = 0x7f000001(2130706433)
		dstAddr = 0x7f000001(2130706433)
	)
		udp = (
		isValid = 0x1(1)
		sport = 0xa9d3(43475)
		dport = 0x2bcb(11211)
		len = 0x0461(1121)
		chksum = 0x0275(629)
	)
	)
	ioports = (
		ingress_port = 0x0(0)
		egress_port = 0x0(0)
	)
	local_state = (
		id = 0x0004(4)
	)
	memcached_input = (
		stateful_valid = 0x1(1)
	)
Section local_end finished
-------------------------------------------------------------------
final inout and output tuples:

Note: this engine's wrapper will clear the upper control tuple fields on output, except for the 'control.error' field.

	CheckCache_fl = (
		forward_1 = 0x0(0)
	)
	hdr = (
		eth = (
		isValid = 0x1(1)
		dst = 0x000000000000(0)
		src = 0x000000000000(0)
		type = 0x0800(2048)
	)
		fec = (
		isValid = 0x0(0)
		traffic_class = 0x0(0)
		block_index = 0x00(0)
		packet_index = 0x00(0)
		original_type = 0x0000(0)
	)
		ipv4 = (
		isValid = 0x1(1)
		version = 0x4(4)
		ihl = 0x5(5)
		diffserv = 0x00(0)
		totallen = 0x0475(1141)
		identification = 0x76d8(30424)
		flags = 0x2(2)
		fragoffset = 0x0000(0)
		ttl = 0x40(64)
		protocol = 0x11(17)
		hdrchecksum = 0xc19d(49565)
		srcAddr = 0x7f000001(2130706433)
		dstAddr = 0x7f000001(2130706433)
	)
		udp = (
		isValid = 0x1(1)
		sport = 0xa9d3(43475)
		dport = 0x2bcb(11211)
		len = 0x0461(1121)
		chksum = 0x0275(629)
	)
	)
	ioports = (
		ingress_port = 0x0(0)
		egress_port = 0x0(0)
	)
	local_state = (
		id = 0x0004(4)
	)
	memcached_input = (
		stateful_valid = 0x1(1)
	)
Exiting engine CheckCache_lvl_0
===================================================================
===================================================================
Entering engine memcached_0
input packet (1155 bytes)
 0x0000(0) : 00 00 00 00 00 00 00 00 00 00 00 00 08 00 45 00 
0x0010(16) : 04 75 76 d8 40 00 40 11 c1 9d 7f 00 00 01 7f 00 
0x0020(32) : 00 01 a9 d3 2b cb 04 61 02 75 00 00 00 00 00 01 
0x0030(48) : 01 00 73 65 74 20 10 10 10 10 10 10 10 10 31 55 
0x0040(64) : 46 58 74 47 2d 31 32 76 79 50 55 74 6f 77 6b 63 
0x0050(80) : 75 5a 53 75 59 6a 33 4a 62 56 79 33 41 7a 58 50 
0x0060(96) : 56 4f 66 55 51 68 4e 4d 35 73 44 74 6d 78 54 65 
0x0070(112) : 55 76 57 30 64 5a 20 30 20 30 20 31 30 32 34 0d 
0x0080(128) : 0a 31 55 46 58 74 47 2d 31 32 76 79 50 55 74 6f 
0x0090(144) : 77 6b 63 75 5a 53 75 59 6a 33 4a 62 56 79 33 41 
0x00a0(160) : 7a 58 50 56 4f 66 55 51 68 4e 4d 35 73 44 74 6d 
0x00b0(176) : 78 54 65 55 76 57 30 64 5a 4b 43 33 47 46 44 45 
0x00c0(192) : 6e 63 6a 39 46 42 5a 78 59 76 30 4f 36 74 38 31 
0x00d0(208) : 4b 6d 57 44 48 57 71 71 71 31 74 35 47 34 4a 31 
0x00e0(224) : 67 30 42 77 42 6b 72 6a 65 72 36 6b 69 45 6d 30 
0x00f0(240) : 2d 47 44 47 6d 32 34 62 33 79 67 4a 30 7a 4c 68 
0x0100(256) : 7a 57 62 38 45 51 72 73 46 78 62 78 41 4c 78 39 
0x0110(272) : 62 38 50 4c 41 54 77 44 50 61 58 51 58 73 35 55 
0x0120(288) : 4d 67 63 61 34 53 52 4a 4e 30 45 58 4c 39 67 77 
0x0130(304) : 48 33 46 53 58 41 66 77 6b 41 4b 47 30 50 6b 4d 
0x0140(320) : 33 4c 78 37 6e 4d 51 38 4d 65 67 68 6e 4b 62 33 
0x0150(336) : 4f 71 56 76 2e 38 70 6a 4a 38 7a 4a 58 68 67 62 
0x0160(352) : 30 62 69 6e 78 37 77 48 6c 61 79 58 75 58 61 47 
0x0170(368) : 4c 33 39 4b 42 7a 31 55 35 2e 6f 63 66 53 42 67 
0x0180(384) : 31 75 52 79 2d 4c 44 6b 76 39 46 6f 67 70 32 2d 
0x0190(400) : 73 43 4a 32 39 4b 57 45 49 49 71 79 6b 30 63 6c 
0x01a0(416) : 75 31 68 74 4e 75 62 47 31 72 32 68 65 35 68 56 
0x01b0(432) : 48 2e 58 51 4a 31 65 62 4b 53 58 32 53 37 6f 4b 
0x01c0(448) : 39 54 42 57 4d 6e 6d 4e 63 70 33 45 75 6b 6a 39 
0x01d0(464) : 69 45 5a 2d 47 42 62 61 64 36 63 34 45 4f 4f 4e 
0x01e0(480) : 73 61 74 43 4c 64 5a 78 51 63 39 49 4b 74 52 31 
0x01f0(496) : 35 2e 30 4c 39 62 76 6e 69 57 72 77 75 44 48 6b 
0x0200(512) : 6e 38 77 36 6c 55 31 41 34 42 53 50 32 75 51 37 
0x0210(528) : 73 51 54 30 30 4d 6e 69 73 63 63 6c 70 74 54 62 
0x0220(544) : 2d 4f 68 6b 73 6a 75 77 75 4c 4a 77 44 6a 31 33 
0x0230(560) : 38 55 33 38 72 71 71 68 51 51 51 45 48 75 70 47 
0x0240(576) : 47 55 2e 36 42 74 30 33 43 4b 7a 50 31 2d 53 39 
0x0250(592) : 54 57 48 49 4b 35 2e 6c 56 4f 7a 6d 47 6d 30 57 
0x0260(608) : 45 2d 63 51 73 64 54 32 78 52 52 79 51 74 36 74 
0x0270(624) : 4e 4e 41 69 54 38 52 79 57 4f 6a 6e 38 6a 48 4d 
0x0280(640) : 69 75 6d 59 56 45 61 51 66 2d 4d 33 74 53 77 45 
0x0290(656) : 71 34 77 48 43 4c 44 6a 6a 77 55 72 65 6c 43 4b 
0x02a0(672) : 64 79 74 36 41 52 57 70 52 74 73 49 4a 6e 57 37 
0x02b0(688) : 72 52 4f 32 6d 63 6c 55 57 44 4a 38 79 56 54 61 
0x02c0(704) : 53 4b 67 63 6c 42 51 41 32 47 53 4c 31 7a 54 74 
0x02d0(720) : 4f 72 76 38 52 65 63 79 72 77 34 6e 50 58 4c 72 
0x02e0(736) : 72 30 53 62 42 73 6c 44 36 43 59 38 39 2d 2d 58 
0x02f0(752) : 72 75 66 47 57 47 43 4c 41 48 36 5a 6f 53 50 65 
0x0300(768) : 53 72 44 64 68 79 71 6e 38 4d 76 48 4d 75 6f 42 
0x0310(784) : 6d 53 52 47 69 65 62 73 76 69 50 68 38 6f 4a 61 
0x0320(800) : 64 57 42 49 54 2d 34 62 4c 7a 74 68 73 66 73 63 
0x0330(816) : 35 49 74 6e 77 53 64 70 38 31 55 47 70 6f 71 52 
0x0340(832) : 49 2d 6a 6c 2e 6e 4c 4b 6c 43 2d 62 72 73 42 78 
0x0350(848) : 38 32 69 32 56 4b 72 64 4c 4a 75 38 35 69 5a 4f 
0x0360(864) : 69 48 37 67 32 53 2e 6e 65 2e 4d 55 71 59 50 79 
0x0370(880) : 61 35 2e 33 50 70 68 6b 36 5a 74 43 46 51 61 78 
0x0380(896) : 68 68 63 6b 38 61 56 6d 59 73 45 4d 4f 64 49 79 
0x0390(912) : 6a 47 30 36 33 68 72 41 45 69 4d 54 36 77 50 6f 
0x03a0(928) : 62 2d 57 6a 5a 2d 55 36 72 69 53 44 4b 6c 41 31 
0x03b0(944) : 2d 41 37 33 72 79 44 33 65 5a 57 6c 54 76 58 32 
0x03c0(960) : 75 31 6d 53 30 45 59 73 77 2e 33 45 6a 44 46 6a 
0x03d0(976) : 4e 4e 6d 43 4a 7a 46 79 57 6d 68 7a 66 43 2d 59 
0x03e0(992) : 44 6c 2e 44 7a 57 33 75 55 37 36 43 4b 4d 76 69 
0x03f0(1008) : 6a 66 75 30 63 38 79 36 75 64 33 58 70 32 33 30 
0x0400(1024) : 6f 31 45 6c 58 48 64 30 4f 6b 43 6a 34 35 50 6e 
0x0410(1040) : 6b 48 6e 4b 50 6b 51 48 4c 54 70 39 56 73 39 48 
0x0420(1056) : 75 4e 31 50 66 65 50 31 4d 62 6b 51 67 37 42 4f 
0x0430(1072) : 50 7a 69 6f 68 36 34 30 5a 74 39 33 6a 4a 4b 62 
0x0440(1088) : 67 4c 2d 4a 2e 4f 4c 4b 2e 33 6c 65 42 77 31 61 
0x0450(1104) : 74 6a 4d 59 71 51 5a 4e 48 69 51 2d 2d 6c 61 67 
0x0460(1120) : 34 5a 7a 32 79 49 4e 77 4d 36 59 58 30 5a 35 75 
0x0470(1136) : 48 52 51 35 73 7a 53 37 67 74 36 66 63 68 4a 67 
0x0480(1152) : 45 0d 0a 
initial input and inout tuples:
	control = (
		offset = 0x0000(0)
		virtual_offset = 0x0000(0)
		section = 0x0(0)
		activeBank = 0x0(0)
		done = 0x0(0)
		error = 0x0(0)
	)
	CheckCache_fl = (
		forward_1 = 0x0(0)
	)
	hdr = (
		eth = (
		isValid = 0x1(1)
		dst = 0x000000000000(0)
		src = 0x000000000000(0)
		type = 0x0800(2048)
	)
		fec = (
		isValid = 0x0(0)
		traffic_class = 0x0(0)
		block_index = 0x00(0)
		packet_index = 0x00(0)
		original_type = 0x0000(0)
	)
		ipv4 = (
		isValid = 0x1(1)
		version = 0x4(4)
		ihl = 0x5(5)
		diffserv = 0x00(0)
		totallen = 0x0475(1141)
		identification = 0x76d8(30424)
		flags = 0x2(2)
		fragoffset = 0x0000(0)
		ttl = 0x40(64)
		protocol = 0x11(17)
		hdrchecksum = 0xc19d(49565)
		srcAddr = 0x7f000001(2130706433)
		dstAddr = 0x7f000001(2130706433)
	)
		udp = (
		isValid = 0x1(1)
		sport = 0xa9d3(43475)
		dport = 0x2bcb(11211)
		len = 0x0461(1121)
		chksum = 0x0275(629)
	)
	)
	ioports = (
		ingress_port = 0x0(0)
		egress_port = 0x0(0)
	)
	local_state = (
		id = 0x0004(4)
	)
	Parser_extracts = (
		size = 0x00000150(336)
	)
	memcached_input = (
		stateful_valid = 0x1(1)
	)
clear internal and output-only tuples
	memcached_output = (
		forward = 0x0(0)
	)
Enter USER ENGINE FUNCTION
0
134235392
321293619585630225
13951446858640490240
468199414629473
177047760351002625
72184473615077392
1157442765409235285
5068929229655192182
8741580835300797283
8456163013817938762
7085984324762884176
6219302127045987917
3851497373175403621
6158205405829406768
2319389203729888269
734461974858188589
3545026120104899695
8605080868699207001
7652541978050638657
8815884602207262033
7516029720090408045
8670666600327098468
6506367974184993861
7954318161090861688
6446393033401579569
5435096276089139569
8156428172321376817
7435516064771568234
7309964980131294512
3262651528618587234
3709109336454876264
8815622789421691507
5077916848491362361
7077495102856525636
5792007702174709077
5577535932662501962
5634079379378759543
5202579318319965815
7728541204669819725
3696461573633429816
5576977411792921139
5724451666946191466
5348159017231869794
3486464984722405192
7809656649669960007
5490795366095401301
3832122805648048743
3563845360538109035
8518917614438724141
8305563717371385669
5280876804371932012
8444645625038201415
3562965679159470166
5201191725819848034
5427778949079330635
4130999700934257998
7165283380562192953
7585568297891029601
7221068128687443790
8314054219495922296
5864594126727828017
3832053436877272686
7590661554350344299
7942229018497331521
3765663842344194359
8309515353420820073
8314598654450357346
3264943065574045047
8452212476776952115
4059206956675592552
5859553948195975239
5140065360291311667
4849103908635497273
6077405701791362668
6219324220190306391
4984749564048462898
8670082913652717172
5642519303782158969
6291364226085308493
7599100176724484433
7362625849210926917
8157275977325233258
7671694440065155915
7239945652347754352
5941500567027078967
8237733746416249941
6288232586130379873
6002004605117026625
3622956011955573876
5724768060613944185
8248118890951363698
8228168200692657220
3910066999500025176
8247610749191930700
4704069572831170661
6012943650533241198
4057028892239949634
7877730639865537139
8532439377583753825
7230320609478915170
5510845086002738019
3839728175107236976
4049111305300177234
5272987751588711499
7801128880386032248
4049414679876563556
5497335179433826895
7586374488671071854
7290849876128649337
7004555593372428395
3916570658243436920
7523372489680967277
6445571690044082553
7658142700715668033
5001613885258027119
7074406703959987510
8244212145666670897
3260948299296359475
7303245868519807026
8444650980355955059
8587857912670733930
5642567518921574009
6299806328672169305
4930366563709039477
6140436279597037161
7666944266328373558
8458942455041110832
8012261543708746800
5722741874925850734
7730550030132269384
5500144436492056904
8452747772006060081
5576137286006293071
5799063397403604016
6517897453701319522
7443374080764365899
3329123731719532897
8388602302479555150
5217790897762885991
3772461995078012535
5563732624966038901
5211317008833598263
7454643096587356775
4975644158430543872
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<Inside MemCore<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<< 
The No. 0Packet
0
931
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<Inside MemCore<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<< 
===================================================================
Entering engine CheckCache_lvl_1
input packet (0 bytes)
initial input and inout tuples:
	CheckCache_fl = (
		forward_1 = 0x0(0)
	)
	hdr = (
		eth = (
		isValid = 0x1(1)
		dst = 0x000000000000(0)
		src = 0x000000000000(0)
		type = 0x0800(2048)
	)
		fec = (
		isValid = 0x0(0)
		traffic_class = 0x0(0)
		block_index = 0x00(0)
		packet_index = 0x00(0)
		original_type = 0x0000(0)
	)
		ipv4 = (
		isValid = 0x1(1)
		version = 0x4(4)
		ihl = 0x5(5)
		diffserv = 0x00(0)
		totallen = 0x0475(1141)
		identification = 0x76d8(30424)
		flags = 0x2(2)
		fragoffset = 0x0000(0)
		ttl = 0x40(64)
		protocol = 0x11(17)
		hdrchecksum = 0xc19d(49565)
		srcAddr = 0x7f000001(2130706433)
		dstAddr = 0x7f000001(2130706433)
	)
		udp = (
		isValid = 0x1(1)
		sport = 0xa9d3(43475)
		dport = 0x2bcb(11211)
		len = 0x0461(1121)
		chksum = 0x0275(629)
	)
	)
	ioports = (
		ingress_port = 0x0(0)
		egress_port = 0x0(0)
	)
	local_state = (
		id = 0x0004(4)
	)
	memcached_output = (
		forward = 0x0(0)
	)
clear internal and output-only tuples
	control = (
		offset = 0x0000(0)
		virtual_offset = 0x0000(0)
		section = 0x0(0)
		activeBank = 0x0(0)
		done = 0x0(0)
		error = 0x0(0)
	)
processing section local_start in stage 1
-------------------------------------------------------------------
Section local_start starting


	method move_to_section = memcached_sec

updated tuples:
	control = (
		offset = 0x0000(0)
		virtual_offset = 0x0000(0)
		section = 0x2(2)
		activeBank = 0x0(0)
		done = 0x0(0)
		error = 0x0(0)
	)
	CheckCache_fl = (
		forward_1 = 0x0(0)
	)
	hdr = (
		eth = (
		isValid = 0x1(1)
		dst = 0x000000000000(0)
		src = 0x000000000000(0)
		type = 0x0800(2048)
	)
		fec = (
		isValid = 0x0(0)
		traffic_class = 0x0(0)
		block_index = 0x00(0)
		packet_index = 0x00(0)
		original_type = 0x0000(0)
	)
		ipv4 = (
		isValid = 0x1(1)
		version = 0x4(4)
		ihl = 0x5(5)
		diffserv = 0x00(0)
		totallen = 0x0475(1141)
		identification = 0x76d8(30424)
		flags = 0x2(2)
		fragoffset = 0x0000(0)
		ttl = 0x40(64)
		protocol = 0x11(17)
		hdrchecksum = 0xc19d(49565)
		srcAddr = 0x7f000001(2130706433)
		dstAddr = 0x7f000001(2130706433)
	)
		udp = (
		isValid = 0x1(1)
		sport = 0xa9d3(43475)
		dport = 0x2bcb(11211)
		len = 0x0461(1121)
		chksum = 0x0275(629)
	)
	)
	ioports = (
		ingress_port = 0x0(0)
		egress_port = 0x0(0)
	)
	local_state = (
		id = 0x0004(4)
	)
	memcached_output = (
		forward = 0x0(0)
	)
Section local_start finished
-------------------------------------------------------------------
processing section memcached_sec in stage 2
-------------------------------------------------------------------
Section memcached_sec starting

	method update (tuples)
		CheckCache_fl.forward_1 = 0x0(0)


	method move_to_section = sink

updated tuples:
	control = (
		offset = 0x0000(0)
		virtual_offset = 0x0000(0)
		section = 0x3(3)
		activeBank = 0x0(0)
		done = 0x0(0)
		error = 0x0(0)
	)
	CheckCache_fl = (
		forward_1 = 0x0(0)
	)
	hdr = (
		eth = (
		isValid = 0x1(1)
		dst = 0x000000000000(0)
		src = 0x000000000000(0)
		type = 0x0800(2048)
	)
		fec = (
		isValid = 0x0(0)
		traffic_class = 0x0(0)
		block_index = 0x00(0)
		packet_index = 0x00(0)
		original_type = 0x0000(0)
	)
		ipv4 = (
		isValid = 0x1(1)
		version = 0x4(4)
		ihl = 0x5(5)
		diffserv = 0x00(0)
		totallen = 0x0475(1141)
		identification = 0x76d8(30424)
		flags = 0x2(2)
		fragoffset = 0x0000(0)
		ttl = 0x40(64)
		protocol = 0x11(17)
		hdrchecksum = 0xc19d(49565)
		srcAddr = 0x7f000001(2130706433)
		dstAddr = 0x7f000001(2130706433)
	)
		udp = (
		isValid = 0x1(1)
		sport = 0xa9d3(43475)
		dport = 0x2bcb(11211)
		len = 0x0461(1121)
		chksum = 0x0275(629)
	)
	)
	ioports = (
		ingress_port = 0x0(0)
		egress_port = 0x0(0)
	)
	local_state = (
		id = 0x0004(4)
	)
	memcached_output = (
		forward = 0x0(0)
	)
Section memcached_sec finished
-------------------------------------------------------------------
processing section sink in stage 3
-------------------------------------------------------------------
Section sink starting


	method move_to_section = done(0)

updated tuples:
	control = (
		offset = 0x0000(0)
		virtual_offset = 0x0000(0)
		section = 0x0(0)
		activeBank = 0x0(0)
		done = 0x1(1)
		error = 0x0(0)
	)
	CheckCache_fl = (
		forward_1 = 0x0(0)
	)
	hdr = (
		eth = (
		isValid = 0x1(1)
		dst = 0x000000000000(0)
		src = 0x000000000000(0)
		type = 0x0800(2048)
	)
		fec = (
		isValid = 0x0(0)
		traffic_class = 0x0(0)
		block_index = 0x00(0)
		packet_index = 0x00(0)
		original_type = 0x0000(0)
	)
		ipv4 = (
		isValid = 0x1(1)
		version = 0x4(4)
		ihl = 0x5(5)
		diffserv = 0x00(0)
		totallen = 0x0475(1141)
		identification = 0x76d8(30424)
		flags = 0x2(2)
		fragoffset = 0x0000(0)
		ttl = 0x40(64)
		protocol = 0x11(17)
		hdrchecksum = 0xc19d(49565)
		srcAddr = 0x7f000001(2130706433)
		dstAddr = 0x7f000001(2130706433)
	)
		udp = (
		isValid = 0x1(1)
		sport = 0xa9d3(43475)
		dport = 0x2bcb(11211)
		len = 0x0461(1121)
		chksum = 0x0275(629)
	)
	)
	ioports = (
		ingress_port = 0x0(0)
		egress_port = 0x0(0)
	)
	local_state = (
		id = 0x0004(4)
	)
	memcached_output = (
		forward = 0x0(0)
	)
Section sink finished
-------------------------------------------------------------------
final inout and output tuples:

Note: this engine's wrapper will clear the upper control tuple fields on output, except for the 'control.error' field.

	hdr = (
		eth = (
		isValid = 0x1(1)
		dst = 0x000000000000(0)
		src = 0x000000000000(0)
		type = 0x0800(2048)
	)
		fec = (
		isValid = 0x0(0)
		traffic_class = 0x0(0)
		block_index = 0x00(0)
		packet_index = 0x00(0)
		original_type = 0x0000(0)
	)
		ipv4 = (
		isValid = 0x1(1)
		version = 0x4(4)
		ihl = 0x5(5)
		diffserv = 0x00(0)
		totallen = 0x0475(1141)
		identification = 0x76d8(30424)
		flags = 0x2(2)
		fragoffset = 0x0000(0)
		ttl = 0x40(64)
		protocol = 0x11(17)
		hdrchecksum = 0xc19d(49565)
		srcAddr = 0x7f000001(2130706433)
		dstAddr = 0x7f000001(2130706433)
	)
		udp = (
		isValid = 0x1(1)
		sport = 0xa9d3(43475)
		dport = 0x2bcb(11211)
		len = 0x0461(1121)
		chksum = 0x0275(629)
	)
	)
	ioports = (
		ingress_port = 0x0(0)
		egress_port = 0x0(0)
	)
Exiting engine CheckCache_lvl_1
===================================================================
===================================================================
Entering engine Deparser
input packet (1155 bytes)
 0x0000(0) : 00 00 00 00 00 00 00 00 00 00 00 00 08 00 45 00 
0x0010(16) : 04 75 76 d8 40 00 40 11 c1 9d 7f 00 00 01 7f 00 
0x0020(32) : 00 01 a9 d3 2b cb 04 61 02 75 00 00 00 00 00 01 
0x0030(48) : 01 00 73 65 74 20 10 10 10 10 10 10 10 10 31 55 
0x0040(64) : 46 58 74 47 2d 31 32 76 79 50 55 74 6f 77 6b 63 
0x0050(80) : 75 5a 53 75 59 6a 33 4a 62 56 79 33 41 7a 58 50 
0x0060(96) : 56 4f 66 55 51 68 4e 4d 35 73 44 74 6d 78 54 65 
0x0070(112) : 55 76 57 30 64 5a 20 30 20 30 20 31 30 32 34 0d 
0x0080(128) : 0a 31 55 46 58 74 47 2d 31 32 76 79 50 55 74 6f 
0x0090(144) : 77 6b 63 75 5a 53 75 59 6a 33 4a 62 56 79 33 41 
0x00a0(160) : 7a 58 50 56 4f 66 55 51 68 4e 4d 35 73 44 74 6d 
0x00b0(176) : 78 54 65 55 76 57 30 64 5a 4b 43 33 47 46 44 45 
0x00c0(192) : 6e 63 6a 39 46 42 5a 78 59 76 30 4f 36 74 38 31 
0x00d0(208) : 4b 6d 57 44 48 57 71 71 71 31 74 35 47 34 4a 31 
0x00e0(224) : 67 30 42 77 42 6b 72 6a 65 72 36 6b 69 45 6d 30 
0x00f0(240) : 2d 47 44 47 6d 32 34 62 33 79 67 4a 30 7a 4c 68 
0x0100(256) : 7a 57 62 38 45 51 72 73 46 78 62 78 41 4c 78 39 
0x0110(272) : 62 38 50 4c 41 54 77 44 50 61 58 51 58 73 35 55 
0x0120(288) : 4d 67 63 61 34 53 52 4a 4e 30 45 58 4c 39 67 77 
0x0130(304) : 48 33 46 53 58 41 66 77 6b 41 4b 47 30 50 6b 4d 
0x0140(320) : 33 4c 78 37 6e 4d 51 38 4d 65 67 68 6e 4b 62 33 
0x0150(336) : 4f 71 56 76 2e 38 70 6a 4a 38 7a 4a 58 68 67 62 
0x0160(352) : 30 62 69 6e 78 37 77 48 6c 61 79 58 75 58 61 47 
0x0170(368) : 4c 33 39 4b 42 7a 31 55 35 2e 6f 63 66 53 42 67 
0x0180(384) : 31 75 52 79 2d 4c 44 6b 76 39 46 6f 67 70 32 2d 
0x0190(400) : 73 43 4a 32 39 4b 57 45 49 49 71 79 6b 30 63 6c 
0x01a0(416) : 75 31 68 74 4e 75 62 47 31 72 32 68 65 35 68 56 
0x01b0(432) : 48 2e 58 51 4a 31 65 62 4b 53 58 32 53 37 6f 4b 
0x01c0(448) : 39 54 42 57 4d 6e 6d 4e 63 70 33 45 75 6b 6a 39 
0x01d0(464) : 69 45 5a 2d 47 42 62 61 64 36 63 34 45 4f 4f 4e 
0x01e0(480) : 73 61 74 43 4c 64 5a 78 51 63 39 49 4b 74 52 31 
0x01f0(496) : 35 2e 30 4c 39 62 76 6e 69 57 72 77 75 44 48 6b 
0x0200(512) : 6e 38 77 36 6c 55 31 41 34 42 53 50 32 75 51 37 
0x0210(528) : 73 51 54 30 30 4d 6e 69 73 63 63 6c 70 74 54 62 
0x0220(544) : 2d 4f 68 6b 73 6a 75 77 75 4c 4a 77 44 6a 31 33 
0x0230(560) : 38 55 33 38 72 71 71 68 51 51 51 45 48 75 70 47 
0x0240(576) : 47 55 2e 36 42 74 30 33 43 4b 7a 50 31 2d 53 39 
0x0250(592) : 54 57 48 49 4b 35 2e 6c 56 4f 7a 6d 47 6d 30 57 
0x0260(608) : 45 2d 63 51 73 64 54 32 78 52 52 79 51 74 36 74 
0x0270(624) : 4e 4e 41 69 54 38 52 79 57 4f 6a 6e 38 6a 48 4d 
0x0280(640) : 69 75 6d 59 56 45 61 51 66 2d 4d 33 74 53 77 45 
0x0290(656) : 71 34 77 48 43 4c 44 6a 6a 77 55 72 65 6c 43 4b 
0x02a0(672) : 64 79 74 36 41 52 57 70 52 74 73 49 4a 6e 57 37 
0x02b0(688) : 72 52 4f 32 6d 63 6c 55 57 44 4a 38 79 56 54 61 
0x02c0(704) : 53 4b 67 63 6c 42 51 41 32 47 53 4c 31 7a 54 74 
0x02d0(720) : 4f 72 76 38 52 65 63 79 72 77 34 6e 50 58 4c 72 
0x02e0(736) : 72 30 53 62 42 73 6c 44 36 43 59 38 39 2d 2d 58 
0x02f0(752) : 72 75 66 47 57 47 43 4c 41 48 36 5a 6f 53 50 65 
0x0300(768) : 53 72 44 64 68 79 71 6e 38 4d 76 48 4d 75 6f 42 
0x0310(784) : 6d 53 52 47 69 65 62 73 76 69 50 68 38 6f 4a 61 
0x0320(800) : 64 57 42 49 54 2d 34 62 4c 7a 74 68 73 66 73 63 
0x0330(816) : 35 49 74 6e 77 53 64 70 38 31 55 47 70 6f 71 52 
0x0340(832) : 49 2d 6a 6c 2e 6e 4c 4b 6c 43 2d 62 72 73 42 78 
0x0350(848) : 38 32 69 32 56 4b 72 64 4c 4a 75 38 35 69 5a 4f 
0x0360(864) : 69 48 37 67 32 53 2e 6e 65 2e 4d 55 71 59 50 79 
0x0370(880) : 61 35 2e 33 50 70 68 6b 36 5a 74 43 46 51 61 78 
0x0380(896) : 68 68 63 6b 38 61 56 6d 59 73 45 4d 4f 64 49 79 
0x0390(912) : 6a 47 30 36 33 68 72 41 45 69 4d 54 36 77 50 6f 
0x03a0(928) : 62 2d 57 6a 5a 2d 55 36 72 69 53 44 4b 6c 41 31 
0x03b0(944) : 2d 41 37 33 72 79 44 33 65 5a 57 6c 54 76 58 32 
0x03c0(960) : 75 31 6d 53 30 45 59 73 77 2e 33 45 6a 44 46 6a 
0x03d0(976) : 4e 4e 6d 43 4a 7a 46 79 57 6d 68 7a 66 43 2d 59 
0x03e0(992) : 44 6c 2e 44 7a 57 33 75 55 37 36 43 4b 4d 76 69 
0x03f0(1008) : 6a 66 75 30 63 38 79 36 75 64 33 58 70 32 33 30 
0x0400(1024) : 6f 31 45 6c 58 48 64 30 4f 6b 43 6a 34 35 50 6e 
0x0410(1040) : 6b 48 6e 4b 50 6b 51 48 4c 54 70 39 56 73 39 48 
0x0420(1056) : 75 4e 31 50 66 65 50 31 4d 62 6b 51 67 37 42 4f 
0x0430(1072) : 50 7a 69 6f 68 36 34 30 5a 74 39 33 6a 4a 4b 62 
0x0440(1088) : 67 4c 2d 4a 2e 4f 4c 4b 2e 33 6c 65 42 77 31 61 
0x0450(1104) : 74 6a 4d 59 71 51 5a 4e 48 69 51 2d 2d 6c 61 67 
0x0460(1120) : 34 5a 7a 32 79 49 4e 77 4d 36 59 58 30 5a 35 75 
0x0470(1136) : 48 52 51 35 73 7a 53 37 67 74 36 66 63 68 4a 67 
0x0480(1152) : 45 0d 0a 
initial input and inout tuples:
	control = (
		offset = 0x0000(0)
		virtual_offset = 0x0000(0)
		section = 0x0(0)
		activeBank = 0x0(0)
		done = 0x0(0)
		error = 0x0(0)
	)
	hdr = (
		eth = (
		isValid = 0x1(1)
		dst = 0x000000000000(0)
		src = 0x000000000000(0)
		type = 0x0800(2048)
	)
		fec = (
		isValid = 0x0(0)
		traffic_class = 0x0(0)
		block_index = 0x00(0)
		packet_index = 0x00(0)
		original_type = 0x0000(0)
	)
		ipv4 = (
		isValid = 0x1(1)
		version = 0x4(4)
		ihl = 0x5(5)
		diffserv = 0x00(0)
		totallen = 0x0475(1141)
		identification = 0x76d8(30424)
		flags = 0x2(2)
		fragoffset = 0x0000(0)
		ttl = 0x40(64)
		protocol = 0x11(17)
		hdrchecksum = 0xc19d(49565)
		srcAddr = 0x7f000001(2130706433)
		dstAddr = 0x7f000001(2130706433)
	)
		udp = (
		isValid = 0x1(1)
		sport = 0xa9d3(43475)
		dport = 0x2bcb(11211)
		len = 0x0461(1121)
		chksum = 0x0275(629)
	)
	)
	Deparser_extracts = (
		size = 0x00000150(336)
	)
clear internal and output-only tuples
processing section extract_headers_sec in stage 1
-------------------------------------------------------------------
Section extract_headers_sec starting


	method remove
	removing 42 bytes at byte 0:
 0x0000(0) : 00 00 00 00 00 00 00 00 00 00 00 00 08 00 45 00 
0x0010(16) : 04 75 76 d8 40 00 40 11 c1 9d 7f 00 00 01 7f 00 
0x0020(32) : 00 01 a9 d3 2b cb 04 61 02 75 
	method move_to_section = act_sec

updated tuples:
	control = (
		offset = 0x0000(0)
		virtual_offset = 0x0150(336)
		section = 0x1(1)
		activeBank = 0x0(0)
		done = 0x0(0)
		error = 0x0(0)
	)
	hdr = (
		eth = (
		isValid = 0x1(1)
		dst = 0x000000000000(0)
		src = 0x000000000000(0)
		type = 0x0800(2048)
	)
		fec = (
		isValid = 0x0(0)
		traffic_class = 0x0(0)
		block_index = 0x00(0)
		packet_index = 0x00(0)
		original_type = 0x0000(0)
	)
		ipv4 = (
		isValid = 0x1(1)
		version = 0x4(4)
		ihl = 0x5(5)
		diffserv = 0x00(0)
		totallen = 0x0475(1141)
		identification = 0x76d8(30424)
		flags = 0x2(2)
		fragoffset = 0x0000(0)
		ttl = 0x40(64)
		protocol = 0x11(17)
		hdrchecksum = 0xc19d(49565)
		srcAddr = 0x7f000001(2130706433)
		dstAddr = 0x7f000001(2130706433)
	)
		udp = (
		isValid = 0x1(1)
		sport = 0xa9d3(43475)
		dport = 0x2bcb(11211)
		len = 0x0461(1121)
		chksum = 0x0275(629)
	)
	)
	Deparser_extracts = (
		size = 0x00000150(336)
	)
Section extract_headers_sec finished
-------------------------------------------------------------------
processing section act_sec in stage 2
-------------------------------------------------------------------
Section act_sec starting


	method move_to_section = emit_3

updated tuples:
	control = (
		offset = 0x0000(0)
		virtual_offset = 0x0150(336)
		section = 0x5(5)
		activeBank = 0x0(0)
		done = 0x0(0)
		error = 0x0(0)
	)
	hdr = (
		eth = (
		isValid = 0x1(1)
		dst = 0x000000000000(0)
		src = 0x000000000000(0)
		type = 0x0800(2048)
	)
		fec = (
		isValid = 0x0(0)
		traffic_class = 0x0(0)
		block_index = 0x00(0)
		packet_index = 0x00(0)
		original_type = 0x0000(0)
	)
		ipv4 = (
		isValid = 0x1(1)
		version = 0x4(4)
		ihl = 0x5(5)
		diffserv = 0x00(0)
		totallen = 0x0475(1141)
		identification = 0x76d8(30424)
		flags = 0x2(2)
		fragoffset = 0x0000(0)
		ttl = 0x40(64)
		protocol = 0x11(17)
		hdrchecksum = 0xc19d(49565)
		srcAddr = 0x7f000001(2130706433)
		dstAddr = 0x7f000001(2130706433)
	)
		udp = (
		isValid = 0x1(1)
		sport = 0xa9d3(43475)
		dport = 0x2bcb(11211)
		len = 0x0461(1121)
		chksum = 0x0275(629)
	)
	)
	Deparser_extracts = (
		size = 0x00000150(336)
	)
Section act_sec finished
-------------------------------------------------------------------
processing section emit_3 in stage 3
-------------------------------------------------------------------
Section emit_3 starting

	method update (tuples)


	method update (packet)
		 dst = 0x000000000000(0)
		 src = 0x000000000000(0)
		 type = 0x0800(2048)

	method insert
	inserting 14 bytes at byte 0:
 0x0000(0) : 00 00 00 00 00 00 00 00 00 00 00 00 08 00 
	method move_to_section = emit_2

updated tuples:
	control = (
		offset = 0x0070(112)
		virtual_offset = 0x0150(336)
		section = 0x4(4)
		activeBank = 0x0(0)
		done = 0x0(0)
		error = 0x0(0)
	)
	hdr = (
		eth = (
		isValid = 0x1(1)
		dst = 0x000000000000(0)
		src = 0x000000000000(0)
		type = 0x0800(2048)
	)
		fec = (
		isValid = 0x0(0)
		traffic_class = 0x0(0)
		block_index = 0x00(0)
		packet_index = 0x00(0)
		original_type = 0x0000(0)
	)
		ipv4 = (
		isValid = 0x1(1)
		version = 0x4(4)
		ihl = 0x5(5)
		diffserv = 0x00(0)
		totallen = 0x0475(1141)
		identification = 0x76d8(30424)
		flags = 0x2(2)
		fragoffset = 0x0000(0)
		ttl = 0x40(64)
		protocol = 0x11(17)
		hdrchecksum = 0xc19d(49565)
		srcAddr = 0x7f000001(2130706433)
		dstAddr = 0x7f000001(2130706433)
	)
		udp = (
		isValid = 0x1(1)
		sport = 0xa9d3(43475)
		dport = 0x2bcb(11211)
		len = 0x0461(1121)
		chksum = 0x0275(629)
	)
	)
	Deparser_extracts = (
		size = 0x00000150(336)
	)
Section emit_3 finished
-------------------------------------------------------------------
processing section emit_2 in stage 4
-------------------------------------------------------------------
Section emit_2 starting

	method update (tuples)


	method update (packet)
		 traffic_class = 0x0(0)
		 block_index = 0x00(0)
		 packet_index = 0x00(0)
		 original_type = 0x0000(0)

	method insert
	inserting 0 bytes at byte 14:
 0x0000(0) :                                           
	method move_to_section = emit_1

updated tuples:
	control = (
		offset = 0x0070(112)
		virtual_offset = 0x0150(336)
		section = 0x3(3)
		activeBank = 0x0(0)
		done = 0x0(0)
		error = 0x0(0)
	)
	hdr = (
		eth = (
		isValid = 0x1(1)
		dst = 0x000000000000(0)
		src = 0x000000000000(0)
		type = 0x0800(2048)
	)
		fec = (
		isValid = 0x0(0)
		traffic_class = 0x0(0)
		block_index = 0x00(0)
		packet_index = 0x00(0)
		original_type = 0x0000(0)
	)
		ipv4 = (
		isValid = 0x1(1)
		version = 0x4(4)
		ihl = 0x5(5)
		diffserv = 0x00(0)
		totallen = 0x0475(1141)
		identification = 0x76d8(30424)
		flags = 0x2(2)
		fragoffset = 0x0000(0)
		ttl = 0x40(64)
		protocol = 0x11(17)
		hdrchecksum = 0xc19d(49565)
		srcAddr = 0x7f000001(2130706433)
		dstAddr = 0x7f000001(2130706433)
	)
		udp = (
		isValid = 0x1(1)
		sport = 0xa9d3(43475)
		dport = 0x2bcb(11211)
		len = 0x0461(1121)
		chksum = 0x0275(629)
	)
	)
	Deparser_extracts = (
		size = 0x00000150(336)
	)
Section emit_2 finished
-------------------------------------------------------------------
processing section emit_1 in stage 5
-------------------------------------------------------------------
Section emit_1 starting

	method update (tuples)


	method update (packet)
		 version = 0x4(4)
		 ihl = 0x5(5)
		 diffserv = 0x00(0)
		 totallen = 0x0475(1141)
		 identification = 0x76d8(30424)
		 flags = 0x2(2)
		 fragoffset = 0x0000(0)
		 ttl = 0x40(64)
		 protocol = 0x11(17)
		 hdrchecksum = 0xc19d(49565)
		 srcAddr = 0x7f000001(2130706433)
		 dstAddr = 0x7f000001(2130706433)

	method insert
	inserting 20 bytes at byte 14:
 0x0000(0) :                                           45 00 
0x0010(16) : 04 75 76 d8 40 00 40 11 c1 9d 7f 00 00 01 7f 00 
0x0020(32) : 00 01 
	method move_to_section = emit_0

updated tuples:
	control = (
		offset = 0x0110(272)
		virtual_offset = 0x0150(336)
		section = 0x2(2)
		activeBank = 0x0(0)
		done = 0x0(0)
		error = 0x0(0)
	)
	hdr = (
		eth = (
		isValid = 0x1(1)
		dst = 0x000000000000(0)
		src = 0x000000000000(0)
		type = 0x0800(2048)
	)
		fec = (
		isValid = 0x0(0)
		traffic_class = 0x0(0)
		block_index = 0x00(0)
		packet_index = 0x00(0)
		original_type = 0x0000(0)
	)
		ipv4 = (
		isValid = 0x1(1)
		version = 0x4(4)
		ihl = 0x5(5)
		diffserv = 0x00(0)
		totallen = 0x0475(1141)
		identification = 0x76d8(30424)
		flags = 0x2(2)
		fragoffset = 0x0000(0)
		ttl = 0x40(64)
		protocol = 0x11(17)
		hdrchecksum = 0xc19d(49565)
		srcAddr = 0x7f000001(2130706433)
		dstAddr = 0x7f000001(2130706433)
	)
		udp = (
		isValid = 0x1(1)
		sport = 0xa9d3(43475)
		dport = 0x2bcb(11211)
		len = 0x0461(1121)
		chksum = 0x0275(629)
	)
	)
	Deparser_extracts = (
		size = 0x00000150(336)
	)
Section emit_1 finished
-------------------------------------------------------------------
processing section emit_0 in stage 6
-------------------------------------------------------------------
Section emit_0 starting

	method update (tuples)


	method update (packet)
		 sport = 0xa9d3(43475)
		 dport = 0x2bcb(11211)
		 len = 0x0461(1121)
		 chksum = 0x0275(629)

	method insert
	inserting 8 bytes at byte 34:
0x0020(32) :       a9 d3 2b cb 04 61 02 75 
	method move_to_section = done(0)

updated tuples:
	control = (
		offset = 0x0150(336)
		virtual_offset = 0x0150(336)
		section = 0x0(0)
		activeBank = 0x0(0)
		done = 0x1(1)
		error = 0x0(0)
	)
	hdr = (
		eth = (
		isValid = 0x1(1)
		dst = 0x000000000000(0)
		src = 0x000000000000(0)
		type = 0x0800(2048)
	)
		fec = (
		isValid = 0x0(0)
		traffic_class = 0x0(0)
		block_index = 0x00(0)
		packet_index = 0x00(0)
		original_type = 0x0000(0)
	)
		ipv4 = (
		isValid = 0x1(1)
		version = 0x4(4)
		ihl = 0x5(5)
		diffserv = 0x00(0)
		totallen = 0x0475(1141)
		identification = 0x76d8(30424)
		flags = 0x2(2)
		fragoffset = 0x0000(0)
		ttl = 0x40(64)
		protocol = 0x11(17)
		hdrchecksum = 0xc19d(49565)
		srcAddr = 0x7f000001(2130706433)
		dstAddr = 0x7f000001(2130706433)
	)
		udp = (
		isValid = 0x1(1)
		sport = 0xa9d3(43475)
		dport = 0x2bcb(11211)
		len = 0x0461(1121)
		chksum = 0x0275(629)
	)
	)
	Deparser_extracts = (
		size = 0x00000150(336)
	)
Section emit_0 finished
-------------------------------------------------------------------
final inout and output tuples:

Note: this engine's wrapper will clear the upper control tuple fields on output, except for the 'control.error' field.

	control = (
		offset = 0x0000(0)
		virtual_offset = 0x0000(0)
		section = 0x0(0)
		activeBank = 0x0(0)
		done = 0x0(0)
		error = 0x0(0)
	)
output packet (1155 bytes)
 0x0000(0) : 00 00 00 00 00 00 00 00 00 00 00 00 08 00 45 00 
0x0010(16) : 04 75 76 d8 40 00 40 11 c1 9d 7f 00 00 01 7f 00 
0x0020(32) : 00 01 a9 d3 2b cb 04 61 02 75 00 00 00 00 00 01 
0x0030(48) : 01 00 73 65 74 20 10 10 10 10 10 10 10 10 31 55 
0x0040(64) : 46 58 74 47 2d 31 32 76 79 50 55 74 6f 77 6b 63 
0x0050(80) : 75 5a 53 75 59 6a 33 4a 62 56 79 33 41 7a 58 50 
0x0060(96) : 56 4f 66 55 51 68 4e 4d 35 73 44 74 6d 78 54 65 
0x0070(112) : 55 76 57 30 64 5a 20 30 20 30 20 31 30 32 34 0d 
0x0080(128) : 0a 31 55 46 58 74 47 2d 31 32 76 79 50 55 74 6f 
0x0090(144) : 77 6b 63 75 5a 53 75 59 6a 33 4a 62 56 79 33 41 
0x00a0(160) : 7a 58 50 56 4f 66 55 51 68 4e 4d 35 73 44 74 6d 
0x00b0(176) : 78 54 65 55 76 57 30 64 5a 4b 43 33 47 46 44 45 
0x00c0(192) : 6e 63 6a 39 46 42 5a 78 59 76 30 4f 36 74 38 31 
0x00d0(208) : 4b 6d 57 44 48 57 71 71 71 31 74 35 47 34 4a 31 
0x00e0(224) : 67 30 42 77 42 6b 72 6a 65 72 36 6b 69 45 6d 30 
0x00f0(240) : 2d 47 44 47 6d 32 34 62 33 79 67 4a 30 7a 4c 68 
0x0100(256) : 7a 57 62 38 45 51 72 73 46 78 62 78 41 4c 78 39 
0x0110(272) : 62 38 50 4c 41 54 77 44 50 61 58 51 58 73 35 55 
0x0120(288) : 4d 67 63 61 34 53 52 4a 4e 30 45 58 4c 39 67 77 
0x0130(304) : 48 33 46 53 58 41 66 77 6b 41 4b 47 30 50 6b 4d 
0x0140(320) : 33 4c 78 37 6e 4d 51 38 4d 65 67 68 6e 4b 62 33 
0x0150(336) : 4f 71 56 76 2e 38 70 6a 4a 38 7a 4a 58 68 67 62 
0x0160(352) : 30 62 69 6e 78 37 77 48 6c 61 79 58 75 58 61 47 
0x0170(368) : 4c 33 39 4b 42 7a 31 55 35 2e 6f 63 66 53 42 67 
0x0180(384) : 31 75 52 79 2d 4c 44 6b 76 39 46 6f 67 70 32 2d 
0x0190(400) : 73 43 4a 32 39 4b 57 45 49 49 71 79 6b 30 63 6c 
0x01a0(416) : 75 31 68 74 4e 75 62 47 31 72 32 68 65 35 68 56 
0x01b0(432) : 48 2e 58 51 4a 31 65 62 4b 53 58 32 53 37 6f 4b 
0x01c0(448) : 39 54 42 57 4d 6e 6d 4e 63 70 33 45 75 6b 6a 39 
0x01d0(464) : 69 45 5a 2d 47 42 62 61 64 36 63 34 45 4f 4f 4e 
0x01e0(480) : 73 61 74 43 4c 64 5a 78 51 63 39 49 4b 74 52 31 
0x01f0(496) : 35 2e 30 4c 39 62 76 6e 69 57 72 77 75 44 48 6b 
0x0200(512) : 6e 38 77 36 6c 55 31 41 34 42 53 50 32 75 51 37 
0x0210(528) : 73 51 54 30 30 4d 6e 69 73 63 63 6c 70 74 54 62 
0x0220(544) : 2d 4f 68 6b 73 6a 75 77 75 4c 4a 77 44 6a 31 33 
0x0230(560) : 38 55 33 38 72 71 71 68 51 51 51 45 48 75 70 47 
0x0240(576) : 47 55 2e 36 42 74 30 33 43 4b 7a 50 31 2d 53 39 
0x0250(592) : 54 57 48 49 4b 35 2e 6c 56 4f 7a 6d 47 6d 30 57 
0x0260(608) : 45 2d 63 51 73 64 54 32 78 52 52 79 51 74 36 74 
0x0270(624) : 4e 4e 41 69 54 38 52 79 57 4f 6a 6e 38 6a 48 4d 
0x0280(640) : 69 75 6d 59 56 45 61 51 66 2d 4d 33 74 53 77 45 
0x0290(656) : 71 34 77 48 43 4c 44 6a 6a 77 55 72 65 6c 43 4b 
0x02a0(672) : 64 79 74 36 41 52 57 70 52 74 73 49 4a 6e 57 37 
0x02b0(688) : 72 52 4f 32 6d 63 6c 55 57 44 4a 38 79 56 54 61 
0x02c0(704) : 53 4b 67 63 6c 42 51 41 32 47 53 4c 31 7a 54 74 
0x02d0(720) : 4f 72 76 38 52 65 63 79 72 77 34 6e 50 58 4c 72 
0x02e0(736) : 72 30 53 62 42 73 6c 44 36 43 59 38 39 2d 2d 58 
0x02f0(752) : 72 75 66 47 57 47 43 4c 41 48 36 5a 6f 53 50 65 
0x0300(768) : 53 72 44 64 68 79 71 6e 38 4d 76 48 4d 75 6f 42 
0x0310(784) : 6d 53 52 47 69 65 62 73 76 69 50 68 38 6f 4a 61 
0x0320(800) : 64 57 42 49 54 2d 34 62 4c 7a 74 68 73 66 73 63 
0x0330(816) : 35 49 74 6e 77 53 64 70 38 31 55 47 70 6f 71 52 
0x0340(832) : 49 2d 6a 6c 2e 6e 4c 4b 6c 43 2d 62 72 73 42 78 
0x0350(848) : 38 32 69 32 56 4b 72 64 4c 4a 75 38 35 69 5a 4f 
0x0360(864) : 69 48 37 67 32 53 2e 6e 65 2e 4d 55 71 59 50 79 
0x0370(880) : 61 35 2e 33 50 70 68 6b 36 5a 74 43 46 51 61 78 
0x0380(896) : 68 68 63 6b 38 61 56 6d 59 73 45 4d 4f 64 49 79 
0x0390(912) : 6a 47 30 36 33 68 72 41 45 69 4d 54 36 77 50 6f 
0x03a0(928) : 62 2d 57 6a 5a 2d 55 36 72 69 53 44 4b 6c 41 31 
0x03b0(944) : 2d 41 37 33 72 79 44 33 65 5a 57 6c 54 76 58 32 
0x03c0(960) : 75 31 6d 53 30 45 59 73 77 2e 33 45 6a 44 46 6a 
0x03d0(976) : 4e 4e 6d 43 4a 7a 46 79 57 6d 68 7a 66 43 2d 59 
0x03e0(992) : 44 6c 2e 44 7a 57 33 75 55 37 36 43 4b 4d 76 69 
0x03f0(1008) : 6a 66 75 30 63 38 79 36 75 64 33 58 70 32 33 30 
0x0400(1024) : 6f 31 45 6c 58 48 64 30 4f 6b 43 6a 34 35 50 6e 
0x0410(1040) : 6b 48 6e 4b 50 6b 51 48 4c 54 70 39 56 73 39 48 
0x0420(1056) : 75 4e 31 50 66 65 50 31 4d 62 6b 51 67 37 42 4f 
0x0430(1072) : 50 7a 69 6f 68 36 34 30 5a 74 39 33 6a 4a 4b 62 
0x0440(1088) : 67 4c 2d 4a 2e 4f 4c 4b 2e 33 6c 65 42 77 31 61 
0x0450(1104) : 74 6a 4d 59 71 51 5a 4e 48 69 51 2d 2d 6c 61 67 
0x0460(1120) : 34 5a 7a 32 79 49 4e 77 4d 36 59 58 30 5a 35 75 
0x0470(1136) : 48 52 51 35 73 7a 53 37 67 74 36 66 63 68 4a 67 
0x0480(1152) : 45 0d 0a 
Exiting engine Deparser
===================================================================
final inout and output tuples:
	ioports = (
		ingress_port = 0x0(0)
		egress_port = 0x0(0)
	)
output packet (1155 bytes)
 0x0000(0) : 00 00 00 00 00 00 00 00 00 00 00 00 08 00 45 00 
0x0010(16) : 04 75 76 d8 40 00 40 11 c1 9d 7f 00 00 01 7f 00 
0x0020(32) : 00 01 a9 d3 2b cb 04 61 02 75 00 00 00 00 00 01 
0x0030(48) : 01 00 73 65 74 20 10 10 10 10 10 10 10 10 31 55 
0x0040(64) : 46 58 74 47 2d 31 32 76 79 50 55 74 6f 77 6b 63 
0x0050(80) : 75 5a 53 75 59 6a 33 4a 62 56 79 33 41 7a 58 50 
0x0060(96) : 56 4f 66 55 51 68 4e 4d 35 73 44 74 6d 78 54 65 
0x0070(112) : 55 76 57 30 64 5a 20 30 20 30 20 31 30 32 34 0d 
0x0080(128) : 0a 31 55 46 58 74 47 2d 31 32 76 79 50 55 74 6f 
0x0090(144) : 77 6b 63 75 5a 53 75 59 6a 33 4a 62 56 79 33 41 
0x00a0(160) : 7a 58 50 56 4f 66 55 51 68 4e 4d 35 73 44 74 6d 
0x00b0(176) : 78 54 65 55 76 57 30 64 5a 4b 43 33 47 46 44 45 
0x00c0(192) : 6e 63 6a 39 46 42 5a 78 59 76 30 4f 36 74 38 31 
0x00d0(208) : 4b 6d 57 44 48 57 71 71 71 31 74 35 47 34 4a 31 
0x00e0(224) : 67 30 42 77 42 6b 72 6a 65 72 36 6b 69 45 6d 30 
0x00f0(240) : 2d 47 44 47 6d 32 34 62 33 79 67 4a 30 7a 4c 68 
0x0100(256) : 7a 57 62 38 45 51 72 73 46 78 62 78 41 4c 78 39 
0x0110(272) : 62 38 50 4c 41 54 77 44 50 61 58 51 58 73 35 55 
0x0120(288) : 4d 67 63 61 34 53 52 4a 4e 30 45 58 4c 39 67 77 
0x0130(304) : 48 33 46 53 58 41 66 77 6b 41 4b 47 30 50 6b 4d 
0x0140(320) : 33 4c 78 37 6e 4d 51 38 4d 65 67 68 6e 4b 62 33 
0x0150(336) : 4f 71 56 76 2e 38 70 6a 4a 38 7a 4a 58 68 67 62 
0x0160(352) : 30 62 69 6e 78 37 77 48 6c 61 79 58 75 58 61 47 
0x0170(368) : 4c 33 39 4b 42 7a 31 55 35 2e 6f 63 66 53 42 67 
0x0180(384) : 31 75 52 79 2d 4c 44 6b 76 39 46 6f 67 70 32 2d 
0x0190(400) : 73 43 4a 32 39 4b 57 45 49 49 71 79 6b 30 63 6c 
0x01a0(416) : 75 31 68 74 4e 75 62 47 31 72 32 68 65 35 68 56 
0x01b0(432) : 48 2e 58 51 4a 31 65 62 4b 53 58 32 53 37 6f 4b 
0x01c0(448) : 39 54 42 57 4d 6e 6d 4e 63 70 33 45 75 6b 6a 39 
0x01d0(464) : 69 45 5a 2d 47 42 62 61 64 36 63 34 45 4f 4f 4e 
0x01e0(480) : 73 61 74 43 4c 64 5a 78 51 63 39 49 4b 74 52 31 
0x01f0(496) : 35 2e 30 4c 39 62 76 6e 69 57 72 77 75 44 48 6b 
0x0200(512) : 6e 38 77 36 6c 55 31 41 34 42 53 50 32 75 51 37 
0x0210(528) : 73 51 54 30 30 4d 6e 69 73 63 63 6c 70 74 54 62 
0x0220(544) : 2d 4f 68 6b 73 6a 75 77 75 4c 4a 77 44 6a 31 33 
0x0230(560) : 38 55 33 38 72 71 71 68 51 51 51 45 48 75 70 47 
0x0240(576) : 47 55 2e 36 42 74 30 33 43 4b 7a 50 31 2d 53 39 
0x0250(592) : 54 57 48 49 4b 35 2e 6c 56 4f 7a 6d 47 6d 30 57 
0x0260(608) : 45 2d 63 51 73 64 54 32 78 52 52 79 51 74 36 74 
0x0270(624) : 4e 4e 41 69 54 38 52 79 57 4f 6a 6e 38 6a 48 4d 
0x0280(640) : 69 75 6d 59 56 45 61 51 66 2d 4d 33 74 53 77 45 
0x0290(656) : 71 34 77 48 43 4c 44 6a 6a 77 55 72 65 6c 43 4b 
0x02a0(672) : 64 79 74 36 41 52 57 70 52 74 73 49 4a 6e 57 37 
0x02b0(688) : 72 52 4f 32 6d 63 6c 55 57 44 4a 38 79 56 54 61 
0x02c0(704) : 53 4b 67 63 6c 42 51 41 32 47 53 4c 31 7a 54 74 
0x02d0(720) : 4f 72 76 38 52 65 63 79 72 77 34 6e 50 58 4c 72 
0x02e0(736) : 72 30 53 62 42 73 6c 44 36 43 59 38 39 2d 2d 58 
0x02f0(752) : 72 75 66 47 57 47 43 4c 41 48 36 5a 6f 53 50 65 
0x0300(768) : 53 72 44 64 68 79 71 6e 38 4d 76 48 4d 75 6f 42 
0x0310(784) : 6d 53 52 47 69 65 62 73 76 69 50 68 38 6f 4a 61 
0x0320(800) : 64 57 42 49 54 2d 34 62 4c 7a 74 68 73 66 73 63 
0x0330(816) : 35 49 74 6e 77 53 64 70 38 31 55 47 70 6f 71 52 
0x0340(832) : 49 2d 6a 6c 2e 6e 4c 4b 6c 43 2d 62 72 73 42 78 
0x0350(848) : 38 32 69 32 56 4b 72 64 4c 4a 75 38 35 69 5a 4f 
0x0360(864) : 69 48 37 67 32 53 2e 6e 65 2e 4d 55 71 59 50 79 
0x0370(880) : 61 35 2e 33 50 70 68 6b 36 5a 74 43 46 51 61 78 
0x0380(896) : 68 68 63 6b 38 61 56 6d 59 73 45 4d 4f 64 49 79 
0x0390(912) : 6a 47 30 36 33 68 72 41 45 69 4d 54 36 77 50 6f 
0x03a0(928) : 62 2d 57 6a 5a 2d 55 36 72 69 53 44 4b 6c 41 31 
0x03b0(944) : 2d 41 37 33 72 79 44 33 65 5a 57 6c 54 76 58 32 
0x03c0(960) : 75 31 6d 53 30 45 59 73 77 2e 33 45 6a 44 46 6a 
0x03d0(976) : 4e 4e 6d 43 4a 7a 46 79 57 6d 68 7a 66 43 2d 59 
0x03e0(992) : 44 6c 2e 44 7a 57 33 75 55 37 36 43 4b 4d 76 69 
0x03f0(1008) : 6a 66 75 30 63 38 79 36 75 64 33 58 70 32 33 30 
0x0400(1024) : 6f 31 45 6c 58 48 64 30 4f 6b 43 6a 34 35 50 6e 
0x0410(1040) : 6b 48 6e 4b 50 6b 51 48 4c 54 70 39 56 73 39 48 
0x0420(1056) : 75 4e 31 50 66 65 50 31 4d 62 6b 51 67 37 42 4f 
0x0430(1072) : 50 7a 69 6f 68 36 34 30 5a 74 39 33 6a 4a 4b 62 
0x0440(1088) : 67 4c 2d 4a 2e 4f 4c 4b 2e 33 6c 65 42 77 31 61 
0x0450(1104) : 74 6a 4d 59 71 51 5a 4e 48 69 51 2d 2d 6c 61 67 
0x0460(1120) : 34 5a 7a 32 79 49 4e 77 4d 36 59 58 30 5a 35 75 
0x0470(1136) : 48 52 51 35 73 7a 53 37 67 74 36 66 63 68 4a 67 
0x0480(1152) : 45 0d 0a 
Exiting system XilinxSwitch
===================================================================
Evaluating packet #2(120 bytes)
 0x0000(0) : 00 00 00 00 00 00 00 00 00 00 00 00 08 00 45 00 
0x0010(16) : 00 6a 76 da 40 00 40 11 c5 a6 7f 00 00 01 7f 00 
0x0020(32) : 00 01 a9 d3 2b cb 00 56 fe 69 00 01 00 00 00 01 
0x0030(48) : 01 00 67 65 74 20 10 10 10 10 10 10 10 10 31 55 
0x0040(64) : 46 58 74 47 2d 31 32 76 79 50 55 74 6f 77 6b 63 
0x0050(80) : 75 5a 53 75 59 6a 33 4a 62 56 79 33 41 7a 58 50 
0x0060(96) : 56 4f 66 55 51 68 4e 4d 35 73 44 74 6d 78 54 65 
0x0070(112) : 55 76 57 30 64 5a 0d 0a 
===================================================================
Entering system XilinxSwitch
input packet (120 bytes)
 0x0000(0) : 00 00 00 00 00 00 00 00 00 00 00 00 08 00 45 00 
0x0010(16) : 00 6a 76 da 40 00 40 11 c5 a6 7f 00 00 01 7f 00 
0x0020(32) : 00 01 a9 d3 2b cb 00 56 fe 69 00 01 00 00 00 01 
0x0030(48) : 01 00 67 65 74 20 10 10 10 10 10 10 10 10 31 55 
0x0040(64) : 46 58 74 47 2d 31 32 76 79 50 55 74 6f 77 6b 63 
0x0050(80) : 75 5a 53 75 59 6a 33 4a 62 56 79 33 41 7a 58 50 
0x0060(96) : 56 4f 66 55 51 68 4e 4d 35 73 44 74 6d 78 54 65 
0x0070(112) : 55 76 57 30 64 5a 0d 0a 
initial input and inout tuples:
	ioports = (
		ingress_port = 0x0(0)
		egress_port = 0x0(0)
	)
clear internal and output-only tuples
===================================================================
Entering engine Parser
input packet (120 bytes)
 0x0000(0) : 00 00 00 00 00 00 00 00 00 00 00 00 08 00 45 00 
0x0010(16) : 00 6a 76 da 40 00 40 11 c5 a6 7f 00 00 01 7f 00 
0x0020(32) : 00 01 a9 d3 2b cb 00 56 fe 69 00 01 00 00 00 01 
0x0030(48) : 01 00 67 65 74 20 10 10 10 10 10 10 10 10 31 55 
0x0040(64) : 46 58 74 47 2d 31 32 76 79 50 55 74 6f 77 6b 63 
0x0050(80) : 75 5a 53 75 59 6a 33 4a 62 56 79 33 41 7a 58 50 
0x0060(96) : 56 4f 66 55 51 68 4e 4d 35 73 44 74 6d 78 54 65 
0x0070(112) : 55 76 57 30 64 5a 0d 0a 
initial input and inout tuples:
	control = (
		offset = 0x0000(0)
		virtual_offset = 0x0000(0)
		section = 0x0(0)
		activeBank = 0x0(0)
		done = 0x0(0)
		error = 0x0(0)
	)
clear internal and output-only tuples
	hdr = (
		eth = (
		isValid = 0x0(0)
		dst = 0x000000000000(0)
		src = 0x000000000000(0)
		type = 0x0000(0)
	)
		fec = (
		isValid = 0x0(0)
		traffic_class = 0x0(0)
		block_index = 0x00(0)
		packet_index = 0x00(0)
		original_type = 0x0000(0)
	)
		ipv4 = (
		isValid = 0x0(0)
		version = 0x0(0)
		ihl = 0x0(0)
		diffserv = 0x00(0)
		totallen = 0x0000(0)
		identification = 0x0000(0)
		flags = 0x0(0)
		fragoffset = 0x0000(0)
		ttl = 0x00(0)
		protocol = 0x00(0)
		hdrchecksum = 0x0000(0)
		srcAddr = 0x00000000(0)
		dstAddr = 0x00000000(0)
	)
		udp = (
		isValid = 0x0(0)
		sport = 0x0000(0)
		dport = 0x0000(0)
		len = 0x0000(0)
		chksum = 0x0000(0)
	)
	)
	Parser_extracts = (
		size = 0x00000000(0)
	)
processing section start in stage 1
-------------------------------------------------------------------
Section start starting

	extracting 112 bits at offset 0x0000(0)
		dst_0 = 0x000000000000(0)
		src_0 = 0x000000000000(0)
		type_0 = 0x0800(2048)

	method update (tuples)
		hdr.eth.isValid = 0x1(1)
		hdr.eth.dst = 0x000000000000(0)
		hdr.eth.src = 0x000000000000(0)
		hdr.eth.type = 0x0800(2048)
		Parser_extracts.size = 0x00000070(112)


	method move_to_section = parse_ipv4

updated tuples:
	control = (
		offset = 0x0070(112)
		virtual_offset = 0x0070(112)
		section = 0x2(2)
		activeBank = 0x0(0)
		done = 0x0(0)
		error = 0x0(0)
	)
	hdr = (
		eth = (
		isValid = 0x1(1)
		dst = 0x000000000000(0)
		src = 0x000000000000(0)
		type = 0x0800(2048)
	)
		fec = (
		isValid = 0x0(0)
		traffic_class = 0x0(0)
		block_index = 0x00(0)
		packet_index = 0x00(0)
		original_type = 0x0000(0)
	)
		ipv4 = (
		isValid = 0x0(0)
		version = 0x0(0)
		ihl = 0x0(0)
		diffserv = 0x00(0)
		totallen = 0x0000(0)
		identification = 0x0000(0)
		flags = 0x0(0)
		fragoffset = 0x0000(0)
		ttl = 0x00(0)
		protocol = 0x00(0)
		hdrchecksum = 0x0000(0)
		srcAddr = 0x00000000(0)
		dstAddr = 0x00000000(0)
	)
		udp = (
		isValid = 0x0(0)
		sport = 0x0000(0)
		dport = 0x0000(0)
		len = 0x0000(0)
		chksum = 0x0000(0)
	)
	)
	Parser_extracts = (
		size = 0x00000070(112)
	)
Section start finished
-------------------------------------------------------------------
processing section parse_ipv4 in stage 2
-------------------------------------------------------------------
Section parse_ipv4 starting

	extracting 160 bits at offset 0x0070(112)
		version_0 = 0x4(4)
		ihl_0 = 0x5(5)
		diffserv_0 = 0x00(0)
		totallen_0 = 0x006a(106)
		identification_0 = 0x76da(30426)
		flags_0 = 0x2(2)
		fragoffset_0 = 0x0000(0)
		ttl_0 = 0x40(64)
		protocol_0 = 0x11(17)
		hdrchecksum_0 = 0xc5a6(50598)
		srcAddr_0 = 0x7f000001(2130706433)
		dstAddr_0 = 0x7f000001(2130706433)

	method update (tuples)
		hdr.ipv4.isValid = 0x1(1)
		hdr.ipv4.version = 0x4(4)
		hdr.ipv4.ihl = 0x5(5)
		hdr.ipv4.diffserv = 0x00(0)
		hdr.ipv4.totallen = 0x006a(106)
		hdr.ipv4.identification = 0x76da(30426)
		hdr.ipv4.flags = 0x2(2)
		hdr.ipv4.fragoffset = 0x0000(0)
		hdr.ipv4.ttl = 0x40(64)
		hdr.ipv4.protocol = 0x11(17)
		hdr.ipv4.hdrchecksum = 0xc5a6(50598)
		hdr.ipv4.srcAddr = 0x7f000001(2130706433)
		hdr.ipv4.dstAddr = 0x7f000001(2130706433)
		Parser_extracts.size = 0x00000110(272)


	method move_to_section = parse_udp

updated tuples:
	control = (
		offset = 0x0110(272)
		virtual_offset = 0x0110(272)
		section = 0x3(3)
		activeBank = 0x0(0)
		done = 0x0(0)
		error = 0x0(0)
	)
	hdr = (
		eth = (
		isValid = 0x1(1)
		dst = 0x000000000000(0)
		src = 0x000000000000(0)
		type = 0x0800(2048)
	)
		fec = (
		isValid = 0x0(0)
		traffic_class = 0x0(0)
		block_index = 0x00(0)
		packet_index = 0x00(0)
		original_type = 0x0000(0)
	)
		ipv4 = (
		isValid = 0x1(1)
		version = 0x4(4)
		ihl = 0x5(5)
		diffserv = 0x00(0)
		totallen = 0x006a(106)
		identification = 0x76da(30426)
		flags = 0x2(2)
		fragoffset = 0x0000(0)
		ttl = 0x40(64)
		protocol = 0x11(17)
		hdrchecksum = 0xc5a6(50598)
		srcAddr = 0x7f000001(2130706433)
		dstAddr = 0x7f000001(2130706433)
	)
		udp = (
		isValid = 0x0(0)
		sport = 0x0000(0)
		dport = 0x0000(0)
		len = 0x0000(0)
		chksum = 0x0000(0)
	)
	)
	Parser_extracts = (
		size = 0x00000110(272)
	)
Section parse_ipv4 finished
-------------------------------------------------------------------
processing section parse_udp in stage 3
-------------------------------------------------------------------
Section parse_udp starting

	extracting 64 bits at offset 0x0110(272)
		sport_0 = 0xa9d3(43475)
		dport_0 = 0x2bcb(11211)
		len_0 = 0x0056(86)
		chksum_0 = 0xfe69(65129)

	method update (tuples)
		hdr.udp.isValid = 0x1(1)
		hdr.udp.sport = 0xa9d3(43475)
		hdr.udp.dport = 0x2bcb(11211)
		hdr.udp.len = 0x0056(86)
		hdr.udp.chksum = 0xfe69(65129)
		Parser_extracts.size = 0x00000150(336)


	method move_to_section = accept

updated tuples:
	control = (
		offset = 0x0150(336)
		virtual_offset = 0x0150(336)
		section = 0x4(4)
		activeBank = 0x0(0)
		done = 0x0(0)
		error = 0x0(0)
	)
	hdr = (
		eth = (
		isValid = 0x1(1)
		dst = 0x000000000000(0)
		src = 0x000000000000(0)
		type = 0x0800(2048)
	)
		fec = (
		isValid = 0x0(0)
		traffic_class = 0x0(0)
		block_index = 0x00(0)
		packet_index = 0x00(0)
		original_type = 0x0000(0)
	)
		ipv4 = (
		isValid = 0x1(1)
		version = 0x4(4)
		ihl = 0x5(5)
		diffserv = 0x00(0)
		totallen = 0x006a(106)
		identification = 0x76da(30426)
		flags = 0x2(2)
		fragoffset = 0x0000(0)
		ttl = 0x40(64)
		protocol = 0x11(17)
		hdrchecksum = 0xc5a6(50598)
		srcAddr = 0x7f000001(2130706433)
		dstAddr = 0x7f000001(2130706433)
	)
		udp = (
		isValid = 0x1(1)
		sport = 0xa9d3(43475)
		dport = 0x2bcb(11211)
		len = 0x0056(86)
		chksum = 0xfe69(65129)
	)
	)
	Parser_extracts = (
		size = 0x00000150(336)
	)
Section parse_udp finished
-------------------------------------------------------------------
processing section accept in stage 4
-------------------------------------------------------------------
Section accept starting


	method move_to_section = done(0)

updated tuples:
	control = (
		offset = 0x0150(336)
		virtual_offset = 0x0150(336)
		section = 0x0(0)
		activeBank = 0x0(0)
		done = 0x1(1)
		error = 0x0(0)
	)
	hdr = (
		eth = (
		isValid = 0x1(1)
		dst = 0x000000000000(0)
		src = 0x000000000000(0)
		type = 0x0800(2048)
	)
		fec = (
		isValid = 0x0(0)
		traffic_class = 0x0(0)
		block_index = 0x00(0)
		packet_index = 0x00(0)
		original_type = 0x0000(0)
	)
		ipv4 = (
		isValid = 0x1(1)
		version = 0x4(4)
		ihl = 0x5(5)
		diffserv = 0x00(0)
		totallen = 0x006a(106)
		identification = 0x76da(30426)
		flags = 0x2(2)
		fragoffset = 0x0000(0)
		ttl = 0x40(64)
		protocol = 0x11(17)
		hdrchecksum = 0xc5a6(50598)
		srcAddr = 0x7f000001(2130706433)
		dstAddr = 0x7f000001(2130706433)
	)
		udp = (
		isValid = 0x1(1)
		sport = 0xa9d3(43475)
		dport = 0x2bcb(11211)
		len = 0x0056(86)
		chksum = 0xfe69(65129)
	)
	)
	Parser_extracts = (
		size = 0x00000150(336)
	)
Section accept finished
-------------------------------------------------------------------
final inout and output tuples:

Note: this engine's wrapper will clear the upper control tuple fields on output, except for the 'control.error' field.

	control = (
		offset = 0x0000(0)
		virtual_offset = 0x0000(0)
		section = 0x0(0)
		activeBank = 0x0(0)
		done = 0x0(0)
		error = 0x0(0)
	)
	hdr = (
		eth = (
		isValid = 0x1(1)
		dst = 0x000000000000(0)
		src = 0x000000000000(0)
		type = 0x0800(2048)
	)
		fec = (
		isValid = 0x0(0)
		traffic_class = 0x0(0)
		block_index = 0x00(0)
		packet_index = 0x00(0)
		original_type = 0x0000(0)
	)
		ipv4 = (
		isValid = 0x1(1)
		version = 0x4(4)
		ihl = 0x5(5)
		diffserv = 0x00(0)
		totallen = 0x006a(106)
		identification = 0x76da(30426)
		flags = 0x2(2)
		fragoffset = 0x0000(0)
		ttl = 0x40(64)
		protocol = 0x11(17)
		hdrchecksum = 0xc5a6(50598)
		srcAddr = 0x7f000001(2130706433)
		dstAddr = 0x7f000001(2130706433)
	)
		udp = (
		isValid = 0x1(1)
		sport = 0xa9d3(43475)
		dport = 0x2bcb(11211)
		len = 0x0056(86)
		chksum = 0xfe69(65129)
	)
	)
	Parser_extracts = (
		size = 0x00000150(336)
	)
Exiting engine Parser
===================================================================
===================================================================
Entering engine CheckCache_lvl
input packet (0 bytes)
initial input and inout tuples:
	hdr = (
		eth = (
		isValid = 0x1(1)
		dst = 0x000000000000(0)
		src = 0x000000000000(0)
		type = 0x0800(2048)
	)
		fec = (
		isValid = 0x0(0)
		traffic_class = 0x0(0)
		block_index = 0x00(0)
		packet_index = 0x00(0)
		original_type = 0x0000(0)
	)
		ipv4 = (
		isValid = 0x1(1)
		version = 0x4(4)
		ihl = 0x5(5)
		diffserv = 0x00(0)
		totallen = 0x006a(106)
		identification = 0x76da(30426)
		flags = 0x2(2)
		fragoffset = 0x0000(0)
		ttl = 0x40(64)
		protocol = 0x11(17)
		hdrchecksum = 0xc5a6(50598)
		srcAddr = 0x7f000001(2130706433)
		dstAddr = 0x7f000001(2130706433)
	)
		udp = (
		isValid = 0x1(1)
		sport = 0xa9d3(43475)
		dport = 0x2bcb(11211)
		len = 0x0056(86)
		chksum = 0xfe69(65129)
	)
	)
	ioports = (
		ingress_port = 0x0(0)
		egress_port = 0x0(0)
	)
clear internal and output-only tuples
	control = (
		offset = 0x0000(0)
		virtual_offset = 0x0000(0)
		section = 0x0(0)
		activeBank = 0x0(0)
		done = 0x0(0)
		error = 0x0(0)
	)
	CheckCache_fl = (
		forward_1 = 0x0(0)
	)
	local_state = (
		id = 0x0000(0)
	)
processing section setup in stage 1
-------------------------------------------------------------------
Section setup starting


	method move_to_section = done(0)

updated tuples:
	control = (
		offset = 0x0000(0)
		virtual_offset = 0x0000(0)
		section = 0x0(0)
		activeBank = 0x0(0)
		done = 0x1(1)
		error = 0x0(0)
	)
	CheckCache_fl = (
		forward_1 = 0x0(0)
	)
	hdr = (
		eth = (
		isValid = 0x1(1)
		dst = 0x000000000000(0)
		src = 0x000000000000(0)
		type = 0x0800(2048)
	)
		fec = (
		isValid = 0x0(0)
		traffic_class = 0x0(0)
		block_index = 0x00(0)
		packet_index = 0x00(0)
		original_type = 0x0000(0)
	)
		ipv4 = (
		isValid = 0x1(1)
		version = 0x4(4)
		ihl = 0x5(5)
		diffserv = 0x00(0)
		totallen = 0x006a(106)
		identification = 0x76da(30426)
		flags = 0x2(2)
		fragoffset = 0x0000(0)
		ttl = 0x40(64)
		protocol = 0x11(17)
		hdrchecksum = 0xc5a6(50598)
		srcAddr = 0x7f000001(2130706433)
		dstAddr = 0x7f000001(2130706433)
	)
		udp = (
		isValid = 0x1(1)
		sport = 0xa9d3(43475)
		dport = 0x2bcb(11211)
		len = 0x0056(86)
		chksum = 0xfe69(65129)
	)
	)
	ioports = (
		ingress_port = 0x0(0)
		egress_port = 0x0(0)
	)
	local_state = (
		id = 0x0000(0)
	)
Section setup finished
-------------------------------------------------------------------
final inout and output tuples:

Note: this engine's wrapper will clear the upper control tuple fields on output, except for the 'control.error' field.

	CheckCache_fl = (
		forward_1 = 0x0(0)
	)
	hdr = (
		eth = (
		isValid = 0x1(1)
		dst = 0x000000000000(0)
		src = 0x000000000000(0)
		type = 0x0800(2048)
	)
		fec = (
		isValid = 0x0(0)
		traffic_class = 0x0(0)
		block_index = 0x00(0)
		packet_index = 0x00(0)
		original_type = 0x0000(0)
	)
		ipv4 = (
		isValid = 0x1(1)
		version = 0x4(4)
		ihl = 0x5(5)
		diffserv = 0x00(0)
		totallen = 0x006a(106)
		identification = 0x76da(30426)
		flags = 0x2(2)
		fragoffset = 0x0000(0)
		ttl = 0x40(64)
		protocol = 0x11(17)
		hdrchecksum = 0xc5a6(50598)
		srcAddr = 0x7f000001(2130706433)
		dstAddr = 0x7f000001(2130706433)
	)
		udp = (
		isValid = 0x1(1)
		sport = 0xa9d3(43475)
		dport = 0x2bcb(11211)
		len = 0x0056(86)
		chksum = 0xfe69(65129)
	)
	)
	ioports = (
		ingress_port = 0x0(0)
		egress_port = 0x0(0)
	)
	local_state = (
		id = 0x0000(0)
	)
Exiting engine CheckCache_lvl
===================================================================
===================================================================
Entering engine CheckCache_lvl_0
input packet (0 bytes)
initial input and inout tuples:
	CheckCache_fl = (
		forward_1 = 0x0(0)
	)
	hdr = (
		eth = (
		isValid = 0x1(1)
		dst = 0x000000000000(0)
		src = 0x000000000000(0)
		type = 0x0800(2048)
	)
		fec = (
		isValid = 0x0(0)
		traffic_class = 0x0(0)
		block_index = 0x00(0)
		packet_index = 0x00(0)
		original_type = 0x0000(0)
	)
		ipv4 = (
		isValid = 0x1(1)
		version = 0x4(4)
		ihl = 0x5(5)
		diffserv = 0x00(0)
		totallen = 0x006a(106)
		identification = 0x76da(30426)
		flags = 0x2(2)
		fragoffset = 0x0000(0)
		ttl = 0x40(64)
		protocol = 0x11(17)
		hdrchecksum = 0xc5a6(50598)
		srcAddr = 0x7f000001(2130706433)
		dstAddr = 0x7f000001(2130706433)
	)
		udp = (
		isValid = 0x1(1)
		sport = 0xa9d3(43475)
		dport = 0x2bcb(11211)
		len = 0x0056(86)
		chksum = 0xfe69(65129)
	)
	)
	ioports = (
		ingress_port = 0x0(0)
		egress_port = 0x0(0)
	)
	local_state = (
		id = 0x0000(0)
	)
clear internal and output-only tuples
	control = (
		offset = 0x0000(0)
		virtual_offset = 0x0000(0)
		section = 0x0(0)
		activeBank = 0x0(0)
		done = 0x0(0)
		error = 0x0(0)
	)
	memcached_input = (
		stateful_valid = 0x0(0)
	)
processing section condition_sec_0 in stage 1
-------------------------------------------------------------------
Section condition_sec_0 starting

	method update (tuples)
		local_state.id = 0x0005(5)


	method move_to_section = condition_sec

updated tuples:
	control = (
		offset = 0x0000(0)
		virtual_offset = 0x0000(0)
		section = 0x2(2)
		activeBank = 0x0(0)
		done = 0x0(0)
		error = 0x0(0)
	)
	CheckCache_fl = (
		forward_1 = 0x0(0)
	)
	hdr = (
		eth = (
		isValid = 0x1(1)
		dst = 0x000000000000(0)
		src = 0x000000000000(0)
		type = 0x0800(2048)
	)
		fec = (
		isValid = 0x0(0)
		traffic_class = 0x0(0)
		block_index = 0x00(0)
		packet_index = 0x00(0)
		original_type = 0x0000(0)
	)
		ipv4 = (
		isValid = 0x1(1)
		version = 0x4(4)
		ihl = 0x5(5)
		diffserv = 0x00(0)
		totallen = 0x006a(106)
		identification = 0x76da(30426)
		flags = 0x2(2)
		fragoffset = 0x0000(0)
		ttl = 0x40(64)
		protocol = 0x11(17)
		hdrchecksum = 0xc5a6(50598)
		srcAddr = 0x7f000001(2130706433)
		dstAddr = 0x7f000001(2130706433)
	)
		udp = (
		isValid = 0x1(1)
		sport = 0xa9d3(43475)
		dport = 0x2bcb(11211)
		len = 0x0056(86)
		chksum = 0xfe69(65129)
	)
	)
	ioports = (
		ingress_port = 0x0(0)
		egress_port = 0x0(0)
	)
	local_state = (
		id = 0x0005(5)
	)
	memcached_input = (
		stateful_valid = 0x0(0)
	)
Section condition_sec_0 finished
-------------------------------------------------------------------
processing section condition_sec in stage 2
-------------------------------------------------------------------
Section condition_sec starting

	method update (tuples)
		local_state.id = 0x0005(5)


	method move_to_section = act_0_sec

updated tuples:
	control = (
		offset = 0x0000(0)
		virtual_offset = 0x0000(0)
		section = 0x1(1)
		activeBank = 0x0(0)
		done = 0x0(0)
		error = 0x0(0)
	)
	CheckCache_fl = (
		forward_1 = 0x0(0)
	)
	hdr = (
		eth = (
		isValid = 0x1(1)
		dst = 0x000000000000(0)
		src = 0x000000000000(0)
		type = 0x0800(2048)
	)
		fec = (
		isValid = 0x0(0)
		traffic_class = 0x0(0)
		block_index = 0x00(0)
		packet_index = 0x00(0)
		original_type = 0x0000(0)
	)
		ipv4 = (
		isValid = 0x1(1)
		version = 0x4(4)
		ihl = 0x5(5)
		diffserv = 0x00(0)
		totallen = 0x006a(106)
		identification = 0x76da(30426)
		flags = 0x2(2)
		fragoffset = 0x0000(0)
		ttl = 0x40(64)
		protocol = 0x11(17)
		hdrchecksum = 0xc5a6(50598)
		srcAddr = 0x7f000001(2130706433)
		dstAddr = 0x7f000001(2130706433)
	)
		udp = (
		isValid = 0x1(1)
		sport = 0xa9d3(43475)
		dport = 0x2bcb(11211)
		len = 0x0056(86)
		chksum = 0xfe69(65129)
	)
	)
	ioports = (
		ingress_port = 0x0(0)
		egress_port = 0x0(0)
	)
	local_state = (
		id = 0x0005(5)
	)
	memcached_input = (
		stateful_valid = 0x0(0)
	)
Section condition_sec finished
-------------------------------------------------------------------
processing section act_0_sec in stage 3
-------------------------------------------------------------------
Section act_0_sec starting

	method update (tuples)
		memcached_input.stateful_valid = 0x1(1)
		local_state.id = 0x0004(4)


	method move_to_section = local_end

updated tuples:
	control = (
		offset = 0x0000(0)
		virtual_offset = 0x0000(0)
		section = 0x4(4)
		activeBank = 0x0(0)
		done = 0x0(0)
		error = 0x0(0)
	)
	CheckCache_fl = (
		forward_1 = 0x0(0)
	)
	hdr = (
		eth = (
		isValid = 0x1(1)
		dst = 0x000000000000(0)
		src = 0x000000000000(0)
		type = 0x0800(2048)
	)
		fec = (
		isValid = 0x0(0)
		traffic_class = 0x0(0)
		block_index = 0x00(0)
		packet_index = 0x00(0)
		original_type = 0x0000(0)
	)
		ipv4 = (
		isValid = 0x1(1)
		version = 0x4(4)
		ihl = 0x5(5)
		diffserv = 0x00(0)
		totallen = 0x006a(106)
		identification = 0x76da(30426)
		flags = 0x2(2)
		fragoffset = 0x0000(0)
		ttl = 0x40(64)
		protocol = 0x11(17)
		hdrchecksum = 0xc5a6(50598)
		srcAddr = 0x7f000001(2130706433)
		dstAddr = 0x7f000001(2130706433)
	)
		udp = (
		isValid = 0x1(1)
		sport = 0xa9d3(43475)
		dport = 0x2bcb(11211)
		len = 0x0056(86)
		chksum = 0xfe69(65129)
	)
	)
	ioports = (
		ingress_port = 0x0(0)
		egress_port = 0x0(0)
	)
	local_state = (
		id = 0x0004(4)
	)
	memcached_input = (
		stateful_valid = 0x1(1)
	)
Section act_0_sec finished
-------------------------------------------------------------------
processing section local_end in stage 4
-------------------------------------------------------------------
Section local_end starting


	method move_to_section = done(0)

updated tuples:
	control = (
		offset = 0x0000(0)
		virtual_offset = 0x0000(0)
		section = 0x0(0)
		activeBank = 0x0(0)
		done = 0x1(1)
		error = 0x0(0)
	)
	CheckCache_fl = (
		forward_1 = 0x0(0)
	)
	hdr = (
		eth = (
		isValid = 0x1(1)
		dst = 0x000000000000(0)
		src = 0x000000000000(0)
		type = 0x0800(2048)
	)
		fec = (
		isValid = 0x0(0)
		traffic_class = 0x0(0)
		block_index = 0x00(0)
		packet_index = 0x00(0)
		original_type = 0x0000(0)
	)
		ipv4 = (
		isValid = 0x1(1)
		version = 0x4(4)
		ihl = 0x5(5)
		diffserv = 0x00(0)
		totallen = 0x006a(106)
		identification = 0x76da(30426)
		flags = 0x2(2)
		fragoffset = 0x0000(0)
		ttl = 0x40(64)
		protocol = 0x11(17)
		hdrchecksum = 0xc5a6(50598)
		srcAddr = 0x7f000001(2130706433)
		dstAddr = 0x7f000001(2130706433)
	)
		udp = (
		isValid = 0x1(1)
		sport = 0xa9d3(43475)
		dport = 0x2bcb(11211)
		len = 0x0056(86)
		chksum = 0xfe69(65129)
	)
	)
	ioports = (
		ingress_port = 0x0(0)
		egress_port = 0x0(0)
	)
	local_state = (
		id = 0x0004(4)
	)
	memcached_input = (
		stateful_valid = 0x1(1)
	)
Section local_end finished
-------------------------------------------------------------------
final inout and output tuples:

Note: this engine's wrapper will clear the upper control tuple fields on output, except for the 'control.error' field.

	CheckCache_fl = (
		forward_1 = 0x0(0)
	)
	hdr = (
		eth = (
		isValid = 0x1(1)
		dst = 0x000000000000(0)
		src = 0x000000000000(0)
		type = 0x0800(2048)
	)
		fec = (
		isValid = 0x0(0)
		traffic_class = 0x0(0)
		block_index = 0x00(0)
		packet_index = 0x00(0)
		original_type = 0x0000(0)
	)
		ipv4 = (
		isValid = 0x1(1)
		version = 0x4(4)
		ihl = 0x5(5)
		diffserv = 0x00(0)
		totallen = 0x006a(106)
		identification = 0x76da(30426)
		flags = 0x2(2)
		fragoffset = 0x0000(0)
		ttl = 0x40(64)
		protocol = 0x11(17)
		hdrchecksum = 0xc5a6(50598)
		srcAddr = 0x7f000001(2130706433)
		dstAddr = 0x7f000001(2130706433)
	)
		udp = (
		isValid = 0x1(1)
		sport = 0xa9d3(43475)
		dport = 0x2bcb(11211)
		len = 0x0056(86)
		chksum = 0xfe69(65129)
	)
	)
	ioports = (
		ingress_port = 0x0(0)
		egress_port = 0x0(0)
	)
	local_state = (
		id = 0x0004(4)
	)
	memcached_input = (
		stateful_valid = 0x1(1)
	)
Exiting engine CheckCache_lvl_0
===================================================================
===================================================================
Entering engine memcached_0
input packet (120 bytes)
 0x0000(0) : 00 00 00 00 00 00 00 00 00 00 00 00 08 00 45 00 
0x0010(16) : 00 6a 76 da 40 00 40 11 c5 a6 7f 00 00 01 7f 00 
0x0020(32) : 00 01 a9 d3 2b cb 00 56 fe 69 00 01 00 00 00 01 
0x0030(48) : 01 00 67 65 74 20 10 10 10 10 10 10 10 10 31 55 
0x0040(64) : 46 58 74 47 2d 31 32 76 79 50 55 74 6f 77 6b 63 
0x0050(80) : 75 5a 53 75 59 6a 33 4a 62 56 79 33 41 7a 58 50 
0x0060(96) : 56 4f 66 55 51 68 4e 4d 35 73 44 74 6d 78 54 65 
0x0070(112) : 55 76 57 30 64 5a 0d 0a 
initial input and inout tuples:
	control = (
		offset = 0x0000(0)
		virtual_offset = 0x0000(0)
		section = 0x0(0)
		activeBank = 0x0(0)
		done = 0x0(0)
		error = 0x0(0)
	)
	CheckCache_fl = (
		forward_1 = 0x0(0)
	)
	hdr = (
		eth = (
		isValid = 0x1(1)
		dst = 0x000000000000(0)
		src = 0x000000000000(0)
		type = 0x0800(2048)
	)
		fec = (
		isValid = 0x0(0)
		traffic_class = 0x0(0)
		block_index = 0x00(0)
		packet_index = 0x00(0)
		original_type = 0x0000(0)
	)
		ipv4 = (
		isValid = 0x1(1)
		version = 0x4(4)
		ihl = 0x5(5)
		diffserv = 0x00(0)
		totallen = 0x006a(106)
		identification = 0x76da(30426)
		flags = 0x2(2)
		fragoffset = 0x0000(0)
		ttl = 0x40(64)
		protocol = 0x11(17)
		hdrchecksum = 0xc5a6(50598)
		srcAddr = 0x7f000001(2130706433)
		dstAddr = 0x7f000001(2130706433)
	)
		udp = (
		isValid = 0x1(1)
		sport = 0xa9d3(43475)
		dport = 0x2bcb(11211)
		len = 0x0056(86)
		chksum = 0xfe69(65129)
	)
	)
	ioports = (
		ingress_port = 0x0(0)
		egress_port = 0x0(0)
	)
	local_state = (
		id = 0x0004(4)
	)
	Parser_extracts = (
		size = 0x00000150(336)
	)
	memcached_input = (
		stateful_valid = 0x1(1)
	)
clear internal and output-only tuples
	memcached_output = (
		forward = 0x0(0)
	)
Enter USER ENGINE FUNCTION
0
134235392
29967027280035857
14242210509582597888
468199414628438
18332183762483281921
72171279475544080
1157442765409235285
5068929229655192182
8741580835300797283
8456163013817938762
7085984324762884176
6219302127045987917
3851497373175403621
6158205405829401866
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<Inside MemCore<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<< 
The No. 1Packet
1
931
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<Inside MemCore<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<< 
===================================================================
Entering engine CheckCache_lvl_1
input packet (0 bytes)
initial input and inout tuples:
	CheckCache_fl = (
		forward_1 = 0x0(0)
	)
	hdr = (
		eth = (
		isValid = 0x1(1)
		dst = 0x000000000000(0)
		src = 0x000000000000(0)
		type = 0x0800(2048)
	)
		fec = (
		isValid = 0x0(0)
		traffic_class = 0x0(0)
		block_index = 0x00(0)
		packet_index = 0x00(0)
		original_type = 0x0000(0)
	)
		ipv4 = (
		isValid = 0x1(1)
		version = 0x4(4)
		ihl = 0x5(5)
		diffserv = 0x00(0)
		totallen = 0x047a(1146)
		identification = 0x76da(30426)
		flags = 0x2(2)
		fragoffset = 0x0000(0)
		ttl = 0x40(64)
		protocol = 0x11(17)
		hdrchecksum = 0xc5a6(50598)
		srcAddr = 0x7f000001(2130706433)
		dstAddr = 0x7f000001(2130706433)
	)
		udp = (
		isValid = 0x1(1)
		sport = 0x2bcb(11211)
		dport = 0xa9d3(43475)
		len = 0x0466(1126)
		chksum = 0xfe69(65129)
	)
	)
	ioports = (
		ingress_port = 0x0(0)
		egress_port = 0x0(0)
	)
	local_state = (
		id = 0x0004(4)
	)
	memcached_output = (
		forward = 0x0(0)
	)
clear internal and output-only tuples
	control = (
		offset = 0x0000(0)
		virtual_offset = 0x0000(0)
		section = 0x0(0)
		activeBank = 0x0(0)
		done = 0x0(0)
		error = 0x0(0)
	)
processing section local_start in stage 1
-------------------------------------------------------------------
Section local_start starting


	method move_to_section = memcached_sec

updated tuples:
	control = (
		offset = 0x0000(0)
		virtual_offset = 0x0000(0)
		section = 0x2(2)
		activeBank = 0x0(0)
		done = 0x0(0)
		error = 0x0(0)
	)
	CheckCache_fl = (
		forward_1 = 0x0(0)
	)
	hdr = (
		eth = (
		isValid = 0x1(1)
		dst = 0x000000000000(0)
		src = 0x000000000000(0)
		type = 0x0800(2048)
	)
		fec = (
		isValid = 0x0(0)
		traffic_class = 0x0(0)
		block_index = 0x00(0)
		packet_index = 0x00(0)
		original_type = 0x0000(0)
	)
		ipv4 = (
		isValid = 0x1(1)
		version = 0x4(4)
		ihl = 0x5(5)
		diffserv = 0x00(0)
		totallen = 0x047a(1146)
		identification = 0x76da(30426)
		flags = 0x2(2)
		fragoffset = 0x0000(0)
		ttl = 0x40(64)
		protocol = 0x11(17)
		hdrchecksum = 0xc5a6(50598)
		srcAddr = 0x7f000001(2130706433)
		dstAddr = 0x7f000001(2130706433)
	)
		udp = (
		isValid = 0x1(1)
		sport = 0x2bcb(11211)
		dport = 0xa9d3(43475)
		len = 0x0466(1126)
		chksum = 0xfe69(65129)
	)
	)
	ioports = (
		ingress_port = 0x0(0)
		egress_port = 0x0(0)
	)
	local_state = (
		id = 0x0004(4)
	)
	memcached_output = (
		forward = 0x0(0)
	)
Section local_start finished
-------------------------------------------------------------------
processing section memcached_sec in stage 2
-------------------------------------------------------------------
Section memcached_sec starting

	method update (tuples)
		CheckCache_fl.forward_1 = 0x0(0)


	method move_to_section = sink

updated tuples:
	control = (
		offset = 0x0000(0)
		virtual_offset = 0x0000(0)
		section = 0x3(3)
		activeBank = 0x0(0)
		done = 0x0(0)
		error = 0x0(0)
	)
	CheckCache_fl = (
		forward_1 = 0x0(0)
	)
	hdr = (
		eth = (
		isValid = 0x1(1)
		dst = 0x000000000000(0)
		src = 0x000000000000(0)
		type = 0x0800(2048)
	)
		fec = (
		isValid = 0x0(0)
		traffic_class = 0x0(0)
		block_index = 0x00(0)
		packet_index = 0x00(0)
		original_type = 0x0000(0)
	)
		ipv4 = (
		isValid = 0x1(1)
		version = 0x4(4)
		ihl = 0x5(5)
		diffserv = 0x00(0)
		totallen = 0x047a(1146)
		identification = 0x76da(30426)
		flags = 0x2(2)
		fragoffset = 0x0000(0)
		ttl = 0x40(64)
		protocol = 0x11(17)
		hdrchecksum = 0xc5a6(50598)
		srcAddr = 0x7f000001(2130706433)
		dstAddr = 0x7f000001(2130706433)
	)
		udp = (
		isValid = 0x1(1)
		sport = 0x2bcb(11211)
		dport = 0xa9d3(43475)
		len = 0x0466(1126)
		chksum = 0xfe69(65129)
	)
	)
	ioports = (
		ingress_port = 0x0(0)
		egress_port = 0x0(0)
	)
	local_state = (
		id = 0x0004(4)
	)
	memcached_output = (
		forward = 0x0(0)
	)
Section memcached_sec finished
-------------------------------------------------------------------
processing section sink in stage 3
-------------------------------------------------------------------
Section sink starting


	method move_to_section = done(0)

updated tuples:
	control = (
		offset = 0x0000(0)
		virtual_offset = 0x0000(0)
		section = 0x0(0)
		activeBank = 0x0(0)
		done = 0x1(1)
		error = 0x0(0)
	)
	CheckCache_fl = (
		forward_1 = 0x0(0)
	)
	hdr = (
		eth = (
		isValid = 0x1(1)
		dst = 0x000000000000(0)
		src = 0x000000000000(0)
		type = 0x0800(2048)
	)
		fec = (
		isValid = 0x0(0)
		traffic_class = 0x0(0)
		block_index = 0x00(0)
		packet_index = 0x00(0)
		original_type = 0x0000(0)
	)
		ipv4 = (
		isValid = 0x1(1)
		version = 0x4(4)
		ihl = 0x5(5)
		diffserv = 0x00(0)
		totallen = 0x047a(1146)
		identification = 0x76da(30426)
		flags = 0x2(2)
		fragoffset = 0x0000(0)
		ttl = 0x40(64)
		protocol = 0x11(17)
		hdrchecksum = 0xc5a6(50598)
		srcAddr = 0x7f000001(2130706433)
		dstAddr = 0x7f000001(2130706433)
	)
		udp = (
		isValid = 0x1(1)
		sport = 0x2bcb(11211)
		dport = 0xa9d3(43475)
		len = 0x0466(1126)
		chksum = 0xfe69(65129)
	)
	)
	ioports = (
		ingress_port = 0x0(0)
		egress_port = 0x0(0)
	)
	local_state = (
		id = 0x0004(4)
	)
	memcached_output = (
		forward = 0x0(0)
	)
Section sink finished
-------------------------------------------------------------------
final inout and output tuples:

Note: this engine's wrapper will clear the upper control tuple fields on output, except for the 'control.error' field.

	hdr = (
		eth = (
		isValid = 0x1(1)
		dst = 0x000000000000(0)
		src = 0x000000000000(0)
		type = 0x0800(2048)
	)
		fec = (
		isValid = 0x0(0)
		traffic_class = 0x0(0)
		block_index = 0x00(0)
		packet_index = 0x00(0)
		original_type = 0x0000(0)
	)
		ipv4 = (
		isValid = 0x1(1)
		version = 0x4(4)
		ihl = 0x5(5)
		diffserv = 0x00(0)
		totallen = 0x047a(1146)
		identification = 0x76da(30426)
		flags = 0x2(2)
		fragoffset = 0x0000(0)
		ttl = 0x40(64)
		protocol = 0x11(17)
		hdrchecksum = 0xc5a6(50598)
		srcAddr = 0x7f000001(2130706433)
		dstAddr = 0x7f000001(2130706433)
	)
		udp = (
		isValid = 0x1(1)
		sport = 0x2bcb(11211)
		dport = 0xa9d3(43475)
		len = 0x0466(1126)
		chksum = 0xfe69(65129)
	)
	)
	ioports = (
		ingress_port = 0x0(0)
		egress_port = 0x0(0)
	)
Exiting engine CheckCache_lvl_1
===================================================================
===================================================================
Entering engine Deparser
input packet (1160 bytes)
 0x0000(0) : 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 
0x0010(16) : 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 
0x0020(32) : 00 00 00 00 00 00 00 00 00 00 00 01 00 00 00 01 
0x0030(48) : 00 00 56 41 4c 55 45 20 10 10 10 10 10 10 10 10 
0x0040(64) : 31 55 46 58 74 47 2d 31 32 76 79 50 55 74 6f 77 
0x0050(80) : 6b 63 75 5a 53 75 59 6a 33 4a 62 56 79 33 41 7a 
0x0060(96) : 58 50 56 4f 66 55 51 68 4e 4d 35 73 44 74 6d 78 
0x0070(112) : 54 65 55 76 57 30 64 5a 20 30 20 31 30 32 34 0d 
0x0080(128) : 0a 31 55 46 58 74 47 2d 31 32 76 79 50 55 74 6f 
0x0090(144) : 77 6b 63 75 5a 53 75 59 6a 33 4a 62 56 79 33 41 
0x00a0(160) : 7a 58 50 56 4f 66 55 51 68 4e 4d 35 73 44 74 6d 
0x00b0(176) : 78 54 65 55 76 57 30 64 5a 4b 43 33 47 46 44 45 
0x00c0(192) : 6e 63 6a 39 46 42 5a 78 59 76 30 4f 36 74 38 31 
0x00d0(208) : 4b 6d 57 44 48 57 71 71 71 31 74 35 47 34 4a 31 
0x00e0(224) : 67 30 42 77 42 6b 72 6a 65 72 36 6b 69 45 6d 30 
0x00f0(240) : 2d 47 44 47 6d 32 34 62 33 79 67 4a 30 7a 4c 68 
0x0100(256) : 7a 57 62 38 45 51 72 73 46 78 62 78 41 4c 78 39 
0x0110(272) : 62 38 50 4c 41 54 77 44 50 61 58 51 58 73 35 55 
0x0120(288) : 4d 67 63 61 34 53 52 4a 4e 30 45 58 4c 39 67 77 
0x0130(304) : 48 33 46 53 58 41 66 77 6b 41 4b 47 30 50 6b 4d 
0x0140(320) : 33 4c 78 37 6e 4d 51 38 4d 65 67 68 6e 4b 62 33 
0x0150(336) : 4f 71 56 76 2e 38 70 6a 4a 38 7a 4a 58 68 67 62 
0x0160(352) : 30 62 69 6e 78 37 77 48 6c 61 79 58 75 58 61 47 
0x0170(368) : 4c 33 39 4b 42 7a 31 55 35 2e 6f 63 66 53 42 67 
0x0180(384) : 31 75 52 79 2d 4c 44 6b 76 39 46 6f 67 70 32 2d 
0x0190(400) : 73 43 4a 32 39 4b 57 45 49 49 71 79 6b 30 63 6c 
0x01a0(416) : 75 31 68 74 4e 75 62 47 31 72 32 68 65 35 68 56 
0x01b0(432) : 48 2e 58 51 4a 31 65 62 4b 53 58 32 53 37 6f 4b 
0x01c0(448) : 39 54 42 57 4d 6e 6d 4e 63 70 33 45 75 6b 6a 39 
0x01d0(464) : 69 45 5a 2d 47 42 62 61 64 36 63 34 45 4f 4f 4e 
0x01e0(480) : 73 61 74 43 4c 64 5a 78 51 63 39 49 4b 74 52 31 
0x01f0(496) : 35 2e 30 4c 39 62 76 6e 69 57 72 77 75 44 48 6b 
0x0200(512) : 6e 38 77 36 6c 55 31 41 34 42 53 50 32 75 51 37 
0x0210(528) : 73 51 54 30 30 4d 6e 69 73 63 63 6c 70 74 54 62 
0x0220(544) : 2d 4f 68 6b 73 6a 75 77 75 4c 4a 77 44 6a 31 33 
0x0230(560) : 38 55 33 38 72 71 71 68 51 51 51 45 48 75 70 47 
0x0240(576) : 47 55 2e 36 42 74 30 33 43 4b 7a 50 31 2d 53 39 
0x0250(592) : 54 57 48 49 4b 35 2e 6c 56 4f 7a 6d 47 6d 30 57 
0x0260(608) : 45 2d 63 51 73 64 54 32 78 52 52 79 51 74 36 74 
0x0270(624) : 4e 4e 41 69 54 38 52 79 57 4f 6a 6e 38 6a 48 4d 
0x0280(640) : 69 75 6d 59 56 45 61 51 66 2d 4d 33 74 53 77 45 
0x0290(656) : 71 34 77 48 43 4c 44 6a 6a 77 55 72 65 6c 43 4b 
0x02a0(672) : 64 79 74 36 41 52 57 70 52 74 73 49 4a 6e 57 37 
0x02b0(688) : 72 52 4f 32 6d 63 6c 55 57 44 4a 38 79 56 54 61 
0x02c0(704) : 53 4b 67 63 6c 42 51 41 32 47 53 4c 31 7a 54 74 
0x02d0(720) : 4f 72 76 38 52 65 63 79 72 77 34 6e 50 58 4c 72 
0x02e0(736) : 72 30 53 62 42 73 6c 44 36 43 59 38 39 2d 2d 58 
0x02f0(752) : 72 75 66 47 57 47 43 4c 41 48 36 5a 6f 53 50 65 
0x0300(768) : 53 72 44 64 68 79 71 6e 38 4d 76 48 4d 75 6f 42 
0x0310(784) : 6d 53 52 47 69 65 62 73 76 69 50 68 38 6f 4a 61 
0x0320(800) : 64 57 42 49 54 2d 34 62 4c 7a 74 68 73 66 73 63 
0x0330(816) : 35 49 74 6e 77 53 64 70 38 31 55 47 70 6f 71 52 
0x0340(832) : 49 2d 6a 6c 2e 6e 4c 4b 6c 43 2d 62 72 73 42 78 
0x0350(848) : 38 32 69 32 56 4b 72 64 4c 4a 75 38 35 69 5a 4f 
0x0360(864) : 69 48 37 67 32 53 2e 6e 65 2e 4d 55 71 59 50 79 
0x0370(880) : 61 35 2e 33 50 70 68 6b 36 5a 74 43 46 51 61 78 
0x0380(896) : 68 68 63 6b 38 61 56 6d 59 73 45 4d 4f 64 49 79 
0x0390(912) : 6a 47 30 36 33 68 72 41 45 69 4d 54 36 77 50 6f 
0x03a0(928) : 62 2d 57 6a 5a 2d 55 36 72 69 53 44 4b 6c 41 31 
0x03b0(944) : 2d 41 37 33 72 79 44 33 65 5a 57 6c 54 76 58 32 
0x03c0(960) : 75 31 6d 53 30 45 59 73 77 2e 33 45 6a 44 46 6a 
0x03d0(976) : 4e 4e 6d 43 4a 7a 46 79 57 6d 68 7a 66 43 2d 59 
0x03e0(992) : 44 6c 2e 44 7a 57 33 75 55 37 36 43 4b 4d 76 69 
0x03f0(1008) : 6a 66 75 30 63 38 79 36 75 64 33 58 70 32 33 30 
0x0400(1024) : 6f 31 45 6c 58 48 64 30 4f 6b 43 6a 34 35 50 6e 
0x0410(1040) : 6b 48 6e 4b 50 6b 51 48 4c 54 70 39 56 73 39 48 
0x0420(1056) : 75 4e 31 50 66 65 50 31 4d 62 6b 51 67 37 42 4f 
0x0430(1072) : 50 7a 69 6f 68 36 34 30 5a 74 39 33 6a 4a 4b 62 
0x0440(1088) : 67 4c 2d 4a 2e 4f 4c 4b 2e 33 6c 65 42 77 31 61 
0x0450(1104) : 74 6a 4d 59 71 51 5a 4e 48 69 51 2d 2d 6c 61 67 
0x0460(1120) : 34 5a 7a 32 79 49 4e 77 4d 36 59 58 30 5a 35 75 
0x0470(1136) : 48 52 51 35 73 7a 53 37 67 74 36 66 63 68 4a 67 
0x0480(1152) : 45 0d 0a 45 4e 44 0d 0a 
initial input and inout tuples:
	control = (
		offset = 0x0000(0)
		virtual_offset = 0x0000(0)
		section = 0x0(0)
		activeBank = 0x0(0)
		done = 0x0(0)
		error = 0x0(0)
	)
	hdr = (
		eth = (
		isValid = 0x1(1)
		dst = 0x000000000000(0)
		src = 0x000000000000(0)
		type = 0x0800(2048)
	)
		fec = (
		isValid = 0x0(0)
		traffic_class = 0x0(0)
		block_index = 0x00(0)
		packet_index = 0x00(0)
		original_type = 0x0000(0)
	)
		ipv4 = (
		isValid = 0x1(1)
		version = 0x4(4)
		ihl = 0x5(5)
		diffserv = 0x00(0)
		totallen = 0x047a(1146)
		identification = 0x76da(30426)
		flags = 0x2(2)
		fragoffset = 0x0000(0)
		ttl = 0x40(64)
		protocol = 0x11(17)
		hdrchecksum = 0xc5a6(50598)
		srcAddr = 0x7f000001(2130706433)
		dstAddr = 0x7f000001(2130706433)
	)
		udp = (
		isValid = 0x1(1)
		sport = 0x2bcb(11211)
		dport = 0xa9d3(43475)
		len = 0x0466(1126)
		chksum = 0xfe69(65129)
	)
	)
	Deparser_extracts = (
		size = 0x00000150(336)
	)
clear internal and output-only tuples
processing section extract_headers_sec in stage 1
-------------------------------------------------------------------
Section extract_headers_sec starting


	method remove
	removing 42 bytes at byte 0:
 0x0000(0) : 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 
0x0010(16) : 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 
0x0020(32) : 00 00 00 00 00 00 00 00 00 00 
	method move_to_section = act_sec

updated tuples:
	control = (
		offset = 0x0000(0)
		virtual_offset = 0x0150(336)
		section = 0x1(1)
		activeBank = 0x0(0)
		done = 0x0(0)
		error = 0x0(0)
	)
	hdr = (
		eth = (
		isValid = 0x1(1)
		dst = 0x000000000000(0)
		src = 0x000000000000(0)
		type = 0x0800(2048)
	)
		fec = (
		isValid = 0x0(0)
		traffic_class = 0x0(0)
		block_index = 0x00(0)
		packet_index = 0x00(0)
		original_type = 0x0000(0)
	)
		ipv4 = (
		isValid = 0x1(1)
		version = 0x4(4)
		ihl = 0x5(5)
		diffserv = 0x00(0)
		totallen = 0x047a(1146)
		identification = 0x76da(30426)
		flags = 0x2(2)
		fragoffset = 0x0000(0)
		ttl = 0x40(64)
		protocol = 0x11(17)
		hdrchecksum = 0xc5a6(50598)
		srcAddr = 0x7f000001(2130706433)
		dstAddr = 0x7f000001(2130706433)
	)
		udp = (
		isValid = 0x1(1)
		sport = 0x2bcb(11211)
		dport = 0xa9d3(43475)
		len = 0x0466(1126)
		chksum = 0xfe69(65129)
	)
	)
	Deparser_extracts = (
		size = 0x00000150(336)
	)
Section extract_headers_sec finished
-------------------------------------------------------------------
processing section act_sec in stage 2
-------------------------------------------------------------------
Section act_sec starting


	method move_to_section = emit_3

updated tuples:
	control = (
		offset = 0x0000(0)
		virtual_offset = 0x0150(336)
		section = 0x5(5)
		activeBank = 0x0(0)
		done = 0x0(0)
		error = 0x0(0)
	)
	hdr = (
		eth = (
		isValid = 0x1(1)
		dst = 0x000000000000(0)
		src = 0x000000000000(0)
		type = 0x0800(2048)
	)
		fec = (
		isValid = 0x0(0)
		traffic_class = 0x0(0)
		block_index = 0x00(0)
		packet_index = 0x00(0)
		original_type = 0x0000(0)
	)
		ipv4 = (
		isValid = 0x1(1)
		version = 0x4(4)
		ihl = 0x5(5)
		diffserv = 0x00(0)
		totallen = 0x047a(1146)
		identification = 0x76da(30426)
		flags = 0x2(2)
		fragoffset = 0x0000(0)
		ttl = 0x40(64)
		protocol = 0x11(17)
		hdrchecksum = 0xc5a6(50598)
		srcAddr = 0x7f000001(2130706433)
		dstAddr = 0x7f000001(2130706433)
	)
		udp = (
		isValid = 0x1(1)
		sport = 0x2bcb(11211)
		dport = 0xa9d3(43475)
		len = 0x0466(1126)
		chksum = 0xfe69(65129)
	)
	)
	Deparser_extracts = (
		size = 0x00000150(336)
	)
Section act_sec finished
-------------------------------------------------------------------
processing section emit_3 in stage 3
-------------------------------------------------------------------
Section emit_3 starting

	method update (tuples)


	method update (packet)
		 dst = 0x000000000000(0)
		 src = 0x000000000000(0)
		 type = 0x0800(2048)

	method insert
	inserting 14 bytes at byte 0:
 0x0000(0) : 00 00 00 00 00 00 00 00 00 00 00 00 08 00 
	method move_to_section = emit_2

updated tuples:
	control = (
		offset = 0x0070(112)
		virtual_offset = 0x0150(336)
		section = 0x4(4)
		activeBank = 0x0(0)
		done = 0x0(0)
		error = 0x0(0)
	)
	hdr = (
		eth = (
		isValid = 0x1(1)
		dst = 0x000000000000(0)
		src = 0x000000000000(0)
		type = 0x0800(2048)
	)
		fec = (
		isValid = 0x0(0)
		traffic_class = 0x0(0)
		block_index = 0x00(0)
		packet_index = 0x00(0)
		original_type = 0x0000(0)
	)
		ipv4 = (
		isValid = 0x1(1)
		version = 0x4(4)
		ihl = 0x5(5)
		diffserv = 0x00(0)
		totallen = 0x047a(1146)
		identification = 0x76da(30426)
		flags = 0x2(2)
		fragoffset = 0x0000(0)
		ttl = 0x40(64)
		protocol = 0x11(17)
		hdrchecksum = 0xc5a6(50598)
		srcAddr = 0x7f000001(2130706433)
		dstAddr = 0x7f000001(2130706433)
	)
		udp = (
		isValid = 0x1(1)
		sport = 0x2bcb(11211)
		dport = 0xa9d3(43475)
		len = 0x0466(1126)
		chksum = 0xfe69(65129)
	)
	)
	Deparser_extracts = (
		size = 0x00000150(336)
	)
Section emit_3 finished
-------------------------------------------------------------------
processing section emit_2 in stage 4
-------------------------------------------------------------------
Section emit_2 starting

	method update (tuples)


	method update (packet)
		 traffic_class = 0x0(0)
		 block_index = 0x00(0)
		 packet_index = 0x00(0)
		 original_type = 0x0000(0)

	method insert
	inserting 0 bytes at byte 14:
 0x0000(0) :                                           
	method move_to_section = emit_1

updated tuples:
	control = (
		offset = 0x0070(112)
		virtual_offset = 0x0150(336)
		section = 0x3(3)
		activeBank = 0x0(0)
		done = 0x0(0)
		error = 0x0(0)
	)
	hdr = (
		eth = (
		isValid = 0x1(1)
		dst = 0x000000000000(0)
		src = 0x000000000000(0)
		type = 0x0800(2048)
	)
		fec = (
		isValid = 0x0(0)
		traffic_class = 0x0(0)
		block_index = 0x00(0)
		packet_index = 0x00(0)
		original_type = 0x0000(0)
	)
		ipv4 = (
		isValid = 0x1(1)
		version = 0x4(4)
		ihl = 0x5(5)
		diffserv = 0x00(0)
		totallen = 0x047a(1146)
		identification = 0x76da(30426)
		flags = 0x2(2)
		fragoffset = 0x0000(0)
		ttl = 0x40(64)
		protocol = 0x11(17)
		hdrchecksum = 0xc5a6(50598)
		srcAddr = 0x7f000001(2130706433)
		dstAddr = 0x7f000001(2130706433)
	)
		udp = (
		isValid = 0x1(1)
		sport = 0x2bcb(11211)
		dport = 0xa9d3(43475)
		len = 0x0466(1126)
		chksum = 0xfe69(65129)
	)
	)
	Deparser_extracts = (
		size = 0x00000150(336)
	)
Section emit_2 finished
-------------------------------------------------------------------
processing section emit_1 in stage 5
-------------------------------------------------------------------
Section emit_1 starting

	method update (tuples)


	method update (packet)
		 version = 0x4(4)
		 ihl = 0x5(5)
		 diffserv = 0x00(0)
		 totallen = 0x047a(1146)
		 identification = 0x76da(30426)
		 flags = 0x2(2)
		 fragoffset = 0x0000(0)
		 ttl = 0x40(64)
		 protocol = 0x11(17)
		 hdrchecksum = 0xc5a6(50598)
		 srcAddr = 0x7f000001(2130706433)
		 dstAddr = 0x7f000001(2130706433)

	method insert
	inserting 20 bytes at byte 14:
 0x0000(0) :                                           45 00 
0x0010(16) : 04 7a 76 da 40 00 40 11 c5 a6 7f 00 00 01 7f 00 
0x0020(32) : 00 01 
	method move_to_section = emit_0

updated tuples:
	control = (
		offset = 0x0110(272)
		virtual_offset = 0x0150(336)
		section = 0x2(2)
		activeBank = 0x0(0)
		done = 0x0(0)
		error = 0x0(0)
	)
	hdr = (
		eth = (
		isValid = 0x1(1)
		dst = 0x000000000000(0)
		src = 0x000000000000(0)
		type = 0x0800(2048)
	)
		fec = (
		isValid = 0x0(0)
		traffic_class = 0x0(0)
		block_index = 0x00(0)
		packet_index = 0x00(0)
		original_type = 0x0000(0)
	)
		ipv4 = (
		isValid = 0x1(1)
		version = 0x4(4)
		ihl = 0x5(5)
		diffserv = 0x00(0)
		totallen = 0x047a(1146)
		identification = 0x76da(30426)
		flags = 0x2(2)
		fragoffset = 0x0000(0)
		ttl = 0x40(64)
		protocol = 0x11(17)
		hdrchecksum = 0xc5a6(50598)
		srcAddr = 0x7f000001(2130706433)
		dstAddr = 0x7f000001(2130706433)
	)
		udp = (
		isValid = 0x1(1)
		sport = 0x2bcb(11211)
		dport = 0xa9d3(43475)
		len = 0x0466(1126)
		chksum = 0xfe69(65129)
	)
	)
	Deparser_extracts = (
		size = 0x00000150(336)
	)
Section emit_1 finished
-------------------------------------------------------------------
processing section emit_0 in stage 6
-------------------------------------------------------------------
Section emit_0 starting

	method update (tuples)


	method update (packet)
		 sport = 0x2bcb(11211)
		 dport = 0xa9d3(43475)
		 len = 0x0466(1126)
		 chksum = 0xfe69(65129)

	method insert
	inserting 8 bytes at byte 34:
0x0020(32) :       2b cb a9 d3 04 66 fe 69 
	method move_to_section = done(0)

updated tuples:
	control = (
		offset = 0x0150(336)
		virtual_offset = 0x0150(336)
		section = 0x0(0)
		activeBank = 0x0(0)
		done = 0x1(1)
		error = 0x0(0)
	)
	hdr = (
		eth = (
		isValid = 0x1(1)
		dst = 0x000000000000(0)
		src = 0x000000000000(0)
		type = 0x0800(2048)
	)
		fec = (
		isValid = 0x0(0)
		traffic_class = 0x0(0)
		block_index = 0x00(0)
		packet_index = 0x00(0)
		original_type = 0x0000(0)
	)
		ipv4 = (
		isValid = 0x1(1)
		version = 0x4(4)
		ihl = 0x5(5)
		diffserv = 0x00(0)
		totallen = 0x047a(1146)
		identification = 0x76da(30426)
		flags = 0x2(2)
		fragoffset = 0x0000(0)
		ttl = 0x40(64)
		protocol = 0x11(17)
		hdrchecksum = 0xc5a6(50598)
		srcAddr = 0x7f000001(2130706433)
		dstAddr = 0x7f000001(2130706433)
	)
		udp = (
		isValid = 0x1(1)
		sport = 0x2bcb(11211)
		dport = 0xa9d3(43475)
		len = 0x0466(1126)
		chksum = 0xfe69(65129)
	)
	)
	Deparser_extracts = (
		size = 0x00000150(336)
	)
Section emit_0 finished
-------------------------------------------------------------------
final inout and output tuples:

Note: this engine's wrapper will clear the upper control tuple fields on output, except for the 'control.error' field.

	control = (
		offset = 0x0000(0)
		virtual_offset = 0x0000(0)
		section = 0x0(0)
		activeBank = 0x0(0)
		done = 0x0(0)
		error = 0x0(0)
	)
output packet (1160 bytes)
 0x0000(0) : 00 00 00 00 00 00 00 00 00 00 00 00 08 00 45 00 
0x0010(16) : 04 7a 76 da 40 00 40 11 c5 a6 7f 00 00 01 7f 00 
0x0020(32) : 00 01 2b cb a9 d3 04 66 fe 69 00 01 00 00 00 01 
0x0030(48) : 00 00 56 41 4c 55 45 20 10 10 10 10 10 10 10 10 
0x0040(64) : 31 55 46 58 74 47 2d 31 32 76 79 50 55 74 6f 77 
0x0050(80) : 6b 63 75 5a 53 75 59 6a 33 4a 62 56 79 33 41 7a 
0x0060(96) : 58 50 56 4f 66 55 51 68 4e 4d 35 73 44 74 6d 78 
0x0070(112) : 54 65 55 76 57 30 64 5a 20 30 20 31 30 32 34 0d 
0x0080(128) : 0a 31 55 46 58 74 47 2d 31 32 76 79 50 55 74 6f 
0x0090(144) : 77 6b 63 75 5a 53 75 59 6a 33 4a 62 56 79 33 41 
0x00a0(160) : 7a 58 50 56 4f 66 55 51 68 4e 4d 35 73 44 74 6d 
0x00b0(176) : 78 54 65 55 76 57 30 64 5a 4b 43 33 47 46 44 45 
0x00c0(192) : 6e 63 6a 39 46 42 5a 78 59 76 30 4f 36 74 38 31 
0x00d0(208) : 4b 6d 57 44 48 57 71 71 71 31 74 35 47 34 4a 31 
0x00e0(224) : 67 30 42 77 42 6b 72 6a 65 72 36 6b 69 45 6d 30 
0x00f0(240) : 2d 47 44 47 6d 32 34 62 33 79 67 4a 30 7a 4c 68 
0x0100(256) : 7a 57 62 38 45 51 72 73 46 78 62 78 41 4c 78 39 
0x0110(272) : 62 38 50 4c 41 54 77 44 50 61 58 51 58 73 35 55 
0x0120(288) : 4d 67 63 61 34 53 52 4a 4e 30 45 58 4c 39 67 77 
0x0130(304) : 48 33 46 53 58 41 66 77 6b 41 4b 47 30 50 6b 4d 
0x0140(320) : 33 4c 78 37 6e 4d 51 38 4d 65 67 68 6e 4b 62 33 
0x0150(336) : 4f 71 56 76 2e 38 70 6a 4a 38 7a 4a 58 68 67 62 
0x0160(352) : 30 62 69 6e 78 37 77 48 6c 61 79 58 75 58 61 47 
0x0170(368) : 4c 33 39 4b 42 7a 31 55 35 2e 6f 63 66 53 42 67 
0x0180(384) : 31 75 52 79 2d 4c 44 6b 76 39 46 6f 67 70 32 2d 
0x0190(400) : 73 43 4a 32 39 4b 57 45 49 49 71 79 6b 30 63 6c 
0x01a0(416) : 75 31 68 74 4e 75 62 47 31 72 32 68 65 35 68 56 
0x01b0(432) : 48 2e 58 51 4a 31 65 62 4b 53 58 32 53 37 6f 4b 
0x01c0(448) : 39 54 42 57 4d 6e 6d 4e 63 70 33 45 75 6b 6a 39 
0x01d0(464) : 69 45 5a 2d 47 42 62 61 64 36 63 34 45 4f 4f 4e 
0x01e0(480) : 73 61 74 43 4c 64 5a 78 51 63 39 49 4b 74 52 31 
0x01f0(496) : 35 2e 30 4c 39 62 76 6e 69 57 72 77 75 44 48 6b 
0x0200(512) : 6e 38 77 36 6c 55 31 41 34 42 53 50 32 75 51 37 
0x0210(528) : 73 51 54 30 30 4d 6e 69 73 63 63 6c 70 74 54 62 
0x0220(544) : 2d 4f 68 6b 73 6a 75 77 75 4c 4a 77 44 6a 31 33 
0x0230(560) : 38 55 33 38 72 71 71 68 51 51 51 45 48 75 70 47 
0x0240(576) : 47 55 2e 36 42 74 30 33 43 4b 7a 50 31 2d 53 39 
0x0250(592) : 54 57 48 49 4b 35 2e 6c 56 4f 7a 6d 47 6d 30 57 
0x0260(608) : 45 2d 63 51 73 64 54 32 78 52 52 79 51 74 36 74 
0x0270(624) : 4e 4e 41 69 54 38 52 79 57 4f 6a 6e 38 6a 48 4d 
0x0280(640) : 69 75 6d 59 56 45 61 51 66 2d 4d 33 74 53 77 45 
0x0290(656) : 71 34 77 48 43 4c 44 6a 6a 77 55 72 65 6c 43 4b 
0x02a0(672) : 64 79 74 36 41 52 57 70 52 74 73 49 4a 6e 57 37 
0x02b0(688) : 72 52 4f 32 6d 63 6c 55 57 44 4a 38 79 56 54 61 
0x02c0(704) : 53 4b 67 63 6c 42 51 41 32 47 53 4c 31 7a 54 74 
0x02d0(720) : 4f 72 76 38 52 65 63 79 72 77 34 6e 50 58 4c 72 
0x02e0(736) : 72 30 53 62 42 73 6c 44 36 43 59 38 39 2d 2d 58 
0x02f0(752) : 72 75 66 47 57 47 43 4c 41 48 36 5a 6f 53 50 65 
0x0300(768) : 53 72 44 64 68 79 71 6e 38 4d 76 48 4d 75 6f 42 
0x0310(784) : 6d 53 52 47 69 65 62 73 76 69 50 68 38 6f 4a 61 
0x0320(800) : 64 57 42 49 54 2d 34 62 4c 7a 74 68 73 66 73 63 
0x0330(816) : 35 49 74 6e 77 53 64 70 38 31 55 47 70 6f 71 52 
0x0340(832) : 49 2d 6a 6c 2e 6e 4c 4b 6c 43 2d 62 72 73 42 78 
0x0350(848) : 38 32 69 32 56 4b 72 64 4c 4a 75 38 35 69 5a 4f 
0x0360(864) : 69 48 37 67 32 53 2e 6e 65 2e 4d 55 71 59 50 79 
0x0370(880) : 61 35 2e 33 50 70 68 6b 36 5a 74 43 46 51 61 78 
0x0380(896) : 68 68 63 6b 38 61 56 6d 59 73 45 4d 4f 64 49 79 
0x0390(912) : 6a 47 30 36 33 68 72 41 45 69 4d 54 36 77 50 6f 
0x03a0(928) : 62 2d 57 6a 5a 2d 55 36 72 69 53 44 4b 6c 41 31 
0x03b0(944) : 2d 41 37 33 72 79 44 33 65 5a 57 6c 54 76 58 32 
0x03c0(960) : 75 31 6d 53 30 45 59 73 77 2e 33 45 6a 44 46 6a 
0x03d0(976) : 4e 4e 6d 43 4a 7a 46 79 57 6d 68 7a 66 43 2d 59 
0x03e0(992) : 44 6c 2e 44 7a 57 33 75 55 37 36 43 4b 4d 76 69 
0x03f0(1008) : 6a 66 75 30 63 38 79 36 75 64 33 58 70 32 33 30 
0x0400(1024) : 6f 31 45 6c 58 48 64 30 4f 6b 43 6a 34 35 50 6e 
0x0410(1040) : 6b 48 6e 4b 50 6b 51 48 4c 54 70 39 56 73 39 48 
0x0420(1056) : 75 4e 31 50 66 65 50 31 4d 62 6b 51 67 37 42 4f 
0x0430(1072) : 50 7a 69 6f 68 36 34 30 5a 74 39 33 6a 4a 4b 62 
0x0440(1088) : 67 4c 2d 4a 2e 4f 4c 4b 2e 33 6c 65 42 77 31 61 
0x0450(1104) : 74 6a 4d 59 71 51 5a 4e 48 69 51 2d 2d 6c 61 67 
0x0460(1120) : 34 5a 7a 32 79 49 4e 77 4d 36 59 58 30 5a 35 75 
0x0470(1136) : 48 52 51 35 73 7a 53 37 67 74 36 66 63 68 4a 67 
0x0480(1152) : 45 0d 0a 45 4e 44 0d 0a 
Exiting engine Deparser
===================================================================
final inout and output tuples:
	ioports = (
		ingress_port = 0x0(0)
		egress_port = 0x0(0)
	)
output packet (1160 bytes)
 0x0000(0) : 00 00 00 00 00 00 00 00 00 00 00 00 08 00 45 00 
0x0010(16) : 04 7a 76 da 40 00 40 11 c5 a6 7f 00 00 01 7f 00 
0x0020(32) : 00 01 2b cb a9 d3 04 66 fe 69 00 01 00 00 00 01 
0x0030(48) : 00 00 56 41 4c 55 45 20 10 10 10 10 10 10 10 10 
0x0040(64) : 31 55 46 58 74 47 2d 31 32 76 79 50 55 74 6f 77 
0x0050(80) : 6b 63 75 5a 53 75 59 6a 33 4a 62 56 79 33 41 7a 
0x0060(96) : 58 50 56 4f 66 55 51 68 4e 4d 35 73 44 74 6d 78 
0x0070(112) : 54 65 55 76 57 30 64 5a 20 30 20 31 30 32 34 0d 
0x0080(128) : 0a 31 55 46 58 74 47 2d 31 32 76 79 50 55 74 6f 
0x0090(144) : 77 6b 63 75 5a 53 75 59 6a 33 4a 62 56 79 33 41 
0x00a0(160) : 7a 58 50 56 4f 66 55 51 68 4e 4d 35 73 44 74 6d 
0x00b0(176) : 78 54 65 55 76 57 30 64 5a 4b 43 33 47 46 44 45 
0x00c0(192) : 6e 63 6a 39 46 42 5a 78 59 76 30 4f 36 74 38 31 
0x00d0(208) : 4b 6d 57 44 48 57 71 71 71 31 74 35 47 34 4a 31 
0x00e0(224) : 67 30 42 77 42 6b 72 6a 65 72 36 6b 69 45 6d 30 
0x00f0(240) : 2d 47 44 47 6d 32 34 62 33 79 67 4a 30 7a 4c 68 
0x0100(256) : 7a 57 62 38 45 51 72 73 46 78 62 78 41 4c 78 39 
0x0110(272) : 62 38 50 4c 41 54 77 44 50 61 58 51 58 73 35 55 
0x0120(288) : 4d 67 63 61 34 53 52 4a 4e 30 45 58 4c 39 67 77 
0x0130(304) : 48 33 46 53 58 41 66 77 6b 41 4b 47 30 50 6b 4d 
0x0140(320) : 33 4c 78 37 6e 4d 51 38 4d 65 67 68 6e 4b 62 33 
0x0150(336) : 4f 71 56 76 2e 38 70 6a 4a 38 7a 4a 58 68 67 62 
0x0160(352) : 30 62 69 6e 78 37 77 48 6c 61 79 58 75 58 61 47 
0x0170(368) : 4c 33 39 4b 42 7a 31 55 35 2e 6f 63 66 53 42 67 
0x0180(384) : 31 75 52 79 2d 4c 44 6b 76 39 46 6f 67 70 32 2d 
0x0190(400) : 73 43 4a 32 39 4b 57 45 49 49 71 79 6b 30 63 6c 
0x01a0(416) : 75 31 68 74 4e 75 62 47 31 72 32 68 65 35 68 56 
0x01b0(432) : 48 2e 58 51 4a 31 65 62 4b 53 58 32 53 37 6f 4b 
0x01c0(448) : 39 54 42 57 4d 6e 6d 4e 63 70 33 45 75 6b 6a 39 
0x01d0(464) : 69 45 5a 2d 47 42 62 61 64 36 63 34 45 4f 4f 4e 
0x01e0(480) : 73 61 74 43 4c 64 5a 78 51 63 39 49 4b 74 52 31 
0x01f0(496) : 35 2e 30 4c 39 62 76 6e 69 57 72 77 75 44 48 6b 
0x0200(512) : 6e 38 77 36 6c 55 31 41 34 42 53 50 32 75 51 37 
0x0210(528) : 73 51 54 30 30 4d 6e 69 73 63 63 6c 70 74 54 62 
0x0220(544) : 2d 4f 68 6b 73 6a 75 77 75 4c 4a 77 44 6a 31 33 
0x0230(560) : 38 55 33 38 72 71 71 68 51 51 51 45 48 75 70 47 
0x0240(576) : 47 55 2e 36 42 74 30 33 43 4b 7a 50 31 2d 53 39 
0x0250(592) : 54 57 48 49 4b 35 2e 6c 56 4f 7a 6d 47 6d 30 57 
0x0260(608) : 45 2d 63 51 73 64 54 32 78 52 52 79 51 74 36 74 
0x0270(624) : 4e 4e 41 69 54 38 52 79 57 4f 6a 6e 38 6a 48 4d 
0x0280(640) : 69 75 6d 59 56 45 61 51 66 2d 4d 33 74 53 77 45 
0x0290(656) : 71 34 77 48 43 4c 44 6a 6a 77 55 72 65 6c 43 4b 
0x02a0(672) : 64 79 74 36 41 52 57 70 52 74 73 49 4a 6e 57 37 
0x02b0(688) : 72 52 4f 32 6d 63 6c 55 57 44 4a 38 79 56 54 61 
0x02c0(704) : 53 4b 67 63 6c 42 51 41 32 47 53 4c 31 7a 54 74 
0x02d0(720) : 4f 72 76 38 52 65 63 79 72 77 34 6e 50 58 4c 72 
0x02e0(736) : 72 30 53 62 42 73 6c 44 36 43 59 38 39 2d 2d 58 
0x02f0(752) : 72 75 66 47 57 47 43 4c 41 48 36 5a 6f 53 50 65 
0x0300(768) : 53 72 44 64 68 79 71 6e 38 4d 76 48 4d 75 6f 42 
0x0310(784) : 6d 53 52 47 69 65 62 73 76 69 50 68 38 6f 4a 61 
0x0320(800) : 64 57 42 49 54 2d 34 62 4c 7a 74 68 73 66 73 63 
0x0330(816) : 35 49 74 6e 77 53 64 70 38 31 55 47 70 6f 71 52 
0x0340(832) : 49 2d 6a 6c 2e 6e 4c 4b 6c 43 2d 62 72 73 42 78 
0x0350(848) : 38 32 69 32 56 4b 72 64 4c 4a 75 38 35 69 5a 4f 
0x0360(864) : 69 48 37 67 32 53 2e 6e 65 2e 4d 55 71 59 50 79 
0x0370(880) : 61 35 2e 33 50 70 68 6b 36 5a 74 43 46 51 61 78 
0x0380(896) : 68 68 63 6b 38 61 56 6d 59 73 45 4d 4f 64 49 79 
0x0390(912) : 6a 47 30 36 33 68 72 41 45 69 4d 54 36 77 50 6f 
0x03a0(928) : 62 2d 57 6a 5a 2d 55 36 72 69 53 44 4b 6c 41 31 
0x03b0(944) : 2d 41 37 33 72 79 44 33 65 5a 57 6c 54 76 58 32 
0x03c0(960) : 75 31 6d 53 30 45 59 73 77 2e 33 45 6a 44 46 6a 
0x03d0(976) : 4e 4e 6d 43 4a 7a 46 79 57 6d 68 7a 66 43 2d 59 
0x03e0(992) : 44 6c 2e 44 7a 57 33 75 55 37 36 43 4b 4d 76 69 
0x03f0(1008) : 6a 66 75 30 63 38 79 36 75 64 33 58 70 32 33 30 
0x0400(1024) : 6f 31 45 6c 58 48 64 30 4f 6b 43 6a 34 35 50 6e 
0x0410(1040) : 6b 48 6e 4b 50 6b 51 48 4c 54 70 39 56 73 39 48 
0x0420(1056) : 75 4e 31 50 66 65 50 31 4d 62 6b 51 67 37 42 4f 
0x0430(1072) : 50 7a 69 6f 68 36 34 30 5a 74 39 33 6a 4a 4b 62 
0x0440(1088) : 67 4c 2d 4a 2e 4f 4c 4b 2e 33 6c 65 42 77 31 61 
0x0450(1104) : 74 6a 4d 59 71 51 5a 4e 48 69 51 2d 2d 6c 61 67 
0x0460(1120) : 34 5a 7a 32 79 49 4e 77 4d 36 59 58 30 5a 35 75 
0x0470(1136) : 48 52 51 35 73 7a 53 37 67 74 36 66 63 68 4a 67 
0x0480(1152) : 45 0d 0a 45 4e 44 0d 0a 
Exiting system XilinxSwitch
===================================================================
Evaluating packet #3(1155 bytes)
 0x0000(0) : 00 00 00 00 00 00 00 00 00 00 00 00 08 00 45 00 
0x0010(16) : 04 75 76 dc 40 00 40 11 c1 99 7f 00 00 01 7f 00 
0x0020(32) : 00 01 a9 d3 2b cb 04 61 02 75 00 02 00 00 00 01 
0x0030(48) : 01 00 73 65 74 20 11 10 10 10 10 10 10 10 49 4f 
0x0040(64) : 6a 53 2e 45 6d 4b 45 34 6d 4d 36 7a 6c 30 65 61 
0x0050(80) : 64 63 72 67 65 6e 34 68 77 6a 49 30 73 61 50 5a 
0x0060(96) : 30 4e 6f 6d 68 30 72 52 4e 78 50 36 79 31 67 5a 
0x0070(112) : 64 56 45 46 48 49 20 30 20 30 20 31 30 32 34 0d 
0x0080(128) : 0a 49 4f 6a 53 2e 45 6d 4b 45 34 6d 4d 36 7a 6c 
0x0090(144) : 30 65 61 64 63 72 67 65 6e 34 68 77 6a 49 30 73 
0x00a0(160) : 61 50 5a 30 4e 6f 6d 68 30 72 52 4e 78 50 36 79 
0x00b0(176) : 31 67 5a 64 56 45 46 48 49 78 42 2d 44 42 72 6e 
0x00c0(192) : 61 50 6f 78 42 59 64 42 4e 32 59 4a 52 66 46 53 
0x00d0(208) : 4a 6f 33 70 30 4a 34 49 45 46 49 52 51 37 43 2d 
0x00e0(224) : 57 2e 77 68 58 58 74 75 61 50 42 2d 32 51 53 4d 
0x00f0(240) : 44 56 39 44 6f 44 57 30 53 6f 52 73 76 65 72 51 
0x0100(256) : 63 6d 35 37 48 79 30 72 4d 42 72 4f 63 48 6b 70 
0x0110(272) : 6d 74 30 5a 34 57 5a 57 49 2d 4e 43 64 43 63 44 
0x0120(288) : 79 68 4c 45 65 4c 33 2e 57 75 4d 36 39 35 76 77 
0x0130(304) : 79 77 54 31 51 30 58 6a 2d 75 76 63 35 56 71 31 
0x0140(320) : 41 39 46 6f 55 4a 6d 2e 42 37 35 4c 43 2e 46 38 
0x0150(336) : 75 69 39 4a 69 68 30 69 5a 76 49 65 4f 36 67 59 
0x0160(352) : 46 76 4c 6a 43 35 69 4f 43 6e 6a 4f 6c 79 58 65 
0x0170(368) : 65 67 78 4b 4c 78 30 76 71 4a 58 43 50 42 6b 66 
0x0180(384) : 35 33 4d 48 39 32 66 4c 70 4d 6b 5a 49 46 42 77 
0x0190(400) : 76 36 46 46 31 46 38 72 59 66 31 79 72 6c 62 77 
0x01a0(416) : 70 78 42 79 2e 72 48 6e 42 2d 4b 55 45 56 4f 38 
0x01b0(432) : 62 64 4e 63 74 56 52 50 38 53 4c 7a 43 77 74 2d 
0x01c0(448) : 73 33 78 71 75 43 62 33 43 77 58 51 50 77 59 2d 
0x01d0(464) : 58 76 62 4f 4f 31 6f 58 54 37 55 66 32 4d 65 75 
0x01e0(480) : 50 5a 69 48 6d 48 4b 79 42 73 4d 62 6d 76 61 48 
0x01f0(496) : 6f 39 67 42 41 53 69 65 5a 41 48 62 57 77 54 76 
0x0200(512) : 54 39 41 44 52 56 39 63 4c 57 42 35 50 6c 4d 42 
0x0210(528) : 76 30 4d 33 53 32 68 30 44 7a 62 6a 74 33 64 4b 
0x0220(544) : 43 6e 59 64 47 68 45 62 42 50 67 61 39 31 6d 32 
0x0230(560) : 31 36 35 55 39 6e 55 4d 6b 33 33 62 36 67 76 4a 
0x0240(576) : 53 52 77 69 37 38 49 49 59 79 74 68 7a 64 6a 2d 
0x0250(592) : 6a 6f 54 73 5a 78 43 48 2e 47 73 35 77 6d 4f 4d 
0x0260(608) : 42 49 33 49 52 4c 62 7a 48 53 65 46 33 4c 45 6d 
0x0270(624) : 37 68 64 68 63 70 79 61 33 70 66 2e 5a 31 4b 6b 
0x0280(640) : 4b 4e 31 6c 69 63 69 2e 32 4b 44 35 66 52 72 6d 
0x0290(656) : 36 53 52 69 47 4f 47 4a 42 77 48 6b 78 63 53 46 
0x02a0(672) : 7a 54 2e 67 33 67 65 35 2e 72 41 64 47 30 4f 4d 
0x02b0(688) : 53 70 32 69 42 49 30 4d 43 48 34 38 74 58 4e 72 
0x02c0(704) : 2e 4d 56 32 30 37 37 2d 79 49 63 43 49 2e 59 6b 
0x02d0(720) : 6f 61 52 7a 73 52 4b 33 69 4f 42 61 76 59 50 75 
0x02e0(736) : 75 75 77 76 2d 31 75 78 4a 55 37 62 54 66 4b 46 
0x02f0(752) : 44 6c 43 33 41 57 36 73 76 48 51 6f 71 70 67 69 
0x0300(768) : 68 61 62 67 63 54 62 76 79 69 56 50 4c 70 65 59 
0x0310(784) : 59 71 63 69 4c 69 59 45 2e 7a 30 6f 6d 68 55 53 
0x0320(800) : 46 34 36 72 58 69 6c 54 4f 45 73 6b 31 55 47 5a 
0x0330(816) : 4a 73 46 65 5a 6e 73 58 6b 73 4a 56 58 6e 78 6e 
0x0340(832) : 72 31 63 4e 6a 4c 71 36 5a 68 71 61 39 34 37 53 
0x0350(848) : 78 4d 34 55 38 77 2d 73 6e 49 4c 49 33 47 33 76 
0x0360(864) : 49 67 47 2d 2d 34 35 5a 6c 76 37 76 2e 46 4c 76 
0x0370(880) : 62 51 4e 6a 4b 4d 61 35 65 76 4f 68 41 52 61 53 
0x0380(896) : 35 71 52 35 76 58 65 65 51 6c 58 4f 2e 74 48 61 
0x0390(912) : 48 65 48 62 2e 72 68 63 6c 33 49 76 55 73 4c 61 
0x03a0(928) : 68 6d 66 61 48 48 43 69 30 6b 34 2d 62 4d 5a 73 
0x03b0(944) : 2e 71 52 7a 67 36 5a 50 39 72 49 65 69 64 43 4e 
0x03c0(960) : 4e 72 78 66 36 37 4c 36 72 50 35 51 6c 65 47 6b 
0x03d0(976) : 54 69 68 37 6f 45 57 79 34 6f 61 6d 50 6d 37 6d 
0x03e0(992) : 62 32 50 68 39 6b 6e 2d 38 74 50 74 56 67 62 79 
0x03f0(1008) : 4d 47 33 38 56 5a 34 5a 4c 65 4a 6b 4f 51 56 7a 
0x0400(1024) : 53 75 65 62 64 51 61 6c 48 2e 63 6d 65 43 6a 2e 
0x0410(1040) : 53 6d 36 78 4b 42 55 66 70 6e 4f 43 42 74 39 64 
0x0420(1056) : 6c 6f 44 4d 43 6e 35 54 6c 69 44 4e 75 77 4c 4b 
0x0430(1072) : 68 53 47 2d 64 6b 65 51 57 30 63 68 74 6d 4a 64 
0x0440(1088) : 59 57 7a 6b 48 33 42 31 6c 4f 4f 64 4a 6b 78 2e 
0x0450(1104) : 41 42 7a 6e 77 62 42 51 63 6f 35 54 59 4f 34 34 
0x0460(1120) : 75 32 6f 41 35 7a 42 71 4c 5a 52 65 48 4d 63 52 
0x0470(1136) : 59 5a 43 53 39 4f 73 6c 41 78 43 69 4b 48 6d 43 
0x0480(1152) : 4a 0d 0a 
===================================================================
Entering system XilinxSwitch
input packet (1155 bytes)
 0x0000(0) : 00 00 00 00 00 00 00 00 00 00 00 00 08 00 45 00 
0x0010(16) : 04 75 76 dc 40 00 40 11 c1 99 7f 00 00 01 7f 00 
0x0020(32) : 00 01 a9 d3 2b cb 04 61 02 75 00 02 00 00 00 01 
0x0030(48) : 01 00 73 65 74 20 11 10 10 10 10 10 10 10 49 4f 
0x0040(64) : 6a 53 2e 45 6d 4b 45 34 6d 4d 36 7a 6c 30 65 61 
0x0050(80) : 64 63 72 67 65 6e 34 68 77 6a 49 30 73 61 50 5a 
0x0060(96) : 30 4e 6f 6d 68 30 72 52 4e 78 50 36 79 31 67 5a 
0x0070(112) : 64 56 45 46 48 49 20 30 20 30 20 31 30 32 34 0d 
0x0080(128) : 0a 49 4f 6a 53 2e 45 6d 4b 45 34 6d 4d 36 7a 6c 
0x0090(144) : 30 65 61 64 63 72 67 65 6e 34 68 77 6a 49 30 73 
0x00a0(160) : 61 50 5a 30 4e 6f 6d 68 30 72 52 4e 78 50 36 79 
0x00b0(176) : 31 67 5a 64 56 45 46 48 49 78 42 2d 44 42 72 6e 
0x00c0(192) : 61 50 6f 78 42 59 64 42 4e 32 59 4a 52 66 46 53 
0x00d0(208) : 4a 6f 33 70 30 4a 34 49 45 46 49 52 51 37 43 2d 
0x00e0(224) : 57 2e 77 68 58 58 74 75 61 50 42 2d 32 51 53 4d 
0x00f0(240) : 44 56 39 44 6f 44 57 30 53 6f 52 73 76 65 72 51 
0x0100(256) : 63 6d 35 37 48 79 30 72 4d 42 72 4f 63 48 6b 70 
0x0110(272) : 6d 74 30 5a 34 57 5a 57 49 2d 4e 43 64 43 63 44 
0x0120(288) : 79 68 4c 45 65 4c 33 2e 57 75 4d 36 39 35 76 77 
0x0130(304) : 79 77 54 31 51 30 58 6a 2d 75 76 63 35 56 71 31 
0x0140(320) : 41 39 46 6f 55 4a 6d 2e 42 37 35 4c 43 2e 46 38 
0x0150(336) : 75 69 39 4a 69 68 30 69 5a 76 49 65 4f 36 67 59 
0x0160(352) : 46 76 4c 6a 43 35 69 4f 43 6e 6a 4f 6c 79 58 65 
0x0170(368) : 65 67 78 4b 4c 78 30 76 71 4a 58 43 50 42 6b 66 
0x0180(384) : 35 33 4d 48 39 32 66 4c 70 4d 6b 5a 49 46 42 77 
0x0190(400) : 76 36 46 46 31 46 38 72 59 66 31 79 72 6c 62 77 
0x01a0(416) : 70 78 42 79 2e 72 48 6e 42 2d 4b 55 45 56 4f 38 
0x01b0(432) : 62 64 4e 63 74 56 52 50 38 53 4c 7a 43 77 74 2d 
0x01c0(448) : 73 33 78 71 75 43 62 33 43 77 58 51 50 77 59 2d 
0x01d0(464) : 58 76 62 4f 4f 31 6f 58 54 37 55 66 32 4d 65 75 
0x01e0(480) : 50 5a 69 48 6d 48 4b 79 42 73 4d 62 6d 76 61 48 
0x01f0(496) : 6f 39 67 42 41 53 69 65 5a 41 48 62 57 77 54 76 
0x0200(512) : 54 39 41 44 52 56 39 63 4c 57 42 35 50 6c 4d 42 
0x0210(528) : 76 30 4d 33 53 32 68 30 44 7a 62 6a 74 33 64 4b 
0x0220(544) : 43 6e 59 64 47 68 45 62 42 50 67 61 39 31 6d 32 
0x0230(560) : 31 36 35 55 39 6e 55 4d 6b 33 33 62 36 67 76 4a 
0x0240(576) : 53 52 77 69 37 38 49 49 59 79 74 68 7a 64 6a 2d 
0x0250(592) : 6a 6f 54 73 5a 78 43 48 2e 47 73 35 77 6d 4f 4d 
0x0260(608) : 42 49 33 49 52 4c 62 7a 48 53 65 46 33 4c 45 6d 
0x0270(624) : 37 68 64 68 63 70 79 61 33 70 66 2e 5a 31 4b 6b 
0x0280(640) : 4b 4e 31 6c 69 63 69 2e 32 4b 44 35 66 52 72 6d 
0x0290(656) : 36 53 52 69 47 4f 47 4a 42 77 48 6b 78 63 53 46 
0x02a0(672) : 7a 54 2e 67 33 67 65 35 2e 72 41 64 47 30 4f 4d 
0x02b0(688) : 53 70 32 69 42 49 30 4d 43 48 34 38 74 58 4e 72 
0x02c0(704) : 2e 4d 56 32 30 37 37 2d 79 49 63 43 49 2e 59 6b 
0x02d0(720) : 6f 61 52 7a 73 52 4b 33 69 4f 42 61 76 59 50 75 
0x02e0(736) : 75 75 77 76 2d 31 75 78 4a 55 37 62 54 66 4b 46 
0x02f0(752) : 44 6c 43 33 41 57 36 73 76 48 51 6f 71 70 67 69 
0x0300(768) : 68 61 62 67 63 54 62 76 79 69 56 50 4c 70 65 59 
0x0310(784) : 59 71 63 69 4c 69 59 45 2e 7a 30 6f 6d 68 55 53 
0x0320(800) : 46 34 36 72 58 69 6c 54 4f 45 73 6b 31 55 47 5a 
0x0330(816) : 4a 73 46 65 5a 6e 73 58 6b 73 4a 56 58 6e 78 6e 
0x0340(832) : 72 31 63 4e 6a 4c 71 36 5a 68 71 61 39 34 37 53 
0x0350(848) : 78 4d 34 55 38 77 2d 73 6e 49 4c 49 33 47 33 76 
0x0360(864) : 49 67 47 2d 2d 34 35 5a 6c 76 37 76 2e 46 4c 76 
0x0370(880) : 62 51 4e 6a 4b 4d 61 35 65 76 4f 68 41 52 61 53 
0x0380(896) : 35 71 52 35 76 58 65 65 51 6c 58 4f 2e 74 48 61 
0x0390(912) : 48 65 48 62 2e 72 68 63 6c 33 49 76 55 73 4c 61 
0x03a0(928) : 68 6d 66 61 48 48 43 69 30 6b 34 2d 62 4d 5a 73 
0x03b0(944) : 2e 71 52 7a 67 36 5a 50 39 72 49 65 69 64 43 4e 
0x03c0(960) : 4e 72 78 66 36 37 4c 36 72 50 35 51 6c 65 47 6b 
0x03d0(976) : 54 69 68 37 6f 45 57 79 34 6f 61 6d 50 6d 37 6d 
0x03e0(992) : 62 32 50 68 39 6b 6e 2d 38 74 50 74 56 67 62 79 
0x03f0(1008) : 4d 47 33 38 56 5a 34 5a 4c 65 4a 6b 4f 51 56 7a 
0x0400(1024) : 53 75 65 62 64 51 61 6c 48 2e 63 6d 65 43 6a 2e 
0x0410(1040) : 53 6d 36 78 4b 42 55 66 70 6e 4f 43 42 74 39 64 
0x0420(1056) : 6c 6f 44 4d 43 6e 35 54 6c 69 44 4e 75 77 4c 4b 
0x0430(1072) : 68 53 47 2d 64 6b 65 51 57 30 63 68 74 6d 4a 64 
0x0440(1088) : 59 57 7a 6b 48 33 42 31 6c 4f 4f 64 4a 6b 78 2e 
0x0450(1104) : 41 42 7a 6e 77 62 42 51 63 6f 35 54 59 4f 34 34 
0x0460(1120) : 75 32 6f 41 35 7a 42 71 4c 5a 52 65 48 4d 63 52 
0x0470(1136) : 59 5a 43 53 39 4f 73 6c 41 78 43 69 4b 48 6d 43 
0x0480(1152) : 4a 0d 0a 
initial input and inout tuples:
	ioports = (
		ingress_port = 0x0(0)
		egress_port = 0x0(0)
	)
clear internal and output-only tuples
===================================================================
Entering engine Parser
input packet (1155 bytes)
 0x0000(0) : 00 00 00 00 00 00 00 00 00 00 00 00 08 00 45 00 
0x0010(16) : 04 75 76 dc 40 00 40 11 c1 99 7f 00 00 01 7f 00 
0x0020(32) : 00 01 a9 d3 2b cb 04 61 02 75 00 02 00 00 00 01 
0x0030(48) : 01 00 73 65 74 20 11 10 10 10 10 10 10 10 49 4f 
0x0040(64) : 6a 53 2e 45 6d 4b 45 34 6d 4d 36 7a 6c 30 65 61 
0x0050(80) : 64 63 72 67 65 6e 34 68 77 6a 49 30 73 61 50 5a 
0x0060(96) : 30 4e 6f 6d 68 30 72 52 4e 78 50 36 79 31 67 5a 
0x0070(112) : 64 56 45 46 48 49 20 30 20 30 20 31 30 32 34 0d 
0x0080(128) : 0a 49 4f 6a 53 2e 45 6d 4b 45 34 6d 4d 36 7a 6c 
0x0090(144) : 30 65 61 64 63 72 67 65 6e 34 68 77 6a 49 30 73 
0x00a0(160) : 61 50 5a 30 4e 6f 6d 68 30 72 52 4e 78 50 36 79 
0x00b0(176) : 31 67 5a 64 56 45 46 48 49 78 42 2d 44 42 72 6e 
0x00c0(192) : 61 50 6f 78 42 59 64 42 4e 32 59 4a 52 66 46 53 
0x00d0(208) : 4a 6f 33 70 30 4a 34 49 45 46 49 52 51 37 43 2d 
0x00e0(224) : 57 2e 77 68 58 58 74 75 61 50 42 2d 32 51 53 4d 
0x00f0(240) : 44 56 39 44 6f 44 57 30 53 6f 52 73 76 65 72 51 
0x0100(256) : 63 6d 35 37 48 79 30 72 4d 42 72 4f 63 48 6b 70 
0x0110(272) : 6d 74 30 5a 34 57 5a 57 49 2d 4e 43 64 43 63 44 
0x0120(288) : 79 68 4c 45 65 4c 33 2e 57 75 4d 36 39 35 76 77 
0x0130(304) : 79 77 54 31 51 30 58 6a 2d 75 76 63 35 56 71 31 
0x0140(320) : 41 39 46 6f 55 4a 6d 2e 42 37 35 4c 43 2e 46 38 
0x0150(336) : 75 69 39 4a 69 68 30 69 5a 76 49 65 4f 36 67 59 
0x0160(352) : 46 76 4c 6a 43 35 69 4f 43 6e 6a 4f 6c 79 58 65 
0x0170(368) : 65 67 78 4b 4c 78 30 76 71 4a 58 43 50 42 6b 66 
0x0180(384) : 35 33 4d 48 39 32 66 4c 70 4d 6b 5a 49 46 42 77 
0x0190(400) : 76 36 46 46 31 46 38 72 59 66 31 79 72 6c 62 77 
0x01a0(416) : 70 78 42 79 2e 72 48 6e 42 2d 4b 55 45 56 4f 38 
0x01b0(432) : 62 64 4e 63 74 56 52 50 38 53 4c 7a 43 77 74 2d 
0x01c0(448) : 73 33 78 71 75 43 62 33 43 77 58 51 50 77 59 2d 
0x01d0(464) : 58 76 62 4f 4f 31 6f 58 54 37 55 66 32 4d 65 75 
0x01e0(480) : 50 5a 69 48 6d 48 4b 79 42 73 4d 62 6d 76 61 48 
0x01f0(496) : 6f 39 67 42 41 53 69 65 5a 41 48 62 57 77 54 76 
0x0200(512) : 54 39 41 44 52 56 39 63 4c 57 42 35 50 6c 4d 42 
0x0210(528) : 76 30 4d 33 53 32 68 30 44 7a 62 6a 74 33 64 4b 
0x0220(544) : 43 6e 59 64 47 68 45 62 42 50 67 61 39 31 6d 32 
0x0230(560) : 31 36 35 55 39 6e 55 4d 6b 33 33 62 36 67 76 4a 
0x0240(576) : 53 52 77 69 37 38 49 49 59 79 74 68 7a 64 6a 2d 
0x0250(592) : 6a 6f 54 73 5a 78 43 48 2e 47 73 35 77 6d 4f 4d 
0x0260(608) : 42 49 33 49 52 4c 62 7a 48 53 65 46 33 4c 45 6d 
0x0270(624) : 37 68 64 68 63 70 79 61 33 70 66 2e 5a 31 4b 6b 
0x0280(640) : 4b 4e 31 6c 69 63 69 2e 32 4b 44 35 66 52 72 6d 
0x0290(656) : 36 53 52 69 47 4f 47 4a 42 77 48 6b 78 63 53 46 
0x02a0(672) : 7a 54 2e 67 33 67 65 35 2e 72 41 64 47 30 4f 4d 
0x02b0(688) : 53 70 32 69 42 49 30 4d 43 48 34 38 74 58 4e 72 
0x02c0(704) : 2e 4d 56 32 30 37 37 2d 79 49 63 43 49 2e 59 6b 
0x02d0(720) : 6f 61 52 7a 73 52 4b 33 69 4f 42 61 76 59 50 75 
0x02e0(736) : 75 75 77 76 2d 31 75 78 4a 55 37 62 54 66 4b 46 
0x02f0(752) : 44 6c 43 33 41 57 36 73 76 48 51 6f 71 70 67 69 
0x0300(768) : 68 61 62 67 63 54 62 76 79 69 56 50 4c 70 65 59 
0x0310(784) : 59 71 63 69 4c 69 59 45 2e 7a 30 6f 6d 68 55 53 
0x0320(800) : 46 34 36 72 58 69 6c 54 4f 45 73 6b 31 55 47 5a 
0x0330(816) : 4a 73 46 65 5a 6e 73 58 6b 73 4a 56 58 6e 78 6e 
0x0340(832) : 72 31 63 4e 6a 4c 71 36 5a 68 71 61 39 34 37 53 
0x0350(848) : 78 4d 34 55 38 77 2d 73 6e 49 4c 49 33 47 33 76 
0x0360(864) : 49 67 47 2d 2d 34 35 5a 6c 76 37 76 2e 46 4c 76 
0x0370(880) : 62 51 4e 6a 4b 4d 61 35 65 76 4f 68 41 52 61 53 
0x0380(896) : 35 71 52 35 76 58 65 65 51 6c 58 4f 2e 74 48 61 
0x0390(912) : 48 65 48 62 2e 72 68 63 6c 33 49 76 55 73 4c 61 
0x03a0(928) : 68 6d 66 61 48 48 43 69 30 6b 34 2d 62 4d 5a 73 
0x03b0(944) : 2e 71 52 7a 67 36 5a 50 39 72 49 65 69 64 43 4e 
0x03c0(960) : 4e 72 78 66 36 37 4c 36 72 50 35 51 6c 65 47 6b 
0x03d0(976) : 54 69 68 37 6f 45 57 79 34 6f 61 6d 50 6d 37 6d 
0x03e0(992) : 62 32 50 68 39 6b 6e 2d 38 74 50 74 56 67 62 79 
0x03f0(1008) : 4d 47 33 38 56 5a 34 5a 4c 65 4a 6b 4f 51 56 7a 
0x0400(1024) : 53 75 65 62 64 51 61 6c 48 2e 63 6d 65 43 6a 2e 
0x0410(1040) : 53 6d 36 78 4b 42 55 66 70 6e 4f 43 42 74 39 64 
0x0420(1056) : 6c 6f 44 4d 43 6e 35 54 6c 69 44 4e 75 77 4c 4b 
0x0430(1072) : 68 53 47 2d 64 6b 65 51 57 30 63 68 74 6d 4a 64 
0x0440(1088) : 59 57 7a 6b 48 33 42 31 6c 4f 4f 64 4a 6b 78 2e 
0x0450(1104) : 41 42 7a 6e 77 62 42 51 63 6f 35 54 59 4f 34 34 
0x0460(1120) : 75 32 6f 41 35 7a 42 71 4c 5a 52 65 48 4d 63 52 
0x0470(1136) : 59 5a 43 53 39 4f 73 6c 41 78 43 69 4b 48 6d 43 
0x0480(1152) : 4a 0d 0a 
initial input and inout tuples:
	control = (
		offset = 0x0000(0)
		virtual_offset = 0x0000(0)
		section = 0x0(0)
		activeBank = 0x0(0)
		done = 0x0(0)
		error = 0x0(0)
	)
clear internal and output-only tuples
	hdr = (
		eth = (
		isValid = 0x0(0)
		dst = 0x000000000000(0)
		src = 0x000000000000(0)
		type = 0x0000(0)
	)
		fec = (
		isValid = 0x0(0)
		traffic_class = 0x0(0)
		block_index = 0x00(0)
		packet_index = 0x00(0)
		original_type = 0x0000(0)
	)
		ipv4 = (
		isValid = 0x0(0)
		version = 0x0(0)
		ihl = 0x0(0)
		diffserv = 0x00(0)
		totallen = 0x0000(0)
		identification = 0x0000(0)
		flags = 0x0(0)
		fragoffset = 0x0000(0)
		ttl = 0x00(0)
		protocol = 0x00(0)
		hdrchecksum = 0x0000(0)
		srcAddr = 0x00000000(0)
		dstAddr = 0x00000000(0)
	)
		udp = (
		isValid = 0x0(0)
		sport = 0x0000(0)
		dport = 0x0000(0)
		len = 0x0000(0)
		chksum = 0x0000(0)
	)
	)
	Parser_extracts = (
		size = 0x00000000(0)
	)
processing section start in stage 1
-------------------------------------------------------------------
Section start starting

	extracting 112 bits at offset 0x0000(0)
		dst_0 = 0x000000000000(0)
		src_0 = 0x000000000000(0)
		type_0 = 0x0800(2048)

	method update (tuples)
		hdr.eth.isValid = 0x1(1)
		hdr.eth.dst = 0x000000000000(0)
		hdr.eth.src = 0x000000000000(0)
		hdr.eth.type = 0x0800(2048)
		Parser_extracts.size = 0x00000070(112)


	method move_to_section = parse_ipv4

updated tuples:
	control = (
		offset = 0x0070(112)
		virtual_offset = 0x0070(112)
		section = 0x2(2)
		activeBank = 0x0(0)
		done = 0x0(0)
		error = 0x0(0)
	)
	hdr = (
		eth = (
		isValid = 0x1(1)
		dst = 0x000000000000(0)
		src = 0x000000000000(0)
		type = 0x0800(2048)
	)
		fec = (
		isValid = 0x0(0)
		traffic_class = 0x0(0)
		block_index = 0x00(0)
		packet_index = 0x00(0)
		original_type = 0x0000(0)
	)
		ipv4 = (
		isValid = 0x0(0)
		version = 0x0(0)
		ihl = 0x0(0)
		diffserv = 0x00(0)
		totallen = 0x0000(0)
		identification = 0x0000(0)
		flags = 0x0(0)
		fragoffset = 0x0000(0)
		ttl = 0x00(0)
		protocol = 0x00(0)
		hdrchecksum = 0x0000(0)
		srcAddr = 0x00000000(0)
		dstAddr = 0x00000000(0)
	)
		udp = (
		isValid = 0x0(0)
		sport = 0x0000(0)
		dport = 0x0000(0)
		len = 0x0000(0)
		chksum = 0x0000(0)
	)
	)
	Parser_extracts = (
		size = 0x00000070(112)
	)
Section start finished
-------------------------------------------------------------------
processing section parse_ipv4 in stage 2
-------------------------------------------------------------------
Section parse_ipv4 starting

	extracting 160 bits at offset 0x0070(112)
		version_0 = 0x4(4)
		ihl_0 = 0x5(5)
		diffserv_0 = 0x00(0)
		totallen_0 = 0x0475(1141)
		identification_0 = 0x76dc(30428)
		flags_0 = 0x2(2)
		fragoffset_0 = 0x0000(0)
		ttl_0 = 0x40(64)
		protocol_0 = 0x11(17)
		hdrchecksum_0 = 0xc199(49561)
		srcAddr_0 = 0x7f000001(2130706433)
		dstAddr_0 = 0x7f000001(2130706433)

	method update (tuples)
		hdr.ipv4.isValid = 0x1(1)
		hdr.ipv4.version = 0x4(4)
		hdr.ipv4.ihl = 0x5(5)
		hdr.ipv4.diffserv = 0x00(0)
		hdr.ipv4.totallen = 0x0475(1141)
		hdr.ipv4.identification = 0x76dc(30428)
		hdr.ipv4.flags = 0x2(2)
		hdr.ipv4.fragoffset = 0x0000(0)
		hdr.ipv4.ttl = 0x40(64)
		hdr.ipv4.protocol = 0x11(17)
		hdr.ipv4.hdrchecksum = 0xc199(49561)
		hdr.ipv4.srcAddr = 0x7f000001(2130706433)
		hdr.ipv4.dstAddr = 0x7f000001(2130706433)
		Parser_extracts.size = 0x00000110(272)


	method move_to_section = parse_udp

updated tuples:
	control = (
		offset = 0x0110(272)
		virtual_offset = 0x0110(272)
		section = 0x3(3)
		activeBank = 0x0(0)
		done = 0x0(0)
		error = 0x0(0)
	)
	hdr = (
		eth = (
		isValid = 0x1(1)
		dst = 0x000000000000(0)
		src = 0x000000000000(0)
		type = 0x0800(2048)
	)
		fec = (
		isValid = 0x0(0)
		traffic_class = 0x0(0)
		block_index = 0x00(0)
		packet_index = 0x00(0)
		original_type = 0x0000(0)
	)
		ipv4 = (
		isValid = 0x1(1)
		version = 0x4(4)
		ihl = 0x5(5)
		diffserv = 0x00(0)
		totallen = 0x0475(1141)
		identification = 0x76dc(30428)
		flags = 0x2(2)
		fragoffset = 0x0000(0)
		ttl = 0x40(64)
		protocol = 0x11(17)
		hdrchecksum = 0xc199(49561)
		srcAddr = 0x7f000001(2130706433)
		dstAddr = 0x7f000001(2130706433)
	)
		udp = (
		isValid = 0x0(0)
		sport = 0x0000(0)
		dport = 0x0000(0)
		len = 0x0000(0)
		chksum = 0x0000(0)
	)
	)
	Parser_extracts = (
		size = 0x00000110(272)
	)
Section parse_ipv4 finished
-------------------------------------------------------------------
processing section parse_udp in stage 3
-------------------------------------------------------------------
Section parse_udp starting

	extracting 64 bits at offset 0x0110(272)
		sport_0 = 0xa9d3(43475)
		dport_0 = 0x2bcb(11211)
		len_0 = 0x0461(1121)
		chksum_0 = 0x0275(629)

	method update (tuples)
		hdr.udp.isValid = 0x1(1)
		hdr.udp.sport = 0xa9d3(43475)
		hdr.udp.dport = 0x2bcb(11211)
		hdr.udp.len = 0x0461(1121)
		hdr.udp.chksum = 0x0275(629)
		Parser_extracts.size = 0x00000150(336)


	method move_to_section = accept

updated tuples:
	control = (
		offset = 0x0150(336)
		virtual_offset = 0x0150(336)
		section = 0x4(4)
		activeBank = 0x0(0)
		done = 0x0(0)
		error = 0x0(0)
	)
	hdr = (
		eth = (
		isValid = 0x1(1)
		dst = 0x000000000000(0)
		src = 0x000000000000(0)
		type = 0x0800(2048)
	)
		fec = (
		isValid = 0x0(0)
		traffic_class = 0x0(0)
		block_index = 0x00(0)
		packet_index = 0x00(0)
		original_type = 0x0000(0)
	)
		ipv4 = (
		isValid = 0x1(1)
		version = 0x4(4)
		ihl = 0x5(5)
		diffserv = 0x00(0)
		totallen = 0x0475(1141)
		identification = 0x76dc(30428)
		flags = 0x2(2)
		fragoffset = 0x0000(0)
		ttl = 0x40(64)
		protocol = 0x11(17)
		hdrchecksum = 0xc199(49561)
		srcAddr = 0x7f000001(2130706433)
		dstAddr = 0x7f000001(2130706433)
	)
		udp = (
		isValid = 0x1(1)
		sport = 0xa9d3(43475)
		dport = 0x2bcb(11211)
		len = 0x0461(1121)
		chksum = 0x0275(629)
	)
	)
	Parser_extracts = (
		size = 0x00000150(336)
	)
Section parse_udp finished
-------------------------------------------------------------------
processing section accept in stage 4
-------------------------------------------------------------------
Section accept starting


	method move_to_section = done(0)

updated tuples:
	control = (
		offset = 0x0150(336)
		virtual_offset = 0x0150(336)
		section = 0x0(0)
		activeBank = 0x0(0)
		done = 0x1(1)
		error = 0x0(0)
	)
	hdr = (
		eth = (
		isValid = 0x1(1)
		dst = 0x000000000000(0)
		src = 0x000000000000(0)
		type = 0x0800(2048)
	)
		fec = (
		isValid = 0x0(0)
		traffic_class = 0x0(0)
		block_index = 0x00(0)
		packet_index = 0x00(0)
		original_type = 0x0000(0)
	)
		ipv4 = (
		isValid = 0x1(1)
		version = 0x4(4)
		ihl = 0x5(5)
		diffserv = 0x00(0)
		totallen = 0x0475(1141)
		identification = 0x76dc(30428)
		flags = 0x2(2)
		fragoffset = 0x0000(0)
		ttl = 0x40(64)
		protocol = 0x11(17)
		hdrchecksum = 0xc199(49561)
		srcAddr = 0x7f000001(2130706433)
		dstAddr = 0x7f000001(2130706433)
	)
		udp = (
		isValid = 0x1(1)
		sport = 0xa9d3(43475)
		dport = 0x2bcb(11211)
		len = 0x0461(1121)
		chksum = 0x0275(629)
	)
	)
	Parser_extracts = (
		size = 0x00000150(336)
	)
Section accept finished
-------------------------------------------------------------------
final inout and output tuples:

Note: this engine's wrapper will clear the upper control tuple fields on output, except for the 'control.error' field.

	control = (
		offset = 0x0000(0)
		virtual_offset = 0x0000(0)
		section = 0x0(0)
		activeBank = 0x0(0)
		done = 0x0(0)
		error = 0x0(0)
	)
	hdr = (
		eth = (
		isValid = 0x1(1)
		dst = 0x000000000000(0)
		src = 0x000000000000(0)
		type = 0x0800(2048)
	)
		fec = (
		isValid = 0x0(0)
		traffic_class = 0x0(0)
		block_index = 0x00(0)
		packet_index = 0x00(0)
		original_type = 0x0000(0)
	)
		ipv4 = (
		isValid = 0x1(1)
		version = 0x4(4)
		ihl = 0x5(5)
		diffserv = 0x00(0)
		totallen = 0x0475(1141)
		identification = 0x76dc(30428)
		flags = 0x2(2)
		fragoffset = 0x0000(0)
		ttl = 0x40(64)
		protocol = 0x11(17)
		hdrchecksum = 0xc199(49561)
		srcAddr = 0x7f000001(2130706433)
		dstAddr = 0x7f000001(2130706433)
	)
		udp = (
		isValid = 0x1(1)
		sport = 0xa9d3(43475)
		dport = 0x2bcb(11211)
		len = 0x0461(1121)
		chksum = 0x0275(629)
	)
	)
	Parser_extracts = (
		size = 0x00000150(336)
	)
Exiting engine Parser
===================================================================
===================================================================
Entering engine CheckCache_lvl
input packet (0 bytes)
initial input and inout tuples:
	hdr = (
		eth = (
		isValid = 0x1(1)
		dst = 0x000000000000(0)
		src = 0x000000000000(0)
		type = 0x0800(2048)
	)
		fec = (
		isValid = 0x0(0)
		traffic_class = 0x0(0)
		block_index = 0x00(0)
		packet_index = 0x00(0)
		original_type = 0x0000(0)
	)
		ipv4 = (
		isValid = 0x1(1)
		version = 0x4(4)
		ihl = 0x5(5)
		diffserv = 0x00(0)
		totallen = 0x0475(1141)
		identification = 0x76dc(30428)
		flags = 0x2(2)
		fragoffset = 0x0000(0)
		ttl = 0x40(64)
		protocol = 0x11(17)
		hdrchecksum = 0xc199(49561)
		srcAddr = 0x7f000001(2130706433)
		dstAddr = 0x7f000001(2130706433)
	)
		udp = (
		isValid = 0x1(1)
		sport = 0xa9d3(43475)
		dport = 0x2bcb(11211)
		len = 0x0461(1121)
		chksum = 0x0275(629)
	)
	)
	ioports = (
		ingress_port = 0x0(0)
		egress_port = 0x0(0)
	)
clear internal and output-only tuples
	control = (
		offset = 0x0000(0)
		virtual_offset = 0x0000(0)
		section = 0x0(0)
		activeBank = 0x0(0)
		done = 0x0(0)
		error = 0x0(0)
	)
	CheckCache_fl = (
		forward_1 = 0x0(0)
	)
	local_state = (
		id = 0x0000(0)
	)
processing section setup in stage 1
-------------------------------------------------------------------
Section setup starting


	method move_to_section = done(0)

updated tuples:
	control = (
		offset = 0x0000(0)
		virtual_offset = 0x0000(0)
		section = 0x0(0)
		activeBank = 0x0(0)
		done = 0x1(1)
		error = 0x0(0)
	)
	CheckCache_fl = (
		forward_1 = 0x0(0)
	)
	hdr = (
		eth = (
		isValid = 0x1(1)
		dst = 0x000000000000(0)
		src = 0x000000000000(0)
		type = 0x0800(2048)
	)
		fec = (
		isValid = 0x0(0)
		traffic_class = 0x0(0)
		block_index = 0x00(0)
		packet_index = 0x00(0)
		original_type = 0x0000(0)
	)
		ipv4 = (
		isValid = 0x1(1)
		version = 0x4(4)
		ihl = 0x5(5)
		diffserv = 0x00(0)
		totallen = 0x0475(1141)
		identification = 0x76dc(30428)
		flags = 0x2(2)
		fragoffset = 0x0000(0)
		ttl = 0x40(64)
		protocol = 0x11(17)
		hdrchecksum = 0xc199(49561)
		srcAddr = 0x7f000001(2130706433)
		dstAddr = 0x7f000001(2130706433)
	)
		udp = (
		isValid = 0x1(1)
		sport = 0xa9d3(43475)
		dport = 0x2bcb(11211)
		len = 0x0461(1121)
		chksum = 0x0275(629)
	)
	)
	ioports = (
		ingress_port = 0x0(0)
		egress_port = 0x0(0)
	)
	local_state = (
		id = 0x0000(0)
	)
Section setup finished
-------------------------------------------------------------------
final inout and output tuples:

Note: this engine's wrapper will clear the upper control tuple fields on output, except for the 'control.error' field.

	CheckCache_fl = (
		forward_1 = 0x0(0)
	)
	hdr = (
		eth = (
		isValid = 0x1(1)
		dst = 0x000000000000(0)
		src = 0x000000000000(0)
		type = 0x0800(2048)
	)
		fec = (
		isValid = 0x0(0)
		traffic_class = 0x0(0)
		block_index = 0x00(0)
		packet_index = 0x00(0)
		original_type = 0x0000(0)
	)
		ipv4 = (
		isValid = 0x1(1)
		version = 0x4(4)
		ihl = 0x5(5)
		diffserv = 0x00(0)
		totallen = 0x0475(1141)
		identification = 0x76dc(30428)
		flags = 0x2(2)
		fragoffset = 0x0000(0)
		ttl = 0x40(64)
		protocol = 0x11(17)
		hdrchecksum = 0xc199(49561)
		srcAddr = 0x7f000001(2130706433)
		dstAddr = 0x7f000001(2130706433)
	)
		udp = (
		isValid = 0x1(1)
		sport = 0xa9d3(43475)
		dport = 0x2bcb(11211)
		len = 0x0461(1121)
		chksum = 0x0275(629)
	)
	)
	ioports = (
		ingress_port = 0x0(0)
		egress_port = 0x0(0)
	)
	local_state = (
		id = 0x0000(0)
	)
Exiting engine CheckCache_lvl
===================================================================
===================================================================
Entering engine CheckCache_lvl_0
input packet (0 bytes)
initial input and inout tuples:
	CheckCache_fl = (
		forward_1 = 0x0(0)
	)
	hdr = (
		eth = (
		isValid = 0x1(1)
		dst = 0x000000000000(0)
		src = 0x000000000000(0)
		type = 0x0800(2048)
	)
		fec = (
		isValid = 0x0(0)
		traffic_class = 0x0(0)
		block_index = 0x00(0)
		packet_index = 0x00(0)
		original_type = 0x0000(0)
	)
		ipv4 = (
		isValid = 0x1(1)
		version = 0x4(4)
		ihl = 0x5(5)
		diffserv = 0x00(0)
		totallen = 0x0475(1141)
		identification = 0x76dc(30428)
		flags = 0x2(2)
		fragoffset = 0x0000(0)
		ttl = 0x40(64)
		protocol = 0x11(17)
		hdrchecksum = 0xc199(49561)
		srcAddr = 0x7f000001(2130706433)
		dstAddr = 0x7f000001(2130706433)
	)
		udp = (
		isValid = 0x1(1)
		sport = 0xa9d3(43475)
		dport = 0x2bcb(11211)
		len = 0x0461(1121)
		chksum = 0x0275(629)
	)
	)
	ioports = (
		ingress_port = 0x0(0)
		egress_port = 0x0(0)
	)
	local_state = (
		id = 0x0000(0)
	)
clear internal and output-only tuples
	control = (
		offset = 0x0000(0)
		virtual_offset = 0x0000(0)
		section = 0x0(0)
		activeBank = 0x0(0)
		done = 0x0(0)
		error = 0x0(0)
	)
	memcached_input = (
		stateful_valid = 0x0(0)
	)
processing section condition_sec_0 in stage 1
-------------------------------------------------------------------
Section condition_sec_0 starting

	method update (tuples)
		local_state.id = 0x0005(5)


	method move_to_section = condition_sec

updated tuples:
	control = (
		offset = 0x0000(0)
		virtual_offset = 0x0000(0)
		section = 0x2(2)
		activeBank = 0x0(0)
		done = 0x0(0)
		error = 0x0(0)
	)
	CheckCache_fl = (
		forward_1 = 0x0(0)
	)
	hdr = (
		eth = (
		isValid = 0x1(1)
		dst = 0x000000000000(0)
		src = 0x000000000000(0)
		type = 0x0800(2048)
	)
		fec = (
		isValid = 0x0(0)
		traffic_class = 0x0(0)
		block_index = 0x00(0)
		packet_index = 0x00(0)
		original_type = 0x0000(0)
	)
		ipv4 = (
		isValid = 0x1(1)
		version = 0x4(4)
		ihl = 0x5(5)
		diffserv = 0x00(0)
		totallen = 0x0475(1141)
		identification = 0x76dc(30428)
		flags = 0x2(2)
		fragoffset = 0x0000(0)
		ttl = 0x40(64)
		protocol = 0x11(17)
		hdrchecksum = 0xc199(49561)
		srcAddr = 0x7f000001(2130706433)
		dstAddr = 0x7f000001(2130706433)
	)
		udp = (
		isValid = 0x1(1)
		sport = 0xa9d3(43475)
		dport = 0x2bcb(11211)
		len = 0x0461(1121)
		chksum = 0x0275(629)
	)
	)
	ioports = (
		ingress_port = 0x0(0)
		egress_port = 0x0(0)
	)
	local_state = (
		id = 0x0005(5)
	)
	memcached_input = (
		stateful_valid = 0x0(0)
	)
Section condition_sec_0 finished
-------------------------------------------------------------------
processing section condition_sec in stage 2
-------------------------------------------------------------------
Section condition_sec starting

	method update (tuples)
		local_state.id = 0x0005(5)


	method move_to_section = act_0_sec

updated tuples:
	control = (
		offset = 0x0000(0)
		virtual_offset = 0x0000(0)
		section = 0x1(1)
		activeBank = 0x0(0)
		done = 0x0(0)
		error = 0x0(0)
	)
	CheckCache_fl = (
		forward_1 = 0x0(0)
	)
	hdr = (
		eth = (
		isValid = 0x1(1)
		dst = 0x000000000000(0)
		src = 0x000000000000(0)
		type = 0x0800(2048)
	)
		fec = (
		isValid = 0x0(0)
		traffic_class = 0x0(0)
		block_index = 0x00(0)
		packet_index = 0x00(0)
		original_type = 0x0000(0)
	)
		ipv4 = (
		isValid = 0x1(1)
		version = 0x4(4)
		ihl = 0x5(5)
		diffserv = 0x00(0)
		totallen = 0x0475(1141)
		identification = 0x76dc(30428)
		flags = 0x2(2)
		fragoffset = 0x0000(0)
		ttl = 0x40(64)
		protocol = 0x11(17)
		hdrchecksum = 0xc199(49561)
		srcAddr = 0x7f000001(2130706433)
		dstAddr = 0x7f000001(2130706433)
	)
		udp = (
		isValid = 0x1(1)
		sport = 0xa9d3(43475)
		dport = 0x2bcb(11211)
		len = 0x0461(1121)
		chksum = 0x0275(629)
	)
	)
	ioports = (
		ingress_port = 0x0(0)
		egress_port = 0x0(0)
	)
	local_state = (
		id = 0x0005(5)
	)
	memcached_input = (
		stateful_valid = 0x0(0)
	)
Section condition_sec finished
-------------------------------------------------------------------
processing section act_0_sec in stage 3
-------------------------------------------------------------------
Section act_0_sec starting

	method update (tuples)
		memcached_input.stateful_valid = 0x1(1)
		local_state.id = 0x0004(4)


	method move_to_section = local_end

updated tuples:
	control = (
		offset = 0x0000(0)
		virtual_offset = 0x0000(0)
		section = 0x4(4)
		activeBank = 0x0(0)
		done = 0x0(0)
		error = 0x0(0)
	)
	CheckCache_fl = (
		forward_1 = 0x0(0)
	)
	hdr = (
		eth = (
		isValid = 0x1(1)
		dst = 0x000000000000(0)
		src = 0x000000000000(0)
		type = 0x0800(2048)
	)
		fec = (
		isValid = 0x0(0)
		traffic_class = 0x0(0)
		block_index = 0x00(0)
		packet_index = 0x00(0)
		original_type = 0x0000(0)
	)
		ipv4 = (
		isValid = 0x1(1)
		version = 0x4(4)
		ihl = 0x5(5)
		diffserv = 0x00(0)
		totallen = 0x0475(1141)
		identification = 0x76dc(30428)
		flags = 0x2(2)
		fragoffset = 0x0000(0)
		ttl = 0x40(64)
		protocol = 0x11(17)
		hdrchecksum = 0xc199(49561)
		srcAddr = 0x7f000001(2130706433)
		dstAddr = 0x7f000001(2130706433)
	)
		udp = (
		isValid = 0x1(1)
		sport = 0xa9d3(43475)
		dport = 0x2bcb(11211)
		len = 0x0461(1121)
		chksum = 0x0275(629)
	)
	)
	ioports = (
		ingress_port = 0x0(0)
		egress_port = 0x0(0)
	)
	local_state = (
		id = 0x0004(4)
	)
	memcached_input = (
		stateful_valid = 0x1(1)
	)
Section act_0_sec finished
-------------------------------------------------------------------
processing section local_end in stage 4
-------------------------------------------------------------------
Section local_end starting


	method move_to_section = done(0)

updated tuples:
	control = (
		offset = 0x0000(0)
		virtual_offset = 0x0000(0)
		section = 0x0(0)
		activeBank = 0x0(0)
		done = 0x1(1)
		error = 0x0(0)
	)
	CheckCache_fl = (
		forward_1 = 0x0(0)
	)
	hdr = (
		eth = (
		isValid = 0x1(1)
		dst = 0x000000000000(0)
		src = 0x000000000000(0)
		type = 0x0800(2048)
	)
		fec = (
		isValid = 0x0(0)
		traffic_class = 0x0(0)
		block_index = 0x00(0)
		packet_index = 0x00(0)
		original_type = 0x0000(0)
	)
		ipv4 = (
		isValid = 0x1(1)
		version = 0x4(4)
		ihl = 0x5(5)
		diffserv = 0x00(0)
		totallen = 0x0475(1141)
		identification = 0x76dc(30428)
		flags = 0x2(2)
		fragoffset = 0x0000(0)
		ttl = 0x40(64)
		protocol = 0x11(17)
		hdrchecksum = 0xc199(49561)
		srcAddr = 0x7f000001(2130706433)
		dstAddr = 0x7f000001(2130706433)
	)
		udp = (
		isValid = 0x1(1)
		sport = 0xa9d3(43475)
		dport = 0x2bcb(11211)
		len = 0x0461(1121)
		chksum = 0x0275(629)
	)
	)
	ioports = (
		ingress_port = 0x0(0)
		egress_port = 0x0(0)
	)
	local_state = (
		id = 0x0004(4)
	)
	memcached_input = (
		stateful_valid = 0x1(1)
	)
Section local_end finished
-------------------------------------------------------------------
final inout and output tuples:

Note: this engine's wrapper will clear the upper control tuple fields on output, except for the 'control.error' field.

	CheckCache_fl = (
		forward_1 = 0x0(0)
	)
	hdr = (
		eth = (
		isValid = 0x1(1)
		dst = 0x000000000000(0)
		src = 0x000000000000(0)
		type = 0x0800(2048)
	)
		fec = (
		isValid = 0x0(0)
		traffic_class = 0x0(0)
		block_index = 0x00(0)
		packet_index = 0x00(0)
		original_type = 0x0000(0)
	)
		ipv4 = (
		isValid = 0x1(1)
		version = 0x4(4)
		ihl = 0x5(5)
		diffserv = 0x00(0)
		totallen = 0x0475(1141)
		identification = 0x76dc(30428)
		flags = 0x2(2)
		fragoffset = 0x0000(0)
		ttl = 0x40(64)
		protocol = 0x11(17)
		hdrchecksum = 0xc199(49561)
		srcAddr = 0x7f000001(2130706433)
		dstAddr = 0x7f000001(2130706433)
	)
		udp = (
		isValid = 0x1(1)
		sport = 0xa9d3(43475)
		dport = 0x2bcb(11211)
		len = 0x0461(1121)
		chksum = 0x0275(629)
	)
	)
	ioports = (
		ingress_port = 0x0(0)
		egress_port = 0x0(0)
	)
	local_state = (
		id = 0x0004(4)
	)
	memcached_input = (
		stateful_valid = 0x1(1)
	)
Exiting engine CheckCache_lvl_0
===================================================================
===================================================================
Entering engine memcached_0
input packet (1155 bytes)
 0x0000(0) : 00 00 00 00 00 00 00 00 00 00 00 00 08 00 45 00 
0x0010(16) : 04 75 76 dc 40 00 40 11 c1 99 7f 00 00 01 7f 00 
0x0020(32) : 00 01 a9 d3 2b cb 04 61 02 75 00 02 00 00 00 01 
0x0030(48) : 01 00 73 65 74 20 11 10 10 10 10 10 10 10 49 4f 
0x0040(64) : 6a 53 2e 45 6d 4b 45 34 6d 4d 36 7a 6c 30 65 61 
0x0050(80) : 64 63 72 67 65 6e 34 68 77 6a 49 30 73 61 50 5a 
0x0060(96) : 30 4e 6f 6d 68 30 72 52 4e 78 50 36 79 31 67 5a 
0x0070(112) : 64 56 45 46 48 49 20 30 20 30 20 31 30 32 34 0d 
0x0080(128) : 0a 49 4f 6a 53 2e 45 6d 4b 45 34 6d 4d 36 7a 6c 
0x0090(144) : 30 65 61 64 63 72 67 65 6e 34 68 77 6a 49 30 73 
0x00a0(160) : 61 50 5a 30 4e 6f 6d 68 30 72 52 4e 78 50 36 79 
0x00b0(176) : 31 67 5a 64 56 45 46 48 49 78 42 2d 44 42 72 6e 
0x00c0(192) : 61 50 6f 78 42 59 64 42 4e 32 59 4a 52 66 46 53 
0x00d0(208) : 4a 6f 33 70 30 4a 34 49 45 46 49 52 51 37 43 2d 
0x00e0(224) : 57 2e 77 68 58 58 74 75 61 50 42 2d 32 51 53 4d 
0x00f0(240) : 44 56 39 44 6f 44 57 30 53 6f 52 73 76 65 72 51 
0x0100(256) : 63 6d 35 37 48 79 30 72 4d 42 72 4f 63 48 6b 70 
0x0110(272) : 6d 74 30 5a 34 57 5a 57 49 2d 4e 43 64 43 63 44 
0x0120(288) : 79 68 4c 45 65 4c 33 2e 57 75 4d 36 39 35 76 77 
0x0130(304) : 79 77 54 31 51 30 58 6a 2d 75 76 63 35 56 71 31 
0x0140(320) : 41 39 46 6f 55 4a 6d 2e 42 37 35 4c 43 2e 46 38 
0x0150(336) : 75 69 39 4a 69 68 30 69 5a 76 49 65 4f 36 67 59 
0x0160(352) : 46 76 4c 6a 43 35 69 4f 43 6e 6a 4f 6c 79 58 65 
0x0170(368) : 65 67 78 4b 4c 78 30 76 71 4a 58 43 50 42 6b 66 
0x0180(384) : 35 33 4d 48 39 32 66 4c 70 4d 6b 5a 49 46 42 77 
0x0190(400) : 76 36 46 46 31 46 38 72 59 66 31 79 72 6c 62 77 
0x01a0(416) : 70 78 42 79 2e 72 48 6e 42 2d 4b 55 45 56 4f 38 
0x01b0(432) : 62 64 4e 63 74 56 52 50 38 53 4c 7a 43 77 74 2d 
0x01c0(448) : 73 33 78 71 75 43 62 33 43 77 58 51 50 77 59 2d 
0x01d0(464) : 58 76 62 4f 4f 31 6f 58 54 37 55 66 32 4d 65 75 
0x01e0(480) : 50 5a 69 48 6d 48 4b 79 42 73 4d 62 6d 76 61 48 
0x01f0(496) : 6f 39 67 42 41 53 69 65 5a 41 48 62 57 77 54 76 
0x0200(512) : 54 39 41 44 52 56 39 63 4c 57 42 35 50 6c 4d 42 
0x0210(528) : 76 30 4d 33 53 32 68 30 44 7a 62 6a 74 33 64 4b 
0x0220(544) : 43 6e 59 64 47 68 45 62 42 50 67 61 39 31 6d 32 
0x0230(560) : 31 36 35 55 39 6e 55 4d 6b 33 33 62 36 67 76 4a 
0x0240(576) : 53 52 77 69 37 38 49 49 59 79 74 68 7a 64 6a 2d 
0x0250(592) : 6a 6f 54 73 5a 78 43 48 2e 47 73 35 77 6d 4f 4d 
0x0260(608) : 42 49 33 49 52 4c 62 7a 48 53 65 46 33 4c 45 6d 
0x0270(624) : 37 68 64 68 63 70 79 61 33 70 66 2e 5a 31 4b 6b 
0x0280(640) : 4b 4e 31 6c 69 63 69 2e 32 4b 44 35 66 52 72 6d 
0x0290(656) : 36 53 52 69 47 4f 47 4a 42 77 48 6b 78 63 53 46 
0x02a0(672) : 7a 54 2e 67 33 67 65 35 2e 72 41 64 47 30 4f 4d 
0x02b0(688) : 53 70 32 69 42 49 30 4d 43 48 34 38 74 58 4e 72 
0x02c0(704) : 2e 4d 56 32 30 37 37 2d 79 49 63 43 49 2e 59 6b 
0x02d0(720) : 6f 61 52 7a 73 52 4b 33 69 4f 42 61 76 59 50 75 
0x02e0(736) : 75 75 77 76 2d 31 75 78 4a 55 37 62 54 66 4b 46 
0x02f0(752) : 44 6c 43 33 41 57 36 73 76 48 51 6f 71 70 67 69 
0x0300(768) : 68 61 62 67 63 54 62 76 79 69 56 50 4c 70 65 59 
0x0310(784) : 59 71 63 69 4c 69 59 45 2e 7a 30 6f 6d 68 55 53 
0x0320(800) : 46 34 36 72 58 69 6c 54 4f 45 73 6b 31 55 47 5a 
0x0330(816) : 4a 73 46 65 5a 6e 73 58 6b 73 4a 56 58 6e 78 6e 
0x0340(832) : 72 31 63 4e 6a 4c 71 36 5a 68 71 61 39 34 37 53 
0x0350(848) : 78 4d 34 55 38 77 2d 73 6e 49 4c 49 33 47 33 76 
0x0360(864) : 49 67 47 2d 2d 34 35 5a 6c 76 37 76 2e 46 4c 76 
0x0370(880) : 62 51 4e 6a 4b 4d 61 35 65 76 4f 68 41 52 61 53 
0x0380(896) : 35 71 52 35 76 58 65 65 51 6c 58 4f 2e 74 48 61 
0x0390(912) : 48 65 48 62 2e 72 68 63 6c 33 49 76 55 73 4c 61 
0x03a0(928) : 68 6d 66 61 48 48 43 69 30 6b 34 2d 62 4d 5a 73 
0x03b0(944) : 2e 71 52 7a 67 36 5a 50 39 72 49 65 69 64 43 4e 
0x03c0(960) : 4e 72 78 66 36 37 4c 36 72 50 35 51 6c 65 47 6b 
0x03d0(976) : 54 69 68 37 6f 45 57 79 34 6f 61 6d 50 6d 37 6d 
0x03e0(992) : 62 32 50 68 39 6b 6e 2d 38 74 50 74 56 67 62 79 
0x03f0(1008) : 4d 47 33 38 56 5a 34 5a 4c 65 4a 6b 4f 51 56 7a 
0x0400(1024) : 53 75 65 62 64 51 61 6c 48 2e 63 6d 65 43 6a 2e 
0x0410(1040) : 53 6d 36 78 4b 42 55 66 70 6e 4f 43 42 74 39 64 
0x0420(1056) : 6c 6f 44 4d 43 6e 35 54 6c 69 44 4e 75 77 4c 4b 
0x0430(1072) : 68 53 47 2d 64 6b 65 51 57 30 63 68 74 6d 4a 64 
0x0440(1088) : 59 57 7a 6b 48 33 42 31 6c 4f 4f 64 4a 6b 78 2e 
0x0450(1104) : 41 42 7a 6e 77 62 42 51 63 6f 35 54 59 4f 34 34 
0x0460(1120) : 75 32 6f 41 35 7a 42 71 4c 5a 52 65 48 4d 63 52 
0x0470(1136) : 59 5a 43 53 39 4f 73 6c 41 78 43 69 4b 48 6d 43 
0x0480(1152) : 4a 0d 0a 
initial input and inout tuples:
	control = (
		offset = 0x0000(0)
		virtual_offset = 0x0000(0)
		section = 0x0(0)
		activeBank = 0x0(0)
		done = 0x0(0)
		error = 0x0(0)
	)
	CheckCache_fl = (
		forward_1 = 0x0(0)
	)
	hdr = (
		eth = (
		isValid = 0x1(1)
		dst = 0x000000000000(0)
		src = 0x000000000000(0)
		type = 0x0800(2048)
	)
		fec = (
		isValid = 0x0(0)
		traffic_class = 0x0(0)
		block_index = 0x00(0)
		packet_index = 0x00(0)
		original_type = 0x0000(0)
	)
		ipv4 = (
		isValid = 0x1(1)
		version = 0x4(4)
		ihl = 0x5(5)
		diffserv = 0x00(0)
		totallen = 0x0475(1141)
		identification = 0x76dc(30428)
		flags = 0x2(2)
		fragoffset = 0x0000(0)
		ttl = 0x40(64)
		protocol = 0x11(17)
		hdrchecksum = 0xc199(49561)
		srcAddr = 0x7f000001(2130706433)
		dstAddr = 0x7f000001(2130706433)
	)
		udp = (
		isValid = 0x1(1)
		sport = 0xa9d3(43475)
		dport = 0x2bcb(11211)
		len = 0x0461(1121)
		chksum = 0x0275(629)
	)
	)
	ioports = (
		ingress_port = 0x0(0)
		egress_port = 0x0(0)
	)
	local_state = (
		id = 0x0004(4)
	)
	Parser_extracts = (
		size = 0x00000150(336)
	)
	memcached_input = (
		stateful_valid = 0x1(1)
	)
clear internal and output-only tuples
	memcached_output = (
		forward = 0x0(0)
	)
Enter USER ENGINE FUNCTION
0
134235392
321293636765499409
13950320958733647616
468199414629473
177047768940937217
72184473615077648
1157442765409241423
7661518266808616244
7876011222769886561
7233751214896067688
8604770510487769178
3480842077694095954
5654357527055394650
7230042419952689200
2319389203729888269
741210931759826285
5423798970289125996
3487300570261383013
7941086905054605427
7012203783336717672
3490943158145005177
3559913417450276424
5294054124160184942
7012227182115775554
5634664259538798163
5363562238161073225
4991757854885495597
6282089820270916725
7012177381701014349
4924186208663525168
6012114683423978065
7164441093771702386
5567137774677027696
7886982011415910999
5272956790072632132
8748326137103135534
6302028148858254967
8752556971610101866
3275654472450601265
4699865130124078382
4771340931883222584
8460356366750986345
6518478210134861657
5077329649184631119
4858937937334196325
7306941185232744566
8163434320695028582
3833492680415012428
8092242140975219319
8518073012506212466
6441890714680582775
8104300617690925166
4768550410062810936
7089877902448546384
4058671777192571949
8301110966867943987
4861451429035333933
6374390415360094040
6068412920323990901
5790056030730210169
4788255913963577672
8014550546143996261
6503558924111139958
6068953734553418083
5500938266606325058
8516391778192091184
4934364551093380171
4858919335208961378
4778432871909125426
3546080396752868685
7724574282783094346
6003992547019999561
6447312333636397613
7669441544851047240
3334760722565254989
4776405269809488506
5211620545980548461
3992551469171636577
3706574842593626987
5426328942722378030
3624065321290330733
3914563113236514634
4789376355150287686
8814721391449826613
3346809372036583245
6012360930204659789
4848182415939096178
3336417672508684077
8739625692530891115
8025786696825195315
7588356883507400821
8463802424160777592
5356248227289385798
4930389579482478195
8523151833885075305
7521401048873067126
8748618654023705945
6445041845648578885
3349042528038442323
5058728146181385300
5712098606615709530
5364708982251221848
7742613919091292270
8228467182624600374
6514581523376912211
8668642398382271859
7946966894748578678
5289274546727433562
7815495184070102134
7084529907267363125
7311118354273689939
3850949545950733669
5867161511661946977
5216655329901832291
7796656152497048673
7524783120416523113
3488939705855990387
3346546683784092240
4139451707415610190
5652712862694984758
8237142342287837035
6082507359039870841
3778345734515799917
7075806373122633261
4067964824018444921
5568475781326845018
5504887944282986106
6013824350687420780
5201203941161003566
6011520967896094054
8101499929982417252
7813538977145566548
7811850132419726411
7517430463295350097
6282630780462910052
6437748793540821553
7804543971420239918
4702455575796138577
7165004168561636404
8444934577133863537
5501800489744687954
6438532642002400108
4717594729184259395
5335932128620183552
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<Inside MemCore<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<< 
The No. 2Packet
0
576
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<Inside MemCore<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<< 
===================================================================
Entering engine CheckCache_lvl_1
input packet (0 bytes)
initial input and inout tuples:
	CheckCache_fl = (
		forward_1 = 0x0(0)
	)
	hdr = (
		eth = (
		isValid = 0x1(1)
		dst = 0x000000000000(0)
		src = 0x000000000000(0)
		type = 0x0800(2048)
	)
		fec = (
		isValid = 0x0(0)
		traffic_class = 0x0(0)
		block_index = 0x00(0)
		packet_index = 0x00(0)
		original_type = 0x0000(0)
	)
		ipv4 = (
		isValid = 0x1(1)
		version = 0x4(4)
		ihl = 0x5(5)
		diffserv = 0x00(0)
		totallen = 0x0475(1141)
		identification = 0x76dc(30428)
		flags = 0x2(2)
		fragoffset = 0x0000(0)
		ttl = 0x40(64)
		protocol = 0x11(17)
		hdrchecksum = 0xc199(49561)
		srcAddr = 0x7f000001(2130706433)
		dstAddr = 0x7f000001(2130706433)
	)
		udp = (
		isValid = 0x1(1)
		sport = 0xa9d3(43475)
		dport = 0x2bcb(11211)
		len = 0x0461(1121)
		chksum = 0x0275(629)
	)
	)
	ioports = (
		ingress_port = 0x0(0)
		egress_port = 0x0(0)
	)
	local_state = (
		id = 0x0004(4)
	)
	memcached_output = (
		forward = 0x0(0)
	)
clear internal and output-only tuples
	control = (
		offset = 0x0000(0)
		virtual_offset = 0x0000(0)
		section = 0x0(0)
		activeBank = 0x0(0)
		done = 0x0(0)
		error = 0x0(0)
	)
processing section local_start in stage 1
-------------------------------------------------------------------
Section local_start starting


	method move_to_section = memcached_sec

updated tuples:
	control = (
		offset = 0x0000(0)
		virtual_offset = 0x0000(0)
		section = 0x2(2)
		activeBank = 0x0(0)
		done = 0x0(0)
		error = 0x0(0)
	)
	CheckCache_fl = (
		forward_1 = 0x0(0)
	)
	hdr = (
		eth = (
		isValid = 0x1(1)
		dst = 0x000000000000(0)
		src = 0x000000000000(0)
		type = 0x0800(2048)
	)
		fec = (
		isValid = 0x0(0)
		traffic_class = 0x0(0)
		block_index = 0x00(0)
		packet_index = 0x00(0)
		original_type = 0x0000(0)
	)
		ipv4 = (
		isValid = 0x1(1)
		version = 0x4(4)
		ihl = 0x5(5)
		diffserv = 0x00(0)
		totallen = 0x0475(1141)
		identification = 0x76dc(30428)
		flags = 0x2(2)
		fragoffset = 0x0000(0)
		ttl = 0x40(64)
		protocol = 0x11(17)
		hdrchecksum = 0xc199(49561)
		srcAddr = 0x7f000001(2130706433)
		dstAddr = 0x7f000001(2130706433)
	)
		udp = (
		isValid = 0x1(1)
		sport = 0xa9d3(43475)
		dport = 0x2bcb(11211)
		len = 0x0461(1121)
		chksum = 0x0275(629)
	)
	)
	ioports = (
		ingress_port = 0x0(0)
		egress_port = 0x0(0)
	)
	local_state = (
		id = 0x0004(4)
	)
	memcached_output = (
		forward = 0x0(0)
	)
Section local_start finished
-------------------------------------------------------------------
processing section memcached_sec in stage 2
-------------------------------------------------------------------
Section memcached_sec starting

	method update (tuples)
		CheckCache_fl.forward_1 = 0x0(0)


	method move_to_section = sink

updated tuples:
	control = (
		offset = 0x0000(0)
		virtual_offset = 0x0000(0)
		section = 0x3(3)
		activeBank = 0x0(0)
		done = 0x0(0)
		error = 0x0(0)
	)
	CheckCache_fl = (
		forward_1 = 0x0(0)
	)
	hdr = (
		eth = (
		isValid = 0x1(1)
		dst = 0x000000000000(0)
		src = 0x000000000000(0)
		type = 0x0800(2048)
	)
		fec = (
		isValid = 0x0(0)
		traffic_class = 0x0(0)
		block_index = 0x00(0)
		packet_index = 0x00(0)
		original_type = 0x0000(0)
	)
		ipv4 = (
		isValid = 0x1(1)
		version = 0x4(4)
		ihl = 0x5(5)
		diffserv = 0x00(0)
		totallen = 0x0475(1141)
		identification = 0x76dc(30428)
		flags = 0x2(2)
		fragoffset = 0x0000(0)
		ttl = 0x40(64)
		protocol = 0x11(17)
		hdrchecksum = 0xc199(49561)
		srcAddr = 0x7f000001(2130706433)
		dstAddr = 0x7f000001(2130706433)
	)
		udp = (
		isValid = 0x1(1)
		sport = 0xa9d3(43475)
		dport = 0x2bcb(11211)
		len = 0x0461(1121)
		chksum = 0x0275(629)
	)
	)
	ioports = (
		ingress_port = 0x0(0)
		egress_port = 0x0(0)
	)
	local_state = (
		id = 0x0004(4)
	)
	memcached_output = (
		forward = 0x0(0)
	)
Section memcached_sec finished
-------------------------------------------------------------------
processing section sink in stage 3
-------------------------------------------------------------------
Section sink starting


	method move_to_section = done(0)

updated tuples:
	control = (
		offset = 0x0000(0)
		virtual_offset = 0x0000(0)
		section = 0x0(0)
		activeBank = 0x0(0)
		done = 0x1(1)
		error = 0x0(0)
	)
	CheckCache_fl = (
		forward_1 = 0x0(0)
	)
	hdr = (
		eth = (
		isValid = 0x1(1)
		dst = 0x000000000000(0)
		src = 0x000000000000(0)
		type = 0x0800(2048)
	)
		fec = (
		isValid = 0x0(0)
		traffic_class = 0x0(0)
		block_index = 0x00(0)
		packet_index = 0x00(0)
		original_type = 0x0000(0)
	)
		ipv4 = (
		isValid = 0x1(1)
		version = 0x4(4)
		ihl = 0x5(5)
		diffserv = 0x00(0)
		totallen = 0x0475(1141)
		identification = 0x76dc(30428)
		flags = 0x2(2)
		fragoffset = 0x0000(0)
		ttl = 0x40(64)
		protocol = 0x11(17)
		hdrchecksum = 0xc199(49561)
		srcAddr = 0x7f000001(2130706433)
		dstAddr = 0x7f000001(2130706433)
	)
		udp = (
		isValid = 0x1(1)
		sport = 0xa9d3(43475)
		dport = 0x2bcb(11211)
		len = 0x0461(1121)
		chksum = 0x0275(629)
	)
	)
	ioports = (
		ingress_port = 0x0(0)
		egress_port = 0x0(0)
	)
	local_state = (
		id = 0x0004(4)
	)
	memcached_output = (
		forward = 0x0(0)
	)
Section sink finished
-------------------------------------------------------------------
final inout and output tuples:

Note: this engine's wrapper will clear the upper control tuple fields on output, except for the 'control.error' field.

	hdr = (
		eth = (
		isValid = 0x1(1)
		dst = 0x000000000000(0)
		src = 0x000000000000(0)
		type = 0x0800(2048)
	)
		fec = (
		isValid = 0x0(0)
		traffic_class = 0x0(0)
		block_index = 0x00(0)
		packet_index = 0x00(0)
		original_type = 0x0000(0)
	)
		ipv4 = (
		isValid = 0x1(1)
		version = 0x4(4)
		ihl = 0x5(5)
		diffserv = 0x00(0)
		totallen = 0x0475(1141)
		identification = 0x76dc(30428)
		flags = 0x2(2)
		fragoffset = 0x0000(0)
		ttl = 0x40(64)
		protocol = 0x11(17)
		hdrchecksum = 0xc199(49561)
		srcAddr = 0x7f000001(2130706433)
		dstAddr = 0x7f000001(2130706433)
	)
		udp = (
		isValid = 0x1(1)
		sport = 0xa9d3(43475)
		dport = 0x2bcb(11211)
		len = 0x0461(1121)
		chksum = 0x0275(629)
	)
	)
	ioports = (
		ingress_port = 0x0(0)
		egress_port = 0x0(0)
	)
Exiting engine CheckCache_lvl_1
===================================================================
===================================================================
Entering engine Deparser
input packet (1155 bytes)
 0x0000(0) : 00 00 00 00 00 00 00 00 00 00 00 00 08 00 45 00 
0x0010(16) : 04 75 76 dc 40 00 40 11 c1 99 7f 00 00 01 7f 00 
0x0020(32) : 00 01 a9 d3 2b cb 04 61 02 75 00 02 00 00 00 01 
0x0030(48) : 01 00 73 65 74 20 11 10 10 10 10 10 10 10 49 4f 
0x0040(64) : 6a 53 2e 45 6d 4b 45 34 6d 4d 36 7a 6c 30 65 61 
0x0050(80) : 64 63 72 67 65 6e 34 68 77 6a 49 30 73 61 50 5a 
0x0060(96) : 30 4e 6f 6d 68 30 72 52 4e 78 50 36 79 31 67 5a 
0x0070(112) : 64 56 45 46 48 49 20 30 20 30 20 31 30 32 34 0d 
0x0080(128) : 0a 49 4f 6a 53 2e 45 6d 4b 45 34 6d 4d 36 7a 6c 
0x0090(144) : 30 65 61 64 63 72 67 65 6e 34 68 77 6a 49 30 73 
0x00a0(160) : 61 50 5a 30 4e 6f 6d 68 30 72 52 4e 78 50 36 79 
0x00b0(176) : 31 67 5a 64 56 45 46 48 49 78 42 2d 44 42 72 6e 
0x00c0(192) : 61 50 6f 78 42 59 64 42 4e 32 59 4a 52 66 46 53 
0x00d0(208) : 4a 6f 33 70 30 4a 34 49 45 46 49 52 51 37 43 2d 
0x00e0(224) : 57 2e 77 68 58 58 74 75 61 50 42 2d 32 51 53 4d 
0x00f0(240) : 44 56 39 44 6f 44 57 30 53 6f 52 73 76 65 72 51 
0x0100(256) : 63 6d 35 37 48 79 30 72 4d 42 72 4f 63 48 6b 70 
0x0110(272) : 6d 74 30 5a 34 57 5a 57 49 2d 4e 43 64 43 63 44 
0x0120(288) : 79 68 4c 45 65 4c 33 2e 57 75 4d 36 39 35 76 77 
0x0130(304) : 79 77 54 31 51 30 58 6a 2d 75 76 63 35 56 71 31 
0x0140(320) : 41 39 46 6f 55 4a 6d 2e 42 37 35 4c 43 2e 46 38 
0x0150(336) : 75 69 39 4a 69 68 30 69 5a 76 49 65 4f 36 67 59 
0x0160(352) : 46 76 4c 6a 43 35 69 4f 43 6e 6a 4f 6c 79 58 65 
0x0170(368) : 65 67 78 4b 4c 78 30 76 71 4a 58 43 50 42 6b 66 
0x0180(384) : 35 33 4d 48 39 32 66 4c 70 4d 6b 5a 49 46 42 77 
0x0190(400) : 76 36 46 46 31 46 38 72 59 66 31 79 72 6c 62 77 
0x01a0(416) : 70 78 42 79 2e 72 48 6e 42 2d 4b 55 45 56 4f 38 
0x01b0(432) : 62 64 4e 63 74 56 52 50 38 53 4c 7a 43 77 74 2d 
0x01c0(448) : 73 33 78 71 75 43 62 33 43 77 58 51 50 77 59 2d 
0x01d0(464) : 58 76 62 4f 4f 31 6f 58 54 37 55 66 32 4d 65 75 
0x01e0(480) : 50 5a 69 48 6d 48 4b 79 42 73 4d 62 6d 76 61 48 
0x01f0(496) : 6f 39 67 42 41 53 69 65 5a 41 48 62 57 77 54 76 
0x0200(512) : 54 39 41 44 52 56 39 63 4c 57 42 35 50 6c 4d 42 
0x0210(528) : 76 30 4d 33 53 32 68 30 44 7a 62 6a 74 33 64 4b 
0x0220(544) : 43 6e 59 64 47 68 45 62 42 50 67 61 39 31 6d 32 
0x0230(560) : 31 36 35 55 39 6e 55 4d 6b 33 33 62 36 67 76 4a 
0x0240(576) : 53 52 77 69 37 38 49 49 59 79 74 68 7a 64 6a 2d 
0x0250(592) : 6a 6f 54 73 5a 78 43 48 2e 47 73 35 77 6d 4f 4d 
0x0260(608) : 42 49 33 49 52 4c 62 7a 48 53 65 46 33 4c 45 6d 
0x0270(624) : 37 68 64 68 63 70 79 61 33 70 66 2e 5a 31 4b 6b 
0x0280(640) : 4b 4e 31 6c 69 63 69 2e 32 4b 44 35 66 52 72 6d 
0x0290(656) : 36 53 52 69 47 4f 47 4a 42 77 48 6b 78 63 53 46 
0x02a0(672) : 7a 54 2e 67 33 67 65 35 2e 72 41 64 47 30 4f 4d 
0x02b0(688) : 53 70 32 69 42 49 30 4d 43 48 34 38 74 58 4e 72 
0x02c0(704) : 2e 4d 56 32 30 37 37 2d 79 49 63 43 49 2e 59 6b 
0x02d0(720) : 6f 61 52 7a 73 52 4b 33 69 4f 42 61 76 59 50 75 
0x02e0(736) : 75 75 77 76 2d 31 75 78 4a 55 37 62 54 66 4b 46 
0x02f0(752) : 44 6c 43 33 41 57 36 73 76 48 51 6f 71 70 67 69 
0x0300(768) : 68 61 62 67 63 54 62 76 79 69 56 50 4c 70 65 59 
0x0310(784) : 59 71 63 69 4c 69 59 45 2e 7a 30 6f 6d 68 55 53 
0x0320(800) : 46 34 36 72 58 69 6c 54 4f 45 73 6b 31 55 47 5a 
0x0330(816) : 4a 73 46 65 5a 6e 73 58 6b 73 4a 56 58 6e 78 6e 
0x0340(832) : 72 31 63 4e 6a 4c 71 36 5a 68 71 61 39 34 37 53 
0x0350(848) : 78 4d 34 55 38 77 2d 73 6e 49 4c 49 33 47 33 76 
0x0360(864) : 49 67 47 2d 2d 34 35 5a 6c 76 37 76 2e 46 4c 76 
0x0370(880) : 62 51 4e 6a 4b 4d 61 35 65 76 4f 68 41 52 61 53 
0x0380(896) : 35 71 52 35 76 58 65 65 51 6c 58 4f 2e 74 48 61 
0x0390(912) : 48 65 48 62 2e 72 68 63 6c 33 49 76 55 73 4c 61 
0x03a0(928) : 68 6d 66 61 48 48 43 69 30 6b 34 2d 62 4d 5a 73 
0x03b0(944) : 2e 71 52 7a 67 36 5a 50 39 72 49 65 69 64 43 4e 
0x03c0(960) : 4e 72 78 66 36 37 4c 36 72 50 35 51 6c 65 47 6b 
0x03d0(976) : 54 69 68 37 6f 45 57 79 34 6f 61 6d 50 6d 37 6d 
0x03e0(992) : 62 32 50 68 39 6b 6e 2d 38 74 50 74 56 67 62 79 
0x03f0(1008) : 4d 47 33 38 56 5a 34 5a 4c 65 4a 6b 4f 51 56 7a 
0x0400(1024) : 53 75 65 62 64 51 61 6c 48 2e 63 6d 65 43 6a 2e 
0x0410(1040) : 53 6d 36 78 4b 42 55 66 70 6e 4f 43 42 74 39 64 
0x0420(1056) : 6c 6f 44 4d 43 6e 35 54 6c 69 44 4e 75 77 4c 4b 
0x0430(1072) : 68 53 47 2d 64 6b 65 51 57 30 63 68 74 6d 4a 64 
0x0440(1088) : 59 57 7a 6b 48 33 42 31 6c 4f 4f 64 4a 6b 78 2e 
0x0450(1104) : 41 42 7a 6e 77 62 42 51 63 6f 35 54 59 4f 34 34 
0x0460(1120) : 75 32 6f 41 35 7a 42 71 4c 5a 52 65 48 4d 63 52 
0x0470(1136) : 59 5a 43 53 39 4f 73 6c 41 78 43 69 4b 48 6d 43 
0x0480(1152) : 4a 0d 0a 
initial input and inout tuples:
	control = (
		offset = 0x0000(0)
		virtual_offset = 0x0000(0)
		section = 0x0(0)
		activeBank = 0x0(0)
		done = 0x0(0)
		error = 0x0(0)
	)
	hdr = (
		eth = (
		isValid = 0x1(1)
		dst = 0x000000000000(0)
		src = 0x000000000000(0)
		type = 0x0800(2048)
	)
		fec = (
		isValid = 0x0(0)
		traffic_class = 0x0(0)
		block_index = 0x00(0)
		packet_index = 0x00(0)
		original_type = 0x0000(0)
	)
		ipv4 = (
		isValid = 0x1(1)
		version = 0x4(4)
		ihl = 0x5(5)
		diffserv = 0x00(0)
		totallen = 0x0475(1141)
		identification = 0x76dc(30428)
		flags = 0x2(2)
		fragoffset = 0x0000(0)
		ttl = 0x40(64)
		protocol = 0x11(17)
		hdrchecksum = 0xc199(49561)
		srcAddr = 0x7f000001(2130706433)
		dstAddr = 0x7f000001(2130706433)
	)
		udp = (
		isValid = 0x1(1)
		sport = 0xa9d3(43475)
		dport = 0x2bcb(11211)
		len = 0x0461(1121)
		chksum = 0x0275(629)
	)
	)
	Deparser_extracts = (
		size = 0x00000150(336)
	)
clear internal and output-only tuples
processing section extract_headers_sec in stage 1
-------------------------------------------------------------------
Section extract_headers_sec starting


	method remove
	removing 42 bytes at byte 0:
 0x0000(0) : 00 00 00 00 00 00 00 00 00 00 00 00 08 00 45 00 
0x0010(16) : 04 75 76 dc 40 00 40 11 c1 99 7f 00 00 01 7f 00 
0x0020(32) : 00 01 a9 d3 2b cb 04 61 02 75 
	method move_to_section = act_sec

updated tuples:
	control = (
		offset = 0x0000(0)
		virtual_offset = 0x0150(336)
		section = 0x1(1)
		activeBank = 0x0(0)
		done = 0x0(0)
		error = 0x0(0)
	)
	hdr = (
		eth = (
		isValid = 0x1(1)
		dst = 0x000000000000(0)
		src = 0x000000000000(0)
		type = 0x0800(2048)
	)
		fec = (
		isValid = 0x0(0)
		traffic_class = 0x0(0)
		block_index = 0x00(0)
		packet_index = 0x00(0)
		original_type = 0x0000(0)
	)
		ipv4 = (
		isValid = 0x1(1)
		version = 0x4(4)
		ihl = 0x5(5)
		diffserv = 0x00(0)
		totallen = 0x0475(1141)
		identification = 0x76dc(30428)
		flags = 0x2(2)
		fragoffset = 0x0000(0)
		ttl = 0x40(64)
		protocol = 0x11(17)
		hdrchecksum = 0xc199(49561)
		srcAddr = 0x7f000001(2130706433)
		dstAddr = 0x7f000001(2130706433)
	)
		udp = (
		isValid = 0x1(1)
		sport = 0xa9d3(43475)
		dport = 0x2bcb(11211)
		len = 0x0461(1121)
		chksum = 0x0275(629)
	)
	)
	Deparser_extracts = (
		size = 0x00000150(336)
	)
Section extract_headers_sec finished
-------------------------------------------------------------------
processing section act_sec in stage 2
-------------------------------------------------------------------
Section act_sec starting


	method move_to_section = emit_3

updated tuples:
	control = (
		offset = 0x0000(0)
		virtual_offset = 0x0150(336)
		section = 0x5(5)
		activeBank = 0x0(0)
		done = 0x0(0)
		error = 0x0(0)
	)
	hdr = (
		eth = (
		isValid = 0x1(1)
		dst = 0x000000000000(0)
		src = 0x000000000000(0)
		type = 0x0800(2048)
	)
		fec = (
		isValid = 0x0(0)
		traffic_class = 0x0(0)
		block_index = 0x00(0)
		packet_index = 0x00(0)
		original_type = 0x0000(0)
	)
		ipv4 = (
		isValid = 0x1(1)
		version = 0x4(4)
		ihl = 0x5(5)
		diffserv = 0x00(0)
		totallen = 0x0475(1141)
		identification = 0x76dc(30428)
		flags = 0x2(2)
		fragoffset = 0x0000(0)
		ttl = 0x40(64)
		protocol = 0x11(17)
		hdrchecksum = 0xc199(49561)
		srcAddr = 0x7f000001(2130706433)
		dstAddr = 0x7f000001(2130706433)
	)
		udp = (
		isValid = 0x1(1)
		sport = 0xa9d3(43475)
		dport = 0x2bcb(11211)
		len = 0x0461(1121)
		chksum = 0x0275(629)
	)
	)
	Deparser_extracts = (
		size = 0x00000150(336)
	)
Section act_sec finished
-------------------------------------------------------------------
processing section emit_3 in stage 3
-------------------------------------------------------------------
Section emit_3 starting

	method update (tuples)


	method update (packet)
		 dst = 0x000000000000(0)
		 src = 0x000000000000(0)
		 type = 0x0800(2048)

	method insert
	inserting 14 bytes at byte 0:
 0x0000(0) : 00 00 00 00 00 00 00 00 00 00 00 00 08 00 
	method move_to_section = emit_2

updated tuples:
	control = (
		offset = 0x0070(112)
		virtual_offset = 0x0150(336)
		section = 0x4(4)
		activeBank = 0x0(0)
		done = 0x0(0)
		error = 0x0(0)
	)
	hdr = (
		eth = (
		isValid = 0x1(1)
		dst = 0x000000000000(0)
		src = 0x000000000000(0)
		type = 0x0800(2048)
	)
		fec = (
		isValid = 0x0(0)
		traffic_class = 0x0(0)
		block_index = 0x00(0)
		packet_index = 0x00(0)
		original_type = 0x0000(0)
	)
		ipv4 = (
		isValid = 0x1(1)
		version = 0x4(4)
		ihl = 0x5(5)
		diffserv = 0x00(0)
		totallen = 0x0475(1141)
		identification = 0x76dc(30428)
		flags = 0x2(2)
		fragoffset = 0x0000(0)
		ttl = 0x40(64)
		protocol = 0x11(17)
		hdrchecksum = 0xc199(49561)
		srcAddr = 0x7f000001(2130706433)
		dstAddr = 0x7f000001(2130706433)
	)
		udp = (
		isValid = 0x1(1)
		sport = 0xa9d3(43475)
		dport = 0x2bcb(11211)
		len = 0x0461(1121)
		chksum = 0x0275(629)
	)
	)
	Deparser_extracts = (
		size = 0x00000150(336)
	)
Section emit_3 finished
-------------------------------------------------------------------
processing section emit_2 in stage 4
-------------------------------------------------------------------
Section emit_2 starting

	method update (tuples)


	method update (packet)
		 traffic_class = 0x0(0)
		 block_index = 0x00(0)
		 packet_index = 0x00(0)
		 original_type = 0x0000(0)

	method insert
	inserting 0 bytes at byte 14:
 0x0000(0) :                                           
	method move_to_section = emit_1

updated tuples:
	control = (
		offset = 0x0070(112)
		virtual_offset = 0x0150(336)
		section = 0x3(3)
		activeBank = 0x0(0)
		done = 0x0(0)
		error = 0x0(0)
	)
	hdr = (
		eth = (
		isValid = 0x1(1)
		dst = 0x000000000000(0)
		src = 0x000000000000(0)
		type = 0x0800(2048)
	)
		fec = (
		isValid = 0x0(0)
		traffic_class = 0x0(0)
		block_index = 0x00(0)
		packet_index = 0x00(0)
		original_type = 0x0000(0)
	)
		ipv4 = (
		isValid = 0x1(1)
		version = 0x4(4)
		ihl = 0x5(5)
		diffserv = 0x00(0)
		totallen = 0x0475(1141)
		identification = 0x76dc(30428)
		flags = 0x2(2)
		fragoffset = 0x0000(0)
		ttl = 0x40(64)
		protocol = 0x11(17)
		hdrchecksum = 0xc199(49561)
		srcAddr = 0x7f000001(2130706433)
		dstAddr = 0x7f000001(2130706433)
	)
		udp = (
		isValid = 0x1(1)
		sport = 0xa9d3(43475)
		dport = 0x2bcb(11211)
		len = 0x0461(1121)
		chksum = 0x0275(629)
	)
	)
	Deparser_extracts = (
		size = 0x00000150(336)
	)
Section emit_2 finished
-------------------------------------------------------------------
processing section emit_1 in stage 5
-------------------------------------------------------------------
Section emit_1 starting

	method update (tuples)


	method update (packet)
		 version = 0x4(4)
		 ihl = 0x5(5)
		 diffserv = 0x00(0)
		 totallen = 0x0475(1141)
		 identification = 0x76dc(30428)
		 flags = 0x2(2)
		 fragoffset = 0x0000(0)
		 ttl = 0x40(64)
		 protocol = 0x11(17)
		 hdrchecksum = 0xc199(49561)
		 srcAddr = 0x7f000001(2130706433)
		 dstAddr = 0x7f000001(2130706433)

	method insert
	inserting 20 bytes at byte 14:
 0x0000(0) :                                           45 00 
0x0010(16) : 04 75 76 dc 40 00 40 11 c1 99 7f 00 00 01 7f 00 
0x0020(32) : 00 01 
	method move_to_section = emit_0

updated tuples:
	control = (
		offset = 0x0110(272)
		virtual_offset = 0x0150(336)
		section = 0x2(2)
		activeBank = 0x0(0)
		done = 0x0(0)
		error = 0x0(0)
	)
	hdr = (
		eth = (
		isValid = 0x1(1)
		dst = 0x000000000000(0)
		src = 0x000000000000(0)
		type = 0x0800(2048)
	)
		fec = (
		isValid = 0x0(0)
		traffic_class = 0x0(0)
		block_index = 0x00(0)
		packet_index = 0x00(0)
		original_type = 0x0000(0)
	)
		ipv4 = (
		isValid = 0x1(1)
		version = 0x4(4)
		ihl = 0x5(5)
		diffserv = 0x00(0)
		totallen = 0x0475(1141)
		identification = 0x76dc(30428)
		flags = 0x2(2)
		fragoffset = 0x0000(0)
		ttl = 0x40(64)
		protocol = 0x11(17)
		hdrchecksum = 0xc199(49561)
		srcAddr = 0x7f000001(2130706433)
		dstAddr = 0x7f000001(2130706433)
	)
		udp = (
		isValid = 0x1(1)
		sport = 0xa9d3(43475)
		dport = 0x2bcb(11211)
		len = 0x0461(1121)
		chksum = 0x0275(629)
	)
	)
	Deparser_extracts = (
		size = 0x00000150(336)
	)
Section emit_1 finished
-------------------------------------------------------------------
processing section emit_0 in stage 6
-------------------------------------------------------------------
Section emit_0 starting

	method update (tuples)


	method update (packet)
		 sport = 0xa9d3(43475)
		 dport = 0x2bcb(11211)
		 len = 0x0461(1121)
		 chksum = 0x0275(629)

	method insert
	inserting 8 bytes at byte 34:
0x0020(32) :       a9 d3 2b cb 04 61 02 75 
	method move_to_section = done(0)

updated tuples:
	control = (
		offset = 0x0150(336)
		virtual_offset = 0x0150(336)
		section = 0x0(0)
		activeBank = 0x0(0)
		done = 0x1(1)
		error = 0x0(0)
	)
	hdr = (
		eth = (
		isValid = 0x1(1)
		dst = 0x000000000000(0)
		src = 0x000000000000(0)
		type = 0x0800(2048)
	)
		fec = (
		isValid = 0x0(0)
		traffic_class = 0x0(0)
		block_index = 0x00(0)
		packet_index = 0x00(0)
		original_type = 0x0000(0)
	)
		ipv4 = (
		isValid = 0x1(1)
		version = 0x4(4)
		ihl = 0x5(5)
		diffserv = 0x00(0)
		totallen = 0x0475(1141)
		identification = 0x76dc(30428)
		flags = 0x2(2)
		fragoffset = 0x0000(0)
		ttl = 0x40(64)
		protocol = 0x11(17)
		hdrchecksum = 0xc199(49561)
		srcAddr = 0x7f000001(2130706433)
		dstAddr = 0x7f000001(2130706433)
	)
		udp = (
		isValid = 0x1(1)
		sport = 0xa9d3(43475)
		dport = 0x2bcb(11211)
		len = 0x0461(1121)
		chksum = 0x0275(629)
	)
	)
	Deparser_extracts = (
		size = 0x00000150(336)
	)
Section emit_0 finished
-------------------------------------------------------------------
final inout and output tuples:

Note: this engine's wrapper will clear the upper control tuple fields on output, except for the 'control.error' field.

	control = (
		offset = 0x0000(0)
		virtual_offset = 0x0000(0)
		section = 0x0(0)
		activeBank = 0x0(0)
		done = 0x0(0)
		error = 0x0(0)
	)
output packet (1155 bytes)
 0x0000(0) : 00 00 00 00 00 00 00 00 00 00 00 00 08 00 45 00 
0x0010(16) : 04 75 76 dc 40 00 40 11 c1 99 7f 00 00 01 7f 00 
0x0020(32) : 00 01 a9 d3 2b cb 04 61 02 75 00 02 00 00 00 01 
0x0030(48) : 01 00 73 65 74 20 11 10 10 10 10 10 10 10 49 4f 
0x0040(64) : 6a 53 2e 45 6d 4b 45 34 6d 4d 36 7a 6c 30 65 61 
0x0050(80) : 64 63 72 67 65 6e 34 68 77 6a 49 30 73 61 50 5a 
0x0060(96) : 30 4e 6f 6d 68 30 72 52 4e 78 50 36 79 31 67 5a 
0x0070(112) : 64 56 45 46 48 49 20 30 20 30 20 31 30 32 34 0d 
0x0080(128) : 0a 49 4f 6a 53 2e 45 6d 4b 45 34 6d 4d 36 7a 6c 
0x0090(144) : 30 65 61 64 63 72 67 65 6e 34 68 77 6a 49 30 73 
0x00a0(160) : 61 50 5a 30 4e 6f 6d 68 30 72 52 4e 78 50 36 79 
0x00b0(176) : 31 67 5a 64 56 45 46 48 49 78 42 2d 44 42 72 6e 
0x00c0(192) : 61 50 6f 78 42 59 64 42 4e 32 59 4a 52 66 46 53 
0x00d0(208) : 4a 6f 33 70 30 4a 34 49 45 46 49 52 51 37 43 2d 
0x00e0(224) : 57 2e 77 68 58 58 74 75 61 50 42 2d 32 51 53 4d 
0x00f0(240) : 44 56 39 44 6f 44 57 30 53 6f 52 73 76 65 72 51 
0x0100(256) : 63 6d 35 37 48 79 30 72 4d 42 72 4f 63 48 6b 70 
0x0110(272) : 6d 74 30 5a 34 57 5a 57 49 2d 4e 43 64 43 63 44 
0x0120(288) : 79 68 4c 45 65 4c 33 2e 57 75 4d 36 39 35 76 77 
0x0130(304) : 79 77 54 31 51 30 58 6a 2d 75 76 63 35 56 71 31 
0x0140(320) : 41 39 46 6f 55 4a 6d 2e 42 37 35 4c 43 2e 46 38 
0x0150(336) : 75 69 39 4a 69 68 30 69 5a 76 49 65 4f 36 67 59 
0x0160(352) : 46 76 4c 6a 43 35 69 4f 43 6e 6a 4f 6c 79 58 65 
0x0170(368) : 65 67 78 4b 4c 78 30 76 71 4a 58 43 50 42 6b 66 
0x0180(384) : 35 33 4d 48 39 32 66 4c 70 4d 6b 5a 49 46 42 77 
0x0190(400) : 76 36 46 46 31 46 38 72 59 66 31 79 72 6c 62 77 
0x01a0(416) : 70 78 42 79 2e 72 48 6e 42 2d 4b 55 45 56 4f 38 
0x01b0(432) : 62 64 4e 63 74 56 52 50 38 53 4c 7a 43 77 74 2d 
0x01c0(448) : 73 33 78 71 75 43 62 33 43 77 58 51 50 77 59 2d 
0x01d0(464) : 58 76 62 4f 4f 31 6f 58 54 37 55 66 32 4d 65 75 
0x01e0(480) : 50 5a 69 48 6d 48 4b 79 42 73 4d 62 6d 76 61 48 
0x01f0(496) : 6f 39 67 42 41 53 69 65 5a 41 48 62 57 77 54 76 
0x0200(512) : 54 39 41 44 52 56 39 63 4c 57 42 35 50 6c 4d 42 
0x0210(528) : 76 30 4d 33 53 32 68 30 44 7a 62 6a 74 33 64 4b 
0x0220(544) : 43 6e 59 64 47 68 45 62 42 50 67 61 39 31 6d 32 
0x0230(560) : 31 36 35 55 39 6e 55 4d 6b 33 33 62 36 67 76 4a 
0x0240(576) : 53 52 77 69 37 38 49 49 59 79 74 68 7a 64 6a 2d 
0x0250(592) : 6a 6f 54 73 5a 78 43 48 2e 47 73 35 77 6d 4f 4d 
0x0260(608) : 42 49 33 49 52 4c 62 7a 48 53 65 46 33 4c 45 6d 
0x0270(624) : 37 68 64 68 63 70 79 61 33 70 66 2e 5a 31 4b 6b 
0x0280(640) : 4b 4e 31 6c 69 63 69 2e 32 4b 44 35 66 52 72 6d 
0x0290(656) : 36 53 52 69 47 4f 47 4a 42 77 48 6b 78 63 53 46 
0x02a0(672) : 7a 54 2e 67 33 67 65 35 2e 72 41 64 47 30 4f 4d 
0x02b0(688) : 53 70 32 69 42 49 30 4d 43 48 34 38 74 58 4e 72 
0x02c0(704) : 2e 4d 56 32 30 37 37 2d 79 49 63 43 49 2e 59 6b 
0x02d0(720) : 6f 61 52 7a 73 52 4b 33 69 4f 42 61 76 59 50 75 
0x02e0(736) : 75 75 77 76 2d 31 75 78 4a 55 37 62 54 66 4b 46 
0x02f0(752) : 44 6c 43 33 41 57 36 73 76 48 51 6f 71 70 67 69 
0x0300(768) : 68 61 62 67 63 54 62 76 79 69 56 50 4c 70 65 59 
0x0310(784) : 59 71 63 69 4c 69 59 45 2e 7a 30 6f 6d 68 55 53 
0x0320(800) : 46 34 36 72 58 69 6c 54 4f 45 73 6b 31 55 47 5a 
0x0330(816) : 4a 73 46 65 5a 6e 73 58 6b 73 4a 56 58 6e 78 6e 
0x0340(832) : 72 31 63 4e 6a 4c 71 36 5a 68 71 61 39 34 37 53 
0x0350(848) : 78 4d 34 55 38 77 2d 73 6e 49 4c 49 33 47 33 76 
0x0360(864) : 49 67 47 2d 2d 34 35 5a 6c 76 37 76 2e 46 4c 76 
0x0370(880) : 62 51 4e 6a 4b 4d 61 35 65 76 4f 68 41 52 61 53 
0x0380(896) : 35 71 52 35 76 58 65 65 51 6c 58 4f 2e 74 48 61 
0x0390(912) : 48 65 48 62 2e 72 68 63 6c 33 49 76 55 73 4c 61 
0x03a0(928) : 68 6d 66 61 48 48 43 69 30 6b 34 2d 62 4d 5a 73 
0x03b0(944) : 2e 71 52 7a 67 36 5a 50 39 72 49 65 69 64 43 4e 
0x03c0(960) : 4e 72 78 66 36 37 4c 36 72 50 35 51 6c 65 47 6b 
0x03d0(976) : 54 69 68 37 6f 45 57 79 34 6f 61 6d 50 6d 37 6d 
0x03e0(992) : 62 32 50 68 39 6b 6e 2d 38 74 50 74 56 67 62 79 
0x03f0(1008) : 4d 47 33 38 56 5a 34 5a 4c 65 4a 6b 4f 51 56 7a 
0x0400(1024) : 53 75 65 62 64 51 61 6c 48 2e 63 6d 65 43 6a 2e 
0x0410(1040) : 53 6d 36 78 4b 42 55 66 70 6e 4f 43 42 74 39 64 
0x0420(1056) : 6c 6f 44 4d 43 6e 35 54 6c 69 44 4e 75 77 4c 4b 
0x0430(1072) : 68 53 47 2d 64 6b 65 51 57 30 63 68 74 6d 4a 64 
0x0440(1088) : 59 57 7a 6b 48 33 42 31 6c 4f 4f 64 4a 6b 78 2e 
0x0450(1104) : 41 42 7a 6e 77 62 42 51 63 6f 35 54 59 4f 34 34 
0x0460(1120) : 75 32 6f 41 35 7a 42 71 4c 5a 52 65 48 4d 63 52 
0x0470(1136) : 59 5a 43 53 39 4f 73 6c 41 78 43 69 4b 48 6d 43 
0x0480(1152) : 4a 0d 0a 
Exiting engine Deparser
===================================================================
final inout and output tuples:
	ioports = (
		ingress_port = 0x0(0)
		egress_port = 0x0(0)
	)
output packet (1155 bytes)
 0x0000(0) : 00 00 00 00 00 00 00 00 00 00 00 00 08 00 45 00 
0x0010(16) : 04 75 76 dc 40 00 40 11 c1 99 7f 00 00 01 7f 00 
0x0020(32) : 00 01 a9 d3 2b cb 04 61 02 75 00 02 00 00 00 01 
0x0030(48) : 01 00 73 65 74 20 11 10 10 10 10 10 10 10 49 4f 
0x0040(64) : 6a 53 2e 45 6d 4b 45 34 6d 4d 36 7a 6c 30 65 61 
0x0050(80) : 64 63 72 67 65 6e 34 68 77 6a 49 30 73 61 50 5a 
0x0060(96) : 30 4e 6f 6d 68 30 72 52 4e 78 50 36 79 31 67 5a 
0x0070(112) : 64 56 45 46 48 49 20 30 20 30 20 31 30 32 34 0d 
0x0080(128) : 0a 49 4f 6a 53 2e 45 6d 4b 45 34 6d 4d 36 7a 6c 
0x0090(144) : 30 65 61 64 63 72 67 65 6e 34 68 77 6a 49 30 73 
0x00a0(160) : 61 50 5a 30 4e 6f 6d 68 30 72 52 4e 78 50 36 79 
0x00b0(176) : 31 67 5a 64 56 45 46 48 49 78 42 2d 44 42 72 6e 
0x00c0(192) : 61 50 6f 78 42 59 64 42 4e 32 59 4a 52 66 46 53 
0x00d0(208) : 4a 6f 33 70 30 4a 34 49 45 46 49 52 51 37 43 2d 
0x00e0(224) : 57 2e 77 68 58 58 74 75 61 50 42 2d 32 51 53 4d 
0x00f0(240) : 44 56 39 44 6f 44 57 30 53 6f 52 73 76 65 72 51 
0x0100(256) : 63 6d 35 37 48 79 30 72 4d 42 72 4f 63 48 6b 70 
0x0110(272) : 6d 74 30 5a 34 57 5a 57 49 2d 4e 43 64 43 63 44 
0x0120(288) : 79 68 4c 45 65 4c 33 2e 57 75 4d 36 39 35 76 77 
0x0130(304) : 79 77 54 31 51 30 58 6a 2d 75 76 63 35 56 71 31 
0x0140(320) : 41 39 46 6f 55 4a 6d 2e 42 37 35 4c 43 2e 46 38 
0x0150(336) : 75 69 39 4a 69 68 30 69 5a 76 49 65 4f 36 67 59 
0x0160(352) : 46 76 4c 6a 43 35 69 4f 43 6e 6a 4f 6c 79 58 65 
0x0170(368) : 65 67 78 4b 4c 78 30 76 71 4a 58 43 50 42 6b 66 
0x0180(384) : 35 33 4d 48 39 32 66 4c 70 4d 6b 5a 49 46 42 77 
0x0190(400) : 76 36 46 46 31 46 38 72 59 66 31 79 72 6c 62 77 
0x01a0(416) : 70 78 42 79 2e 72 48 6e 42 2d 4b 55 45 56 4f 38 
0x01b0(432) : 62 64 4e 63 74 56 52 50 38 53 4c 7a 43 77 74 2d 
0x01c0(448) : 73 33 78 71 75 43 62 33 43 77 58 51 50 77 59 2d 
0x01d0(464) : 58 76 62 4f 4f 31 6f 58 54 37 55 66 32 4d 65 75 
0x01e0(480) : 50 5a 69 48 6d 48 4b 79 42 73 4d 62 6d 76 61 48 
0x01f0(496) : 6f 39 67 42 41 53 69 65 5a 41 48 62 57 77 54 76 
0x0200(512) : 54 39 41 44 52 56 39 63 4c 57 42 35 50 6c 4d 42 
0x0210(528) : 76 30 4d 33 53 32 68 30 44 7a 62 6a 74 33 64 4b 
0x0220(544) : 43 6e 59 64 47 68 45 62 42 50 67 61 39 31 6d 32 
0x0230(560) : 31 36 35 55 39 6e 55 4d 6b 33 33 62 36 67 76 4a 
0x0240(576) : 53 52 77 69 37 38 49 49 59 79 74 68 7a 64 6a 2d 
0x0250(592) : 6a 6f 54 73 5a 78 43 48 2e 47 73 35 77 6d 4f 4d 
0x0260(608) : 42 49 33 49 52 4c 62 7a 48 53 65 46 33 4c 45 6d 
0x0270(624) : 37 68 64 68 63 70 79 61 33 70 66 2e 5a 31 4b 6b 
0x0280(640) : 4b 4e 31 6c 69 63 69 2e 32 4b 44 35 66 52 72 6d 
0x0290(656) : 36 53 52 69 47 4f 47 4a 42 77 48 6b 78 63 53 46 
0x02a0(672) : 7a 54 2e 67 33 67 65 35 2e 72 41 64 47 30 4f 4d 
0x02b0(688) : 53 70 32 69 42 49 30 4d 43 48 34 38 74 58 4e 72 
0x02c0(704) : 2e 4d 56 32 30 37 37 2d 79 49 63 43 49 2e 59 6b 
0x02d0(720) : 6f 61 52 7a 73 52 4b 33 69 4f 42 61 76 59 50 75 
0x02e0(736) : 75 75 77 76 2d 31 75 78 4a 55 37 62 54 66 4b 46 
0x02f0(752) : 44 6c 43 33 41 57 36 73 76 48 51 6f 71 70 67 69 
0x0300(768) : 68 61 62 67 63 54 62 76 79 69 56 50 4c 70 65 59 
0x0310(784) : 59 71 63 69 4c 69 59 45 2e 7a 30 6f 6d 68 55 53 
0x0320(800) : 46 34 36 72 58 69 6c 54 4f 45 73 6b 31 55 47 5a 
0x0330(816) : 4a 73 46 65 5a 6e 73 58 6b 73 4a 56 58 6e 78 6e 
0x0340(832) : 72 31 63 4e 6a 4c 71 36 5a 68 71 61 39 34 37 53 
0x0350(848) : 78 4d 34 55 38 77 2d 73 6e 49 4c 49 33 47 33 76 
0x0360(864) : 49 67 47 2d 2d 34 35 5a 6c 76 37 76 2e 46 4c 76 
0x0370(880) : 62 51 4e 6a 4b 4d 61 35 65 76 4f 68 41 52 61 53 
0x0380(896) : 35 71 52 35 76 58 65 65 51 6c 58 4f 2e 74 48 61 
0x0390(912) : 48 65 48 62 2e 72 68 63 6c 33 49 76 55 73 4c 61 
0x03a0(928) : 68 6d 66 61 48 48 43 69 30 6b 34 2d 62 4d 5a 73 
0x03b0(944) : 2e 71 52 7a 67 36 5a 50 39 72 49 65 69 64 43 4e 
0x03c0(960) : 4e 72 78 66 36 37 4c 36 72 50 35 51 6c 65 47 6b 
0x03d0(976) : 54 69 68 37 6f 45 57 79 34 6f 61 6d 50 6d 37 6d 
0x03e0(992) : 62 32 50 68 39 6b 6e 2d 38 74 50 74 56 67 62 79 
0x03f0(1008) : 4d 47 33 38 56 5a 34 5a 4c 65 4a 6b 4f 51 56 7a 
0x0400(1024) : 53 75 65 62 64 51 61 6c 48 2e 63 6d 65 43 6a 2e 
0x0410(1040) : 53 6d 36 78 4b 42 55 66 70 6e 4f 43 42 74 39 64 
0x0420(1056) : 6c 6f 44 4d 43 6e 35 54 6c 69 44 4e 75 77 4c 4b 
0x0430(1072) : 68 53 47 2d 64 6b 65 51 57 30 63 68 74 6d 4a 64 
0x0440(1088) : 59 57 7a 6b 48 33 42 31 6c 4f 4f 64 4a 6b 78 2e 
0x0450(1104) : 41 42 7a 6e 77 62 42 51 63 6f 35 54 59 4f 34 34 
0x0460(1120) : 75 32 6f 41 35 7a 42 71 4c 5a 52 65 48 4d 63 52 
0x0470(1136) : 59 5a 43 53 39 4f 73 6c 41 78 43 69 4b 48 6d 43 
0x0480(1152) : 4a 0d 0a 
Exiting system XilinxSwitch
===================================================================
Evaluating packet #4(120 bytes)
 0x0000(0) : 00 00 00 00 00 00 00 00 00 00 00 00 08 00 45 00 
0x0010(16) : 00 6a 76 de 40 00 40 11 c5 a2 7f 00 00 01 7f 00 
0x0020(32) : 00 01 a9 d3 2b cb 00 56 fe 69 00 03 00 00 00 01 
0x0030(48) : 01 00 67 65 74 20 11 10 10 10 10 10 10 10 49 4f 
0x0040(64) : 6a 53 2e 45 6d 4b 45 34 6d 4d 36 7a 6c 30 65 61 
0x0050(80) : 64 63 72 67 65 6e 34 68 77 6a 49 30 73 61 50 5a 
0x0060(96) : 30 4e 6f 6d 68 30 72 52 4e 78 50 36 79 31 67 5a 
0x0070(112) : 64 56 45 46 48 49 0d 0a 
===================================================================
Entering system XilinxSwitch
input packet (120 bytes)
 0x0000(0) : 00 00 00 00 00 00 00 00 00 00 00 00 08 00 45 00 
0x0010(16) : 00 6a 76 de 40 00 40 11 c5 a2 7f 00 00 01 7f 00 
0x0020(32) : 00 01 a9 d3 2b cb 00 56 fe 69 00 03 00 00 00 01 
0x0030(48) : 01 00 67 65 74 20 11 10 10 10 10 10 10 10 49 4f 
0x0040(64) : 6a 53 2e 45 6d 4b 45 34 6d 4d 36 7a 6c 30 65 61 
0x0050(80) : 64 63 72 67 65 6e 34 68 77 6a 49 30 73 61 50 5a 
0x0060(96) : 30 4e 6f 6d 68 30 72 52 4e 78 50 36 79 31 67 5a 
0x0070(112) : 64 56 45 46 48 49 0d 0a 
initial input and inout tuples:
	ioports = (
		ingress_port = 0x0(0)
		egress_port = 0x0(0)
	)
clear internal and output-only tuples
===================================================================
Entering engine Parser
input packet (120 bytes)
 0x0000(0) : 00 00 00 00 00 00 00 00 00 00 00 00 08 00 45 00 
0x0010(16) : 00 6a 76 de 40 00 40 11 c5 a2 7f 00 00 01 7f 00 
0x0020(32) : 00 01 a9 d3 2b cb 00 56 fe 69 00 03 00 00 00 01 
0x0030(48) : 01 00 67 65 74 20 11 10 10 10 10 10 10 10 49 4f 
0x0040(64) : 6a 53 2e 45 6d 4b 45 34 6d 4d 36 7a 6c 30 65 61 
0x0050(80) : 64 63 72 67 65 6e 34 68 77 6a 49 30 73 61 50 5a 
0x0060(96) : 30 4e 6f 6d 68 30 72 52 4e 78 50 36 79 31 67 5a 
0x0070(112) : 64 56 45 46 48 49 0d 0a 
initial input and inout tuples:
	control = (
		offset = 0x0000(0)
		virtual_offset = 0x0000(0)
		section = 0x0(0)
		activeBank = 0x0(0)
		done = 0x0(0)
		error = 0x0(0)
	)
clear internal and output-only tuples
	hdr = (
		eth = (
		isValid = 0x0(0)
		dst = 0x000000000000(0)
		src = 0x000000000000(0)
		type = 0x0000(0)
	)
		fec = (
		isValid = 0x0(0)
		traffic_class = 0x0(0)
		block_index = 0x00(0)
		packet_index = 0x00(0)
		original_type = 0x0000(0)
	)
		ipv4 = (
		isValid = 0x0(0)
		version = 0x0(0)
		ihl = 0x0(0)
		diffserv = 0x00(0)
		totallen = 0x0000(0)
		identification = 0x0000(0)
		flags = 0x0(0)
		fragoffset = 0x0000(0)
		ttl = 0x00(0)
		protocol = 0x00(0)
		hdrchecksum = 0x0000(0)
		srcAddr = 0x00000000(0)
		dstAddr = 0x00000000(0)
	)
		udp = (
		isValid = 0x0(0)
		sport = 0x0000(0)
		dport = 0x0000(0)
		len = 0x0000(0)
		chksum = 0x0000(0)
	)
	)
	Parser_extracts = (
		size = 0x00000000(0)
	)
processing section start in stage 1
-------------------------------------------------------------------
Section start starting

	extracting 112 bits at offset 0x0000(0)
		dst_0 = 0x000000000000(0)
		src_0 = 0x000000000000(0)
		type_0 = 0x0800(2048)

	method update (tuples)
		hdr.eth.isValid = 0x1(1)
		hdr.eth.dst = 0x000000000000(0)
		hdr.eth.src = 0x000000000000(0)
		hdr.eth.type = 0x0800(2048)
		Parser_extracts.size = 0x00000070(112)


	method move_to_section = parse_ipv4

updated tuples:
	control = (
		offset = 0x0070(112)
		virtual_offset = 0x0070(112)
		section = 0x2(2)
		activeBank = 0x0(0)
		done = 0x0(0)
		error = 0x0(0)
	)
	hdr = (
		eth = (
		isValid = 0x1(1)
		dst = 0x000000000000(0)
		src = 0x000000000000(0)
		type = 0x0800(2048)
	)
		fec = (
		isValid = 0x0(0)
		traffic_class = 0x0(0)
		block_index = 0x00(0)
		packet_index = 0x00(0)
		original_type = 0x0000(0)
	)
		ipv4 = (
		isValid = 0x0(0)
		version = 0x0(0)
		ihl = 0x0(0)
		diffserv = 0x00(0)
		totallen = 0x0000(0)
		identification = 0x0000(0)
		flags = 0x0(0)
		fragoffset = 0x0000(0)
		ttl = 0x00(0)
		protocol = 0x00(0)
		hdrchecksum = 0x0000(0)
		srcAddr = 0x00000000(0)
		dstAddr = 0x00000000(0)
	)
		udp = (
		isValid = 0x0(0)
		sport = 0x0000(0)
		dport = 0x0000(0)
		len = 0x0000(0)
		chksum = 0x0000(0)
	)
	)
	Parser_extracts = (
		size = 0x00000070(112)
	)
Section start finished
-------------------------------------------------------------------
processing section parse_ipv4 in stage 2
-------------------------------------------------------------------
Section parse_ipv4 starting

	extracting 160 bits at offset 0x0070(112)
		version_0 = 0x4(4)
		ihl_0 = 0x5(5)
		diffserv_0 = 0x00(0)
		totallen_0 = 0x006a(106)
		identification_0 = 0x76de(30430)
		flags_0 = 0x2(2)
		fragoffset_0 = 0x0000(0)
		ttl_0 = 0x40(64)
		protocol_0 = 0x11(17)
		hdrchecksum_0 = 0xc5a2(50594)
		srcAddr_0 = 0x7f000001(2130706433)
		dstAddr_0 = 0x7f000001(2130706433)

	method update (tuples)
		hdr.ipv4.isValid = 0x1(1)
		hdr.ipv4.version = 0x4(4)
		hdr.ipv4.ihl = 0x5(5)
		hdr.ipv4.diffserv = 0x00(0)
		hdr.ipv4.totallen = 0x006a(106)
		hdr.ipv4.identification = 0x76de(30430)
		hdr.ipv4.flags = 0x2(2)
		hdr.ipv4.fragoffset = 0x0000(0)
		hdr.ipv4.ttl = 0x40(64)
		hdr.ipv4.protocol = 0x11(17)
		hdr.ipv4.hdrchecksum = 0xc5a2(50594)
		hdr.ipv4.srcAddr = 0x7f000001(2130706433)
		hdr.ipv4.dstAddr = 0x7f000001(2130706433)
		Parser_extracts.size = 0x00000110(272)


	method move_to_section = parse_udp

updated tuples:
	control = (
		offset = 0x0110(272)
		virtual_offset = 0x0110(272)
		section = 0x3(3)
		activeBank = 0x0(0)
		done = 0x0(0)
		error = 0x0(0)
	)
	hdr = (
		eth = (
		isValid = 0x1(1)
		dst = 0x000000000000(0)
		src = 0x000000000000(0)
		type = 0x0800(2048)
	)
		fec = (
		isValid = 0x0(0)
		traffic_class = 0x0(0)
		block_index = 0x00(0)
		packet_index = 0x00(0)
		original_type = 0x0000(0)
	)
		ipv4 = (
		isValid = 0x1(1)
		version = 0x4(4)
		ihl = 0x5(5)
		diffserv = 0x00(0)
		totallen = 0x006a(106)
		identification = 0x76de(30430)
		flags = 0x2(2)
		fragoffset = 0x0000(0)
		ttl = 0x40(64)
		protocol = 0x11(17)
		hdrchecksum = 0xc5a2(50594)
		srcAddr = 0x7f000001(2130706433)
		dstAddr = 0x7f000001(2130706433)
	)
		udp = (
		isValid = 0x0(0)
		sport = 0x0000(0)
		dport = 0x0000(0)
		len = 0x0000(0)
		chksum = 0x0000(0)
	)
	)
	Parser_extracts = (
		size = 0x00000110(272)
	)
Section parse_ipv4 finished
-------------------------------------------------------------------
processing section parse_udp in stage 3
-------------------------------------------------------------------
Section parse_udp starting

	extracting 64 bits at offset 0x0110(272)
		sport_0 = 0xa9d3(43475)
		dport_0 = 0x2bcb(11211)
		len_0 = 0x0056(86)
		chksum_0 = 0xfe69(65129)

	method update (tuples)
		hdr.udp.isValid = 0x1(1)
		hdr.udp.sport = 0xa9d3(43475)
		hdr.udp.dport = 0x2bcb(11211)
		hdr.udp.len = 0x0056(86)
		hdr.udp.chksum = 0xfe69(65129)
		Parser_extracts.size = 0x00000150(336)


	method move_to_section = accept

updated tuples:
	control = (
		offset = 0x0150(336)
		virtual_offset = 0x0150(336)
		section = 0x4(4)
		activeBank = 0x0(0)
		done = 0x0(0)
		error = 0x0(0)
	)
	hdr = (
		eth = (
		isValid = 0x1(1)
		dst = 0x000000000000(0)
		src = 0x000000000000(0)
		type = 0x0800(2048)
	)
		fec = (
		isValid = 0x0(0)
		traffic_class = 0x0(0)
		block_index = 0x00(0)
		packet_index = 0x00(0)
		original_type = 0x0000(0)
	)
		ipv4 = (
		isValid = 0x1(1)
		version = 0x4(4)
		ihl = 0x5(5)
		diffserv = 0x00(0)
		totallen = 0x006a(106)
		identification = 0x76de(30430)
		flags = 0x2(2)
		fragoffset = 0x0000(0)
		ttl = 0x40(64)
		protocol = 0x11(17)
		hdrchecksum = 0xc5a2(50594)
		srcAddr = 0x7f000001(2130706433)
		dstAddr = 0x7f000001(2130706433)
	)
		udp = (
		isValid = 0x1(1)
		sport = 0xa9d3(43475)
		dport = 0x2bcb(11211)
		len = 0x0056(86)
		chksum = 0xfe69(65129)
	)
	)
	Parser_extracts = (
		size = 0x00000150(336)
	)
Section parse_udp finished
-------------------------------------------------------------------
processing section accept in stage 4
-------------------------------------------------------------------
Section accept starting


	method move_to_section = done(0)

updated tuples:
	control = (
		offset = 0x0150(336)
		virtual_offset = 0x0150(336)
		section = 0x0(0)
		activeBank = 0x0(0)
		done = 0x1(1)
		error = 0x0(0)
	)
	hdr = (
		eth = (
		isValid = 0x1(1)
		dst = 0x000000000000(0)
		src = 0x000000000000(0)
		type = 0x0800(2048)
	)
		fec = (
		isValid = 0x0(0)
		traffic_class = 0x0(0)
		block_index = 0x00(0)
		packet_index = 0x00(0)
		original_type = 0x0000(0)
	)
		ipv4 = (
		isValid = 0x1(1)
		version = 0x4(4)
		ihl = 0x5(5)
		diffserv = 0x00(0)
		totallen = 0x006a(106)
		identification = 0x76de(30430)
		flags = 0x2(2)
		fragoffset = 0x0000(0)
		ttl = 0x40(64)
		protocol = 0x11(17)
		hdrchecksum = 0xc5a2(50594)
		srcAddr = 0x7f000001(2130706433)
		dstAddr = 0x7f000001(2130706433)
	)
		udp = (
		isValid = 0x1(1)
		sport = 0xa9d3(43475)
		dport = 0x2bcb(11211)
		len = 0x0056(86)
		chksum = 0xfe69(65129)
	)
	)
	Parser_extracts = (
		size = 0x00000150(336)
	)
Section accept finished
-------------------------------------------------------------------
final inout and output tuples:

Note: this engine's wrapper will clear the upper control tuple fields on output, except for the 'control.error' field.

	control = (
		offset = 0x0000(0)
		virtual_offset = 0x0000(0)
		section = 0x0(0)
		activeBank = 0x0(0)
		done = 0x0(0)
		error = 0x0(0)
	)
	hdr = (
		eth = (
		isValid = 0x1(1)
		dst = 0x000000000000(0)
		src = 0x000000000000(0)
		type = 0x0800(2048)
	)
		fec = (
		isValid = 0x0(0)
		traffic_class = 0x0(0)
		block_index = 0x00(0)
		packet_index = 0x00(0)
		original_type = 0x0000(0)
	)
		ipv4 = (
		isValid = 0x1(1)
		version = 0x4(4)
		ihl = 0x5(5)
		diffserv = 0x00(0)
		totallen = 0x006a(106)
		identification = 0x76de(30430)
		flags = 0x2(2)
		fragoffset = 0x0000(0)
		ttl = 0x40(64)
		protocol = 0x11(17)
		hdrchecksum = 0xc5a2(50594)
		srcAddr = 0x7f000001(2130706433)
		dstAddr = 0x7f000001(2130706433)
	)
		udp = (
		isValid = 0x1(1)
		sport = 0xa9d3(43475)
		dport = 0x2bcb(11211)
		len = 0x0056(86)
		chksum = 0xfe69(65129)
	)
	)
	Parser_extracts = (
		size = 0x00000150(336)
	)
Exiting engine Parser
===================================================================
===================================================================
Entering engine CheckCache_lvl
input packet (0 bytes)
initial input and inout tuples:
	hdr = (
		eth = (
		isValid = 0x1(1)
		dst = 0x000000000000(0)
		src = 0x000000000000(0)
		type = 0x0800(2048)
	)
		fec = (
		isValid = 0x0(0)
		traffic_class = 0x0(0)
		block_index = 0x00(0)
		packet_index = 0x00(0)
		original_type = 0x0000(0)
	)
		ipv4 = (
		isValid = 0x1(1)
		version = 0x4(4)
		ihl = 0x5(5)
		diffserv = 0x00(0)
		totallen = 0x006a(106)
		identification = 0x76de(30430)
		flags = 0x2(2)
		fragoffset = 0x0000(0)
		ttl = 0x40(64)
		protocol = 0x11(17)
		hdrchecksum = 0xc5a2(50594)
		srcAddr = 0x7f000001(2130706433)
		dstAddr = 0x7f000001(2130706433)
	)
		udp = (
		isValid = 0x1(1)
		sport = 0xa9d3(43475)
		dport = 0x2bcb(11211)
		len = 0x0056(86)
		chksum = 0xfe69(65129)
	)
	)
	ioports = (
		ingress_port = 0x0(0)
		egress_port = 0x0(0)
	)
clear internal and output-only tuples
	control = (
		offset = 0x0000(0)
		virtual_offset = 0x0000(0)
		section = 0x0(0)
		activeBank = 0x0(0)
		done = 0x0(0)
		error = 0x0(0)
	)
	CheckCache_fl = (
		forward_1 = 0x0(0)
	)
	local_state = (
		id = 0x0000(0)
	)
processing section setup in stage 1
-------------------------------------------------------------------
Section setup starting


	method move_to_section = done(0)

updated tuples:
	control = (
		offset = 0x0000(0)
		virtual_offset = 0x0000(0)
		section = 0x0(0)
		activeBank = 0x0(0)
		done = 0x1(1)
		error = 0x0(0)
	)
	CheckCache_fl = (
		forward_1 = 0x0(0)
	)
	hdr = (
		eth = (
		isValid = 0x1(1)
		dst = 0x000000000000(0)
		src = 0x000000000000(0)
		type = 0x0800(2048)
	)
		fec = (
		isValid = 0x0(0)
		traffic_class = 0x0(0)
		block_index = 0x00(0)
		packet_index = 0x00(0)
		original_type = 0x0000(0)
	)
		ipv4 = (
		isValid = 0x1(1)
		version = 0x4(4)
		ihl = 0x5(5)
		diffserv = 0x00(0)
		totallen = 0x006a(106)
		identification = 0x76de(30430)
		flags = 0x2(2)
		fragoffset = 0x0000(0)
		ttl = 0x40(64)
		protocol = 0x11(17)
		hdrchecksum = 0xc5a2(50594)
		srcAddr = 0x7f000001(2130706433)
		dstAddr = 0x7f000001(2130706433)
	)
		udp = (
		isValid = 0x1(1)
		sport = 0xa9d3(43475)
		dport = 0x2bcb(11211)
		len = 0x0056(86)
		chksum = 0xfe69(65129)
	)
	)
	ioports = (
		ingress_port = 0x0(0)
		egress_port = 0x0(0)
	)
	local_state = (
		id = 0x0000(0)
	)
Section setup finished
-------------------------------------------------------------------
final inout and output tuples:

Note: this engine's wrapper will clear the upper control tuple fields on output, except for the 'control.error' field.

	CheckCache_fl = (
		forward_1 = 0x0(0)
	)
	hdr = (
		eth = (
		isValid = 0x1(1)
		dst = 0x000000000000(0)
		src = 0x000000000000(0)
		type = 0x0800(2048)
	)
		fec = (
		isValid = 0x0(0)
		traffic_class = 0x0(0)
		block_index = 0x00(0)
		packet_index = 0x00(0)
		original_type = 0x0000(0)
	)
		ipv4 = (
		isValid = 0x1(1)
		version = 0x4(4)
		ihl = 0x5(5)
		diffserv = 0x00(0)
		totallen = 0x006a(106)
		identification = 0x76de(30430)
		flags = 0x2(2)
		fragoffset = 0x0000(0)
		ttl = 0x40(64)
		protocol = 0x11(17)
		hdrchecksum = 0xc5a2(50594)
		srcAddr = 0x7f000001(2130706433)
		dstAddr = 0x7f000001(2130706433)
	)
		udp = (
		isValid = 0x1(1)
		sport = 0xa9d3(43475)
		dport = 0x2bcb(11211)
		len = 0x0056(86)
		chksum = 0xfe69(65129)
	)
	)
	ioports = (
		ingress_port = 0x0(0)
		egress_port = 0x0(0)
	)
	local_state = (
		id = 0x0000(0)
	)
Exiting engine CheckCache_lvl
===================================================================
===================================================================
Entering engine CheckCache_lvl_0
input packet (0 bytes)
initial input and inout tuples:
	CheckCache_fl = (
		forward_1 = 0x0(0)
	)
	hdr = (
		eth = (
		isValid = 0x1(1)
		dst = 0x000000000000(0)
		src = 0x000000000000(0)
		type = 0x0800(2048)
	)
		fec = (
		isValid = 0x0(0)
		traffic_class = 0x0(0)
		block_index = 0x00(0)
		packet_index = 0x00(0)
		original_type = 0x0000(0)
	)
		ipv4 = (
		isValid = 0x1(1)
		version = 0x4(4)
		ihl = 0x5(5)
		diffserv = 0x00(0)
		totallen = 0x006a(106)
		identification = 0x76de(30430)
		flags = 0x2(2)
		fragoffset = 0x0000(0)
		ttl = 0x40(64)
		protocol = 0x11(17)
		hdrchecksum = 0xc5a2(50594)
		srcAddr = 0x7f000001(2130706433)
		dstAddr = 0x7f000001(2130706433)
	)
		udp = (
		isValid = 0x1(1)
		sport = 0xa9d3(43475)
		dport = 0x2bcb(11211)
		len = 0x0056(86)
		chksum = 0xfe69(65129)
	)
	)
	ioports = (
		ingress_port = 0x0(0)
		egress_port = 0x0(0)
	)
	local_state = (
		id = 0x0000(0)
	)
clear internal and output-only tuples
	control = (
		offset = 0x0000(0)
		virtual_offset = 0x0000(0)
		section = 0x0(0)
		activeBank = 0x0(0)
		done = 0x0(0)
		error = 0x0(0)
	)
	memcached_input = (
		stateful_valid = 0x0(0)
	)
processing section condition_sec_0 in stage 1
-------------------------------------------------------------------
Section condition_sec_0 starting

	method update (tuples)
		local_state.id = 0x0005(5)


	method move_to_section = condition_sec

updated tuples:
	control = (
		offset = 0x0000(0)
		virtual_offset = 0x0000(0)
		section = 0x2(2)
		activeBank = 0x0(0)
		done = 0x0(0)
		error = 0x0(0)
	)
	CheckCache_fl = (
		forward_1 = 0x0(0)
	)
	hdr = (
		eth = (
		isValid = 0x1(1)
		dst = 0x000000000000(0)
		src = 0x000000000000(0)
		type = 0x0800(2048)
	)
		fec = (
		isValid = 0x0(0)
		traffic_class = 0x0(0)
		block_index = 0x00(0)
		packet_index = 0x00(0)
		original_type = 0x0000(0)
	)
		ipv4 = (
		isValid = 0x1(1)
		version = 0x4(4)
		ihl = 0x5(5)
		diffserv = 0x00(0)
		totallen = 0x006a(106)
		identification = 0x76de(30430)
		flags = 0x2(2)
		fragoffset = 0x0000(0)
		ttl = 0x40(64)
		protocol = 0x11(17)
		hdrchecksum = 0xc5a2(50594)
		srcAddr = 0x7f000001(2130706433)
		dstAddr = 0x7f000001(2130706433)
	)
		udp = (
		isValid = 0x1(1)
		sport = 0xa9d3(43475)
		dport = 0x2bcb(11211)
		len = 0x0056(86)
		chksum = 0xfe69(65129)
	)
	)
	ioports = (
		ingress_port = 0x0(0)
		egress_port = 0x0(0)
	)
	local_state = (
		id = 0x0005(5)
	)
	memcached_input = (
		stateful_valid = 0x0(0)
	)
Section condition_sec_0 finished
-------------------------------------------------------------------
processing section condition_sec in stage 2
-------------------------------------------------------------------
Section condition_sec starting

	method update (tuples)
		local_state.id = 0x0005(5)


	method move_to_section = act_0_sec

updated tuples:
	control = (
		offset = 0x0000(0)
		virtual_offset = 0x0000(0)
		section = 0x1(1)
		activeBank = 0x0(0)
		done = 0x0(0)
		error = 0x0(0)
	)
	CheckCache_fl = (
		forward_1 = 0x0(0)
	)
	hdr = (
		eth = (
		isValid = 0x1(1)
		dst = 0x000000000000(0)
		src = 0x000000000000(0)
		type = 0x0800(2048)
	)
		fec = (
		isValid = 0x0(0)
		traffic_class = 0x0(0)
		block_index = 0x00(0)
		packet_index = 0x00(0)
		original_type = 0x0000(0)
	)
		ipv4 = (
		isValid = 0x1(1)
		version = 0x4(4)
		ihl = 0x5(5)
		diffserv = 0x00(0)
		totallen = 0x006a(106)
		identification = 0x76de(30430)
		flags = 0x2(2)
		fragoffset = 0x0000(0)
		ttl = 0x40(64)
		protocol = 0x11(17)
		hdrchecksum = 0xc5a2(50594)
		srcAddr = 0x7f000001(2130706433)
		dstAddr = 0x7f000001(2130706433)
	)
		udp = (
		isValid = 0x1(1)
		sport = 0xa9d3(43475)
		dport = 0x2bcb(11211)
		len = 0x0056(86)
		chksum = 0xfe69(65129)
	)
	)
	ioports = (
		ingress_port = 0x0(0)
		egress_port = 0x0(0)
	)
	local_state = (
		id = 0x0005(5)
	)
	memcached_input = (
		stateful_valid = 0x0(0)
	)
Section condition_sec finished
-------------------------------------------------------------------
processing section act_0_sec in stage 3
-------------------------------------------------------------------
Section act_0_sec starting

	method update (tuples)
		memcached_input.stateful_valid = 0x1(1)
		local_state.id = 0x0004(4)


	method move_to_section = local_end

updated tuples:
	control = (
		offset = 0x0000(0)
		virtual_offset = 0x0000(0)
		section = 0x4(4)
		activeBank = 0x0(0)
		done = 0x0(0)
		error = 0x0(0)
	)
	CheckCache_fl = (
		forward_1 = 0x0(0)
	)
	hdr = (
		eth = (
		isValid = 0x1(1)
		dst = 0x000000000000(0)
		src = 0x000000000000(0)
		type = 0x0800(2048)
	)
		fec = (
		isValid = 0x0(0)
		traffic_class = 0x0(0)
		block_index = 0x00(0)
		packet_index = 0x00(0)
		original_type = 0x0000(0)
	)
		ipv4 = (
		isValid = 0x1(1)
		version = 0x4(4)
		ihl = 0x5(5)
		diffserv = 0x00(0)
		totallen = 0x006a(106)
		identification = 0x76de(30430)
		flags = 0x2(2)
		fragoffset = 0x0000(0)
		ttl = 0x40(64)
		protocol = 0x11(17)
		hdrchecksum = 0xc5a2(50594)
		srcAddr = 0x7f000001(2130706433)
		dstAddr = 0x7f000001(2130706433)
	)
		udp = (
		isValid = 0x1(1)
		sport = 0xa9d3(43475)
		dport = 0x2bcb(11211)
		len = 0x0056(86)
		chksum = 0xfe69(65129)
	)
	)
	ioports = (
		ingress_port = 0x0(0)
		egress_port = 0x0(0)
	)
	local_state = (
		id = 0x0004(4)
	)
	memcached_input = (
		stateful_valid = 0x1(1)
	)
Section act_0_sec finished
-------------------------------------------------------------------
processing section local_end in stage 4
-------------------------------------------------------------------
Section local_end starting


	method move_to_section = done(0)

updated tuples:
	control = (
		offset = 0x0000(0)
		virtual_offset = 0x0000(0)
		section = 0x0(0)
		activeBank = 0x0(0)
		done = 0x1(1)
		error = 0x0(0)
	)
	CheckCache_fl = (
		forward_1 = 0x0(0)
	)
	hdr = (
		eth = (
		isValid = 0x1(1)
		dst = 0x000000000000(0)
		src = 0x000000000000(0)
		type = 0x0800(2048)
	)
		fec = (
		isValid = 0x0(0)
		traffic_class = 0x0(0)
		block_index = 0x00(0)
		packet_index = 0x00(0)
		original_type = 0x0000(0)
	)
		ipv4 = (
		isValid = 0x1(1)
		version = 0x4(4)
		ihl = 0x5(5)
		diffserv = 0x00(0)
		totallen = 0x006a(106)
		identification = 0x76de(30430)
		flags = 0x2(2)
		fragoffset = 0x0000(0)
		ttl = 0x40(64)
		protocol = 0x11(17)
		hdrchecksum = 0xc5a2(50594)
		srcAddr = 0x7f000001(2130706433)
		dstAddr = 0x7f000001(2130706433)
	)
		udp = (
		isValid = 0x1(1)
		sport = 0xa9d3(43475)
		dport = 0x2bcb(11211)
		len = 0x0056(86)
		chksum = 0xfe69(65129)
	)
	)
	ioports = (
		ingress_port = 0x0(0)
		egress_port = 0x0(0)
	)
	local_state = (
		id = 0x0004(4)
	)
	memcached_input = (
		stateful_valid = 0x1(1)
	)
Section local_end finished
-------------------------------------------------------------------
final inout and output tuples:

Note: this engine's wrapper will clear the upper control tuple fields on output, except for the 'control.error' field.

	CheckCache_fl = (
		forward_1 = 0x0(0)
	)
	hdr = (
		eth = (
		isValid = 0x1(1)
		dst = 0x000000000000(0)
		src = 0x000000000000(0)
		type = 0x0800(2048)
	)
		fec = (
		isValid = 0x0(0)
		traffic_class = 0x0(0)
		block_index = 0x00(0)
		packet_index = 0x00(0)
		original_type = 0x0000(0)
	)
		ipv4 = (
		isValid = 0x1(1)
		version = 0x4(4)
		ihl = 0x5(5)
		diffserv = 0x00(0)
		totallen = 0x006a(106)
		identification = 0x76de(30430)
		flags = 0x2(2)
		fragoffset = 0x0000(0)
		ttl = 0x40(64)
		protocol = 0x11(17)
		hdrchecksum = 0xc5a2(50594)
		srcAddr = 0x7f000001(2130706433)
		dstAddr = 0x7f000001(2130706433)
	)
		udp = (
		isValid = 0x1(1)
		sport = 0xa9d3(43475)
		dport = 0x2bcb(11211)
		len = 0x0056(86)
		chksum = 0xfe69(65129)
	)
	)
	ioports = (
		ingress_port = 0x0(0)
		egress_port = 0x0(0)
	)
	local_state = (
		id = 0x0004(4)
	)
	memcached_input = (
		stateful_valid = 0x1(1)
	)
Exiting engine CheckCache_lvl_0
===================================================================
===================================================================
Entering engine memcached_0
input packet (120 bytes)
 0x0000(0) : 00 00 00 00 00 00 00 00 00 00 00 00 08 00 45 00 
0x0010(16) : 00 6a 76 de 40 00 40 11 c5 a2 7f 00 00 01 7f 00 
0x0020(32) : 00 01 a9 d3 2b cb 00 56 fe 69 00 03 00 00 00 01 
0x0030(48) : 01 00 67 65 74 20 11 10 10 10 10 10 10 10 49 4f 
0x0040(64) : 6a 53 2e 45 6d 4b 45 34 6d 4d 36 7a 6c 30 65 61 
0x0050(80) : 64 63 72 67 65 6e 34 68 77 6a 49 30 73 61 50 5a 
0x0060(96) : 30 4e 6f 6d 68 30 72 52 4e 78 50 36 79 31 67 5a 
0x0070(112) : 64 56 45 46 48 49 0d 0a 
initial input and inout tuples:
	control = (
		offset = 0x0000(0)
		virtual_offset = 0x0000(0)
		section = 0x0(0)
		activeBank = 0x0(0)
		done = 0x0(0)
		error = 0x0(0)
	)
	CheckCache_fl = (
		forward_1 = 0x0(0)
	)
	hdr = (
		eth = (
		isValid = 0x1(1)
		dst = 0x000000000000(0)
		src = 0x000000000000(0)
		type = 0x0800(2048)
	)
		fec = (
		isValid = 0x0(0)
		traffic_class = 0x0(0)
		block_index = 0x00(0)
		packet_index = 0x00(0)
		original_type = 0x0000(0)
	)
		ipv4 = (
		isValid = 0x1(1)
		version = 0x4(4)
		ihl = 0x5(5)
		diffserv = 0x00(0)
		totallen = 0x006a(106)
		identification = 0x76de(30430)
		flags = 0x2(2)
		fragoffset = 0x0000(0)
		ttl = 0x40(64)
		protocol = 0x11(17)
		hdrchecksum = 0xc5a2(50594)
		srcAddr = 0x7f000001(2130706433)
		dstAddr = 0x7f000001(2130706433)
	)
		udp = (
		isValid = 0x1(1)
		sport = 0xa9d3(43475)
		dport = 0x2bcb(11211)
		len = 0x0056(86)
		chksum = 0xfe69(65129)
	)
	)
	ioports = (
		ingress_port = 0x0(0)
		egress_port = 0x0(0)
	)
	local_state = (
		id = 0x0004(4)
	)
	Parser_extracts = (
		size = 0x00000150(336)
	)
	memcached_input = (
		stateful_valid = 0x1(1)
	)
clear internal and output-only tuples
	memcached_output = (
		forward = 0x0(0)
	)
Enter USER ENGINE FUNCTION
0
134235392
29967044459905041
14241084609675755264
468199414628438
18332183771073216513
72171279475544336
1157442765409241423
7661518266808616244
7876011222769886561
7233751214896067688
8604770510487769178
3480842077694095954
5654357527055394650
7230042419952684298
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<Inside MemCore<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<< 
The No. 3Packet
1
576
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<Inside MemCore<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<< 
===================================================================
Entering engine CheckCache_lvl_1
input packet (0 bytes)
initial input and inout tuples:
	CheckCache_fl = (
		forward_1 = 0x0(0)
	)
	hdr = (
		eth = (
		isValid = 0x1(1)
		dst = 0x000000000000(0)
		src = 0x000000000000(0)
		type = 0x0800(2048)
	)
		fec = (
		isValid = 0x0(0)
		traffic_class = 0x0(0)
		block_index = 0x00(0)
		packet_index = 0x00(0)
		original_type = 0x0000(0)
	)
		ipv4 = (
		isValid = 0x1(1)
		version = 0x4(4)
		ihl = 0x5(5)
		diffserv = 0x00(0)
		totallen = 0x047a(1146)
		identification = 0x76de(30430)
		flags = 0x2(2)
		fragoffset = 0x0000(0)
		ttl = 0x40(64)
		protocol = 0x11(17)
		hdrchecksum = 0xc5a2(50594)
		srcAddr = 0x7f000001(2130706433)
		dstAddr = 0x7f000001(2130706433)
	)
		udp = (
		isValid = 0x1(1)
		sport = 0x2bcb(11211)
		dport = 0xa9d3(43475)
		len = 0x0466(1126)
		chksum = 0xfe69(65129)
	)
	)
	ioports = (
		ingress_port = 0x0(0)
		egress_port = 0x0(0)
	)
	local_state = (
		id = 0x0004(4)
	)
	memcached_output = (
		forward = 0x0(0)
	)
clear internal and output-only tuples
	control = (
		offset = 0x0000(0)
		virtual_offset = 0x0000(0)
		section = 0x0(0)
		activeBank = 0x0(0)
		done = 0x0(0)
		error = 0x0(0)
	)
processing section local_start in stage 1
-------------------------------------------------------------------
Section local_start starting


	method move_to_section = memcached_sec

updated tuples:
	control = (
		offset = 0x0000(0)
		virtual_offset = 0x0000(0)
		section = 0x2(2)
		activeBank = 0x0(0)
		done = 0x0(0)
		error = 0x0(0)
	)
	CheckCache_fl = (
		forward_1 = 0x0(0)
	)
	hdr = (
		eth = (
		isValid = 0x1(1)
		dst = 0x000000000000(0)
		src = 0x000000000000(0)
		type = 0x0800(2048)
	)
		fec = (
		isValid = 0x0(0)
		traffic_class = 0x0(0)
		block_index = 0x00(0)
		packet_index = 0x00(0)
		original_type = 0x0000(0)
	)
		ipv4 = (
		isValid = 0x1(1)
		version = 0x4(4)
		ihl = 0x5(5)
		diffserv = 0x00(0)
		totallen = 0x047a(1146)
		identification = 0x76de(30430)
		flags = 0x2(2)
		fragoffset = 0x0000(0)
		ttl = 0x40(64)
		protocol = 0x11(17)
		hdrchecksum = 0xc5a2(50594)
		srcAddr = 0x7f000001(2130706433)
		dstAddr = 0x7f000001(2130706433)
	)
		udp = (
		isValid = 0x1(1)
		sport = 0x2bcb(11211)
		dport = 0xa9d3(43475)
		len = 0x0466(1126)
		chksum = 0xfe69(65129)
	)
	)
	ioports = (
		ingress_port = 0x0(0)
		egress_port = 0x0(0)
	)
	local_state = (
		id = 0x0004(4)
	)
	memcached_output = (
		forward = 0x0(0)
	)
Section local_start finished
-------------------------------------------------------------------
processing section memcached_sec in stage 2
-------------------------------------------------------------------
Section memcached_sec starting

	method update (tuples)
		CheckCache_fl.forward_1 = 0x0(0)


	method move_to_section = sink

updated tuples:
	control = (
		offset = 0x0000(0)
		virtual_offset = 0x0000(0)
		section = 0x3(3)
		activeBank = 0x0(0)
		done = 0x0(0)
		error = 0x0(0)
	)
	CheckCache_fl = (
		forward_1 = 0x0(0)
	)
	hdr = (
		eth = (
		isValid = 0x1(1)
		dst = 0x000000000000(0)
		src = 0x000000000000(0)
		type = 0x0800(2048)
	)
		fec = (
		isValid = 0x0(0)
		traffic_class = 0x0(0)
		block_index = 0x00(0)
		packet_index = 0x00(0)
		original_type = 0x0000(0)
	)
		ipv4 = (
		isValid = 0x1(1)
		version = 0x4(4)
		ihl = 0x5(5)
		diffserv = 0x00(0)
		totallen = 0x047a(1146)
		identification = 0x76de(30430)
		flags = 0x2(2)
		fragoffset = 0x0000(0)
		ttl = 0x40(64)
		protocol = 0x11(17)
		hdrchecksum = 0xc5a2(50594)
		srcAddr = 0x7f000001(2130706433)
		dstAddr = 0x7f000001(2130706433)
	)
		udp = (
		isValid = 0x1(1)
		sport = 0x2bcb(11211)
		dport = 0xa9d3(43475)
		len = 0x0466(1126)
		chksum = 0xfe69(65129)
	)
	)
	ioports = (
		ingress_port = 0x0(0)
		egress_port = 0x0(0)
	)
	local_state = (
		id = 0x0004(4)
	)
	memcached_output = (
		forward = 0x0(0)
	)
Section memcached_sec finished
-------------------------------------------------------------------
processing section sink in stage 3
-------------------------------------------------------------------
Section sink starting


	method move_to_section = done(0)

updated tuples:
	control = (
		offset = 0x0000(0)
		virtual_offset = 0x0000(0)
		section = 0x0(0)
		activeBank = 0x0(0)
		done = 0x1(1)
		error = 0x0(0)
	)
	CheckCache_fl = (
		forward_1 = 0x0(0)
	)
	hdr = (
		eth = (
		isValid = 0x1(1)
		dst = 0x000000000000(0)
		src = 0x000000000000(0)
		type = 0x0800(2048)
	)
		fec = (
		isValid = 0x0(0)
		traffic_class = 0x0(0)
		block_index = 0x00(0)
		packet_index = 0x00(0)
		original_type = 0x0000(0)
	)
		ipv4 = (
		isValid = 0x1(1)
		version = 0x4(4)
		ihl = 0x5(5)
		diffserv = 0x00(0)
		totallen = 0x047a(1146)
		identification = 0x76de(30430)
		flags = 0x2(2)
		fragoffset = 0x0000(0)
		ttl = 0x40(64)
		protocol = 0x11(17)
		hdrchecksum = 0xc5a2(50594)
		srcAddr = 0x7f000001(2130706433)
		dstAddr = 0x7f000001(2130706433)
	)
		udp = (
		isValid = 0x1(1)
		sport = 0x2bcb(11211)
		dport = 0xa9d3(43475)
		len = 0x0466(1126)
		chksum = 0xfe69(65129)
	)
	)
	ioports = (
		ingress_port = 0x0(0)
		egress_port = 0x0(0)
	)
	local_state = (
		id = 0x0004(4)
	)
	memcached_output = (
		forward = 0x0(0)
	)
Section sink finished
-------------------------------------------------------------------
final inout and output tuples:

Note: this engine's wrapper will clear the upper control tuple fields on output, except for the 'control.error' field.

	hdr = (
		eth = (
		isValid = 0x1(1)
		dst = 0x000000000000(0)
		src = 0x000000000000(0)
		type = 0x0800(2048)
	)
		fec = (
		isValid = 0x0(0)
		traffic_class = 0x0(0)
		block_index = 0x00(0)
		packet_index = 0x00(0)
		original_type = 0x0000(0)
	)
		ipv4 = (
		isValid = 0x1(1)
		version = 0x4(4)
		ihl = 0x5(5)
		diffserv = 0x00(0)
		totallen = 0x047a(1146)
		identification = 0x76de(30430)
		flags = 0x2(2)
		fragoffset = 0x0000(0)
		ttl = 0x40(64)
		protocol = 0x11(17)
		hdrchecksum = 0xc5a2(50594)
		srcAddr = 0x7f000001(2130706433)
		dstAddr = 0x7f000001(2130706433)
	)
		udp = (
		isValid = 0x1(1)
		sport = 0x2bcb(11211)
		dport = 0xa9d3(43475)
		len = 0x0466(1126)
		chksum = 0xfe69(65129)
	)
	)
	ioports = (
		ingress_port = 0x0(0)
		egress_port = 0x0(0)
	)
Exiting engine CheckCache_lvl_1
===================================================================
===================================================================
Entering engine Deparser
input packet (1160 bytes)
 0x0000(0) : 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 
0x0010(16) : 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 
0x0020(32) : 00 00 00 00 00 00 00 00 00 00 00 03 00 00 00 01 
0x0030(48) : 00 00 56 41 4c 55 45 20 11 10 10 10 10 10 10 10 
0x0040(64) : 49 4f 6a 53 2e 45 6d 4b 45 34 6d 4d 36 7a 6c 30 
0x0050(80) : 65 61 64 63 72 67 65 6e 34 68 77 6a 49 30 73 61 
0x0060(96) : 50 5a 30 4e 6f 6d 68 30 72 52 4e 78 50 36 79 31 
0x0070(112) : 67 5a 64 56 45 46 48 49 20 30 20 31 30 32 34 0d 
0x0080(128) : 0a 49 4f 6a 53 2e 45 6d 4b 45 34 6d 4d 36 7a 6c 
0x0090(144) : 30 65 61 64 63 72 67 65 6e 34 68 77 6a 49 30 73 
0x00a0(160) : 61 50 5a 30 4e 6f 6d 68 30 72 52 4e 78 50 36 79 
0x00b0(176) : 31 67 5a 64 56 45 46 48 49 78 42 2d 44 42 72 6e 
0x00c0(192) : 61 50 6f 78 42 59 64 42 4e 32 59 4a 52 66 46 53 
0x00d0(208) : 4a 6f 33 70 30 4a 34 49 45 46 49 52 51 37 43 2d 
0x00e0(224) : 57 2e 77 68 58 58 74 75 61 50 42 2d 32 51 53 4d 
0x00f0(240) : 44 56 39 44 6f 44 57 30 53 6f 52 73 76 65 72 51 
0x0100(256) : 63 6d 35 37 48 79 30 72 4d 42 72 4f 63 48 6b 70 
0x0110(272) : 6d 74 30 5a 34 57 5a 57 49 2d 4e 43 64 43 63 44 
0x0120(288) : 79 68 4c 45 65 4c 33 2e 57 75 4d 36 39 35 76 77 
0x0130(304) : 79 77 54 31 51 30 58 6a 2d 75 76 63 35 56 71 31 
0x0140(320) : 41 39 46 6f 55 4a 6d 2e 42 37 35 4c 43 2e 46 38 
0x0150(336) : 75 69 39 4a 69 68 30 69 5a 76 49 65 4f 36 67 59 
0x0160(352) : 46 76 4c 6a 43 35 69 4f 43 6e 6a 4f 6c 79 58 65 
0x0170(368) : 65 67 78 4b 4c 78 30 76 71 4a 58 43 50 42 6b 66 
0x0180(384) : 35 33 4d 48 39 32 66 4c 70 4d 6b 5a 49 46 42 77 
0x0190(400) : 76 36 46 46 31 46 38 72 59 66 31 79 72 6c 62 77 
0x01a0(416) : 70 78 42 79 2e 72 48 6e 42 2d 4b 55 45 56 4f 38 
0x01b0(432) : 62 64 4e 63 74 56 52 50 38 53 4c 7a 43 77 74 2d 
0x01c0(448) : 73 33 78 71 75 43 62 33 43 77 58 51 50 77 59 2d 
0x01d0(464) : 58 76 62 4f 4f 31 6f 58 54 37 55 66 32 4d 65 75 
0x01e0(480) : 50 5a 69 48 6d 48 4b 79 42 73 4d 62 6d 76 61 48 
0x01f0(496) : 6f 39 67 42 41 53 69 65 5a 41 48 62 57 77 54 76 
0x0200(512) : 54 39 41 44 52 56 39 63 4c 57 42 35 50 6c 4d 42 
0x0210(528) : 76 30 4d 33 53 32 68 30 44 7a 62 6a 74 33 64 4b 
0x0220(544) : 43 6e 59 64 47 68 45 62 42 50 67 61 39 31 6d 32 
0x0230(560) : 31 36 35 55 39 6e 55 4d 6b 33 33 62 36 67 76 4a 
0x0240(576) : 53 52 77 69 37 38 49 49 59 79 74 68 7a 64 6a 2d 
0x0250(592) : 6a 6f 54 73 5a 78 43 48 2e 47 73 35 77 6d 4f 4d 
0x0260(608) : 42 49 33 49 52 4c 62 7a 48 53 65 46 33 4c 45 6d 
0x0270(624) : 37 68 64 68 63 70 79 61 33 70 66 2e 5a 31 4b 6b 
0x0280(640) : 4b 4e 31 6c 69 63 69 2e 32 4b 44 35 66 52 72 6d 
0x0290(656) : 36 53 52 69 47 4f 47 4a 42 77 48 6b 78 63 53 46 
0x02a0(672) : 7a 54 2e 67 33 67 65 35 2e 72 41 64 47 30 4f 4d 
0x02b0(688) : 53 70 32 69 42 49 30 4d 43 48 34 38 74 58 4e 72 
0x02c0(704) : 2e 4d 56 32 30 37 37 2d 79 49 63 43 49 2e 59 6b 
0x02d0(720) : 6f 61 52 7a 73 52 4b 33 69 4f 42 61 76 59 50 75 
0x02e0(736) : 75 75 77 76 2d 31 75 78 4a 55 37 62 54 66 4b 46 
0x02f0(752) : 44 6c 43 33 41 57 36 73 76 48 51 6f 71 70 67 69 
0x0300(768) : 68 61 62 67 63 54 62 76 79 69 56 50 4c 70 65 59 
0x0310(784) : 59 71 63 69 4c 69 59 45 2e 7a 30 6f 6d 68 55 53 
0x0320(800) : 46 34 36 72 58 69 6c 54 4f 45 73 6b 31 55 47 5a 
0x0330(816) : 4a 73 46 65 5a 6e 73 58 6b 73 4a 56 58 6e 78 6e 
0x0340(832) : 72 31 63 4e 6a 4c 71 36 5a 68 71 61 39 34 37 53 
0x0350(848) : 78 4d 34 55 38 77 2d 73 6e 49 4c 49 33 47 33 76 
0x0360(864) : 49 67 47 2d 2d 34 35 5a 6c 76 37 76 2e 46 4c 76 
0x0370(880) : 62 51 4e 6a 4b 4d 61 35 65 76 4f 68 41 52 61 53 
0x0380(896) : 35 71 52 35 76 58 65 65 51 6c 58 4f 2e 74 48 61 
0x0390(912) : 48 65 48 62 2e 72 68 63 6c 33 49 76 55 73 4c 61 
0x03a0(928) : 68 6d 66 61 48 48 43 69 30 6b 34 2d 62 4d 5a 73 
0x03b0(944) : 2e 71 52 7a 67 36 5a 50 39 72 49 65 69 64 43 4e 
0x03c0(960) : 4e 72 78 66 36 37 4c 36 72 50 35 51 6c 65 47 6b 
0x03d0(976) : 54 69 68 37 6f 45 57 79 34 6f 61 6d 50 6d 37 6d 
0x03e0(992) : 62 32 50 68 39 6b 6e 2d 38 74 50 74 56 67 62 79 
0x03f0(1008) : 4d 47 33 38 56 5a 34 5a 4c 65 4a 6b 4f 51 56 7a 
0x0400(1024) : 53 75 65 62 64 51 61 6c 48 2e 63 6d 65 43 6a 2e 
0x0410(1040) : 53 6d 36 78 4b 42 55 66 70 6e 4f 43 42 74 39 64 
0x0420(1056) : 6c 6f 44 4d 43 6e 35 54 6c 69 44 4e 75 77 4c 4b 
0x0430(1072) : 68 53 47 2d 64 6b 65 51 57 30 63 68 74 6d 4a 64 
0x0440(1088) : 59 57 7a 6b 48 33 42 31 6c 4f 4f 64 4a 6b 78 2e 
0x0450(1104) : 41 42 7a 6e 77 62 42 51 63 6f 35 54 59 4f 34 34 
0x0460(1120) : 75 32 6f 41 35 7a 42 71 4c 5a 52 65 48 4d 63 52 
0x0470(1136) : 59 5a 43 53 39 4f 73 6c 41 78 43 69 4b 48 6d 43 
0x0480(1152) : 4a 0d 0a 45 4e 44 0d 0a 
initial input and inout tuples:
	control = (
		offset = 0x0000(0)
		virtual_offset = 0x0000(0)
		section = 0x0(0)
		activeBank = 0x0(0)
		done = 0x0(0)
		error = 0x0(0)
	)
	hdr = (
		eth = (
		isValid = 0x1(1)
		dst = 0x000000000000(0)
		src = 0x000000000000(0)
		type = 0x0800(2048)
	)
		fec = (
		isValid = 0x0(0)
		traffic_class = 0x0(0)
		block_index = 0x00(0)
		packet_index = 0x00(0)
		original_type = 0x0000(0)
	)
		ipv4 = (
		isValid = 0x1(1)
		version = 0x4(4)
		ihl = 0x5(5)
		diffserv = 0x00(0)
		totallen = 0x047a(1146)
		identification = 0x76de(30430)
		flags = 0x2(2)
		fragoffset = 0x0000(0)
		ttl = 0x40(64)
		protocol = 0x11(17)
		hdrchecksum = 0xc5a2(50594)
		srcAddr = 0x7f000001(2130706433)
		dstAddr = 0x7f000001(2130706433)
	)
		udp = (
		isValid = 0x1(1)
		sport = 0x2bcb(11211)
		dport = 0xa9d3(43475)
		len = 0x0466(1126)
		chksum = 0xfe69(65129)
	)
	)
	Deparser_extracts = (
		size = 0x00000150(336)
	)
clear internal and output-only tuples
processing section extract_headers_sec in stage 1
-------------------------------------------------------------------
Section extract_headers_sec starting


	method remove
	removing 42 bytes at byte 0:
 0x0000(0) : 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 
0x0010(16) : 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 
0x0020(32) : 00 00 00 00 00 00 00 00 00 00 
	method move_to_section = act_sec

updated tuples:
	control = (
		offset = 0x0000(0)
		virtual_offset = 0x0150(336)
		section = 0x1(1)
		activeBank = 0x0(0)
		done = 0x0(0)
		error = 0x0(0)
	)
	hdr = (
		eth = (
		isValid = 0x1(1)
		dst = 0x000000000000(0)
		src = 0x000000000000(0)
		type = 0x0800(2048)
	)
		fec = (
		isValid = 0x0(0)
		traffic_class = 0x0(0)
		block_index = 0x00(0)
		packet_index = 0x00(0)
		original_type = 0x0000(0)
	)
		ipv4 = (
		isValid = 0x1(1)
		version = 0x4(4)
		ihl = 0x5(5)
		diffserv = 0x00(0)
		totallen = 0x047a(1146)
		identification = 0x76de(30430)
		flags = 0x2(2)
		fragoffset = 0x0000(0)
		ttl = 0x40(64)
		protocol = 0x11(17)
		hdrchecksum = 0xc5a2(50594)
		srcAddr = 0x7f000001(2130706433)
		dstAddr = 0x7f000001(2130706433)
	)
		udp = (
		isValid = 0x1(1)
		sport = 0x2bcb(11211)
		dport = 0xa9d3(43475)
		len = 0x0466(1126)
		chksum = 0xfe69(65129)
	)
	)
	Deparser_extracts = (
		size = 0x00000150(336)
	)
Section extract_headers_sec finished
-------------------------------------------------------------------
processing section act_sec in stage 2
-------------------------------------------------------------------
Section act_sec starting


	method move_to_section = emit_3

updated tuples:
	control = (
		offset = 0x0000(0)
		virtual_offset = 0x0150(336)
		section = 0x5(5)
		activeBank = 0x0(0)
		done = 0x0(0)
		error = 0x0(0)
	)
	hdr = (
		eth = (
		isValid = 0x1(1)
		dst = 0x000000000000(0)
		src = 0x000000000000(0)
		type = 0x0800(2048)
	)
		fec = (
		isValid = 0x0(0)
		traffic_class = 0x0(0)
		block_index = 0x00(0)
		packet_index = 0x00(0)
		original_type = 0x0000(0)
	)
		ipv4 = (
		isValid = 0x1(1)
		version = 0x4(4)
		ihl = 0x5(5)
		diffserv = 0x00(0)
		totallen = 0x047a(1146)
		identification = 0x76de(30430)
		flags = 0x2(2)
		fragoffset = 0x0000(0)
		ttl = 0x40(64)
		protocol = 0x11(17)
		hdrchecksum = 0xc5a2(50594)
		srcAddr = 0x7f000001(2130706433)
		dstAddr = 0x7f000001(2130706433)
	)
		udp = (
		isValid = 0x1(1)
		sport = 0x2bcb(11211)
		dport = 0xa9d3(43475)
		len = 0x0466(1126)
		chksum = 0xfe69(65129)
	)
	)
	Deparser_extracts = (
		size = 0x00000150(336)
	)
Section act_sec finished
-------------------------------------------------------------------
processing section emit_3 in stage 3
-------------------------------------------------------------------
Section emit_3 starting

	method update (tuples)


	method update (packet)
		 dst = 0x000000000000(0)
		 src = 0x000000000000(0)
		 type = 0x0800(2048)

	method insert
	inserting 14 bytes at byte 0:
 0x0000(0) : 00 00 00 00 00 00 00 00 00 00 00 00 08 00 
	method move_to_section = emit_2

updated tuples:
	control = (
		offset = 0x0070(112)
		virtual_offset = 0x0150(336)
		section = 0x4(4)
		activeBank = 0x0(0)
		done = 0x0(0)
		error = 0x0(0)
	)
	hdr = (
		eth = (
		isValid = 0x1(1)
		dst = 0x000000000000(0)
		src = 0x000000000000(0)
		type = 0x0800(2048)
	)
		fec = (
		isValid = 0x0(0)
		traffic_class = 0x0(0)
		block_index = 0x00(0)
		packet_index = 0x00(0)
		original_type = 0x0000(0)
	)
		ipv4 = (
		isValid = 0x1(1)
		version = 0x4(4)
		ihl = 0x5(5)
		diffserv = 0x00(0)
		totallen = 0x047a(1146)
		identification = 0x76de(30430)
		flags = 0x2(2)
		fragoffset = 0x0000(0)
		ttl = 0x40(64)
		protocol = 0x11(17)
		hdrchecksum = 0xc5a2(50594)
		srcAddr = 0x7f000001(2130706433)
		dstAddr = 0x7f000001(2130706433)
	)
		udp = (
		isValid = 0x1(1)
		sport = 0x2bcb(11211)
		dport = 0xa9d3(43475)
		len = 0x0466(1126)
		chksum = 0xfe69(65129)
	)
	)
	Deparser_extracts = (
		size = 0x00000150(336)
	)
Section emit_3 finished
-------------------------------------------------------------------
processing section emit_2 in stage 4
-------------------------------------------------------------------
Section emit_2 starting

	method update (tuples)


	method update (packet)
		 traffic_class = 0x0(0)
		 block_index = 0x00(0)
		 packet_index = 0x00(0)
		 original_type = 0x0000(0)

	method insert
	inserting 0 bytes at byte 14:
 0x0000(0) :                                           
	method move_to_section = emit_1

updated tuples:
	control = (
		offset = 0x0070(112)
		virtual_offset = 0x0150(336)
		section = 0x3(3)
		activeBank = 0x0(0)
		done = 0x0(0)
		error = 0x0(0)
	)
	hdr = (
		eth = (
		isValid = 0x1(1)
		dst = 0x000000000000(0)
		src = 0x000000000000(0)
		type = 0x0800(2048)
	)
		fec = (
		isValid = 0x0(0)
		traffic_class = 0x0(0)
		block_index = 0x00(0)
		packet_index = 0x00(0)
		original_type = 0x0000(0)
	)
		ipv4 = (
		isValid = 0x1(1)
		version = 0x4(4)
		ihl = 0x5(5)
		diffserv = 0x00(0)
		totallen = 0x047a(1146)
		identification = 0x76de(30430)
		flags = 0x2(2)
		fragoffset = 0x0000(0)
		ttl = 0x40(64)
		protocol = 0x11(17)
		hdrchecksum = 0xc5a2(50594)
		srcAddr = 0x7f000001(2130706433)
		dstAddr = 0x7f000001(2130706433)
	)
		udp = (
		isValid = 0x1(1)
		sport = 0x2bcb(11211)
		dport = 0xa9d3(43475)
		len = 0x0466(1126)
		chksum = 0xfe69(65129)
	)
	)
	Deparser_extracts = (
		size = 0x00000150(336)
	)
Section emit_2 finished
-------------------------------------------------------------------
processing section emit_1 in stage 5
-------------------------------------------------------------------
Section emit_1 starting

	method update (tuples)


	method update (packet)
		 version = 0x4(4)
		 ihl = 0x5(5)
		 diffserv = 0x00(0)
		 totallen = 0x047a(1146)
		 identification = 0x76de(30430)
		 flags = 0x2(2)
		 fragoffset = 0x0000(0)
		 ttl = 0x40(64)
		 protocol = 0x11(17)
		 hdrchecksum = 0xc5a2(50594)
		 srcAddr = 0x7f000001(2130706433)
		 dstAddr = 0x7f000001(2130706433)

	method insert
	inserting 20 bytes at byte 14:
 0x0000(0) :                                           45 00 
0x0010(16) : 04 7a 76 de 40 00 40 11 c5 a2 7f 00 00 01 7f 00 
0x0020(32) : 00 01 
	method move_to_section = emit_0

updated tuples:
	control = (
		offset = 0x0110(272)
		virtual_offset = 0x0150(336)
		section = 0x2(2)
		activeBank = 0x0(0)
		done = 0x0(0)
		error = 0x0(0)
	)
	hdr = (
		eth = (
		isValid = 0x1(1)
		dst = 0x000000000000(0)
		src = 0x000000000000(0)
		type = 0x0800(2048)
	)
		fec = (
		isValid = 0x0(0)
		traffic_class = 0x0(0)
		block_index = 0x00(0)
		packet_index = 0x00(0)
		original_type = 0x0000(0)
	)
		ipv4 = (
		isValid = 0x1(1)
		version = 0x4(4)
		ihl = 0x5(5)
		diffserv = 0x00(0)
		totallen = 0x047a(1146)
		identification = 0x76de(30430)
		flags = 0x2(2)
		fragoffset = 0x0000(0)
		ttl = 0x40(64)
		protocol = 0x11(17)
		hdrchecksum = 0xc5a2(50594)
		srcAddr = 0x7f000001(2130706433)
		dstAddr = 0x7f000001(2130706433)
	)
		udp = (
		isValid = 0x1(1)
		sport = 0x2bcb(11211)
		dport = 0xa9d3(43475)
		len = 0x0466(1126)
		chksum = 0xfe69(65129)
	)
	)
	Deparser_extracts = (
		size = 0x00000150(336)
	)
Section emit_1 finished
-------------------------------------------------------------------
processing section emit_0 in stage 6
-------------------------------------------------------------------
Section emit_0 starting

	method update (tuples)


	method update (packet)
		 sport = 0x2bcb(11211)
		 dport = 0xa9d3(43475)
		 len = 0x0466(1126)
		 chksum = 0xfe69(65129)

	method insert
	inserting 8 bytes at byte 34:
0x0020(32) :       2b cb a9 d3 04 66 fe 69 
	method move_to_section = done(0)

updated tuples:
	control = (
		offset = 0x0150(336)
		virtual_offset = 0x0150(336)
		section = 0x0(0)
		activeBank = 0x0(0)
		done = 0x1(1)
		error = 0x0(0)
	)
	hdr = (
		eth = (
		isValid = 0x1(1)
		dst = 0x000000000000(0)
		src = 0x000000000000(0)
		type = 0x0800(2048)
	)
		fec = (
		isValid = 0x0(0)
		traffic_class = 0x0(0)
		block_index = 0x00(0)
		packet_index = 0x00(0)
		original_type = 0x0000(0)
	)
		ipv4 = (
		isValid = 0x1(1)
		version = 0x4(4)
		ihl = 0x5(5)
		diffserv = 0x00(0)
		totallen = 0x047a(1146)
		identification = 0x76de(30430)
		flags = 0x2(2)
		fragoffset = 0x0000(0)
		ttl = 0x40(64)
		protocol = 0x11(17)
		hdrchecksum = 0xc5a2(50594)
		srcAddr = 0x7f000001(2130706433)
		dstAddr = 0x7f000001(2130706433)
	)
		udp = (
		isValid = 0x1(1)
		sport = 0x2bcb(11211)
		dport = 0xa9d3(43475)
		len = 0x0466(1126)
		chksum = 0xfe69(65129)
	)
	)
	Deparser_extracts = (
		size = 0x00000150(336)
	)
Section emit_0 finished
-------------------------------------------------------------------
final inout and output tuples:

Note: this engine's wrapper will clear the upper control tuple fields on output, except for the 'control.error' field.

	control = (
		offset = 0x0000(0)
		virtual_offset = 0x0000(0)
		section = 0x0(0)
		activeBank = 0x0(0)
		done = 0x0(0)
		error = 0x0(0)
	)
output packet (1160 bytes)
 0x0000(0) : 00 00 00 00 00 00 00 00 00 00 00 00 08 00 45 00 
0x0010(16) : 04 7a 76 de 40 00 40 11 c5 a2 7f 00 00 01 7f 00 
0x0020(32) : 00 01 2b cb a9 d3 04 66 fe 69 00 03 00 00 00 01 
0x0030(48) : 00 00 56 41 4c 55 45 20 11 10 10 10 10 10 10 10 
0x0040(64) : 49 4f 6a 53 2e 45 6d 4b 45 34 6d 4d 36 7a 6c 30 
0x0050(80) : 65 61 64 63 72 67 65 6e 34 68 77 6a 49 30 73 61 
0x0060(96) : 50 5a 30 4e 6f 6d 68 30 72 52 4e 78 50 36 79 31 
0x0070(112) : 67 5a 64 56 45 46 48 49 20 30 20 31 30 32 34 0d 
0x0080(128) : 0a 49 4f 6a 53 2e 45 6d 4b 45 34 6d 4d 36 7a 6c 
0x0090(144) : 30 65 61 64 63 72 67 65 6e 34 68 77 6a 49 30 73 
0x00a0(160) : 61 50 5a 30 4e 6f 6d 68 30 72 52 4e 78 50 36 79 
0x00b0(176) : 31 67 5a 64 56 45 46 48 49 78 42 2d 44 42 72 6e 
0x00c0(192) : 61 50 6f 78 42 59 64 42 4e 32 59 4a 52 66 46 53 
0x00d0(208) : 4a 6f 33 70 30 4a 34 49 45 46 49 52 51 37 43 2d 
0x00e0(224) : 57 2e 77 68 58 58 74 75 61 50 42 2d 32 51 53 4d 
0x00f0(240) : 44 56 39 44 6f 44 57 30 53 6f 52 73 76 65 72 51 
0x0100(256) : 63 6d 35 37 48 79 30 72 4d 42 72 4f 63 48 6b 70 
0x0110(272) : 6d 74 30 5a 34 57 5a 57 49 2d 4e 43 64 43 63 44 
0x0120(288) : 79 68 4c 45 65 4c 33 2e 57 75 4d 36 39 35 76 77 
0x0130(304) : 79 77 54 31 51 30 58 6a 2d 75 76 63 35 56 71 31 
0x0140(320) : 41 39 46 6f 55 4a 6d 2e 42 37 35 4c 43 2e 46 38 
0x0150(336) : 75 69 39 4a 69 68 30 69 5a 76 49 65 4f 36 67 59 
0x0160(352) : 46 76 4c 6a 43 35 69 4f 43 6e 6a 4f 6c 79 58 65 
0x0170(368) : 65 67 78 4b 4c 78 30 76 71 4a 58 43 50 42 6b 66 
0x0180(384) : 35 33 4d 48 39 32 66 4c 70 4d 6b 5a 49 46 42 77 
0x0190(400) : 76 36 46 46 31 46 38 72 59 66 31 79 72 6c 62 77 
0x01a0(416) : 70 78 42 79 2e 72 48 6e 42 2d 4b 55 45 56 4f 38 
0x01b0(432) : 62 64 4e 63 74 56 52 50 38 53 4c 7a 43 77 74 2d 
0x01c0(448) : 73 33 78 71 75 43 62 33 43 77 58 51 50 77 59 2d 
0x01d0(464) : 58 76 62 4f 4f 31 6f 58 54 37 55 66 32 4d 65 75 
0x01e0(480) : 50 5a 69 48 6d 48 4b 79 42 73 4d 62 6d 76 61 48 
0x01f0(496) : 6f 39 67 42 41 53 69 65 5a 41 48 62 57 77 54 76 
0x0200(512) : 54 39 41 44 52 56 39 63 4c 57 42 35 50 6c 4d 42 
0x0210(528) : 76 30 4d 33 53 32 68 30 44 7a 62 6a 74 33 64 4b 
0x0220(544) : 43 6e 59 64 47 68 45 62 42 50 67 61 39 31 6d 32 
0x0230(560) : 31 36 35 55 39 6e 55 4d 6b 33 33 62 36 67 76 4a 
0x0240(576) : 53 52 77 69 37 38 49 49 59 79 74 68 7a 64 6a 2d 
0x0250(592) : 6a 6f 54 73 5a 78 43 48 2e 47 73 35 77 6d 4f 4d 
0x0260(608) : 42 49 33 49 52 4c 62 7a 48 53 65 46 33 4c 45 6d 
0x0270(624) : 37 68 64 68 63 70 79 61 33 70 66 2e 5a 31 4b 6b 
0x0280(640) : 4b 4e 31 6c 69 63 69 2e 32 4b 44 35 66 52 72 6d 
0x0290(656) : 36 53 52 69 47 4f 47 4a 42 77 48 6b 78 63 53 46 
0x02a0(672) : 7a 54 2e 67 33 67 65 35 2e 72 41 64 47 30 4f 4d 
0x02b0(688) : 53 70 32 69 42 49 30 4d 43 48 34 38 74 58 4e 72 
0x02c0(704) : 2e 4d 56 32 30 37 37 2d 79 49 63 43 49 2e 59 6b 
0x02d0(720) : 6f 61 52 7a 73 52 4b 33 69 4f 42 61 76 59 50 75 
0x02e0(736) : 75 75 77 76 2d 31 75 78 4a 55 37 62 54 66 4b 46 
0x02f0(752) : 44 6c 43 33 41 57 36 73 76 48 51 6f 71 70 67 69 
0x0300(768) : 68 61 62 67 63 54 62 76 79 69 56 50 4c 70 65 59 
0x0310(784) : 59 71 63 69 4c 69 59 45 2e 7a 30 6f 6d 68 55 53 
0x0320(800) : 46 34 36 72 58 69 6c 54 4f 45 73 6b 31 55 47 5a 
0x0330(816) : 4a 73 46 65 5a 6e 73 58 6b 73 4a 56 58 6e 78 6e 
0x0340(832) : 72 31 63 4e 6a 4c 71 36 5a 68 71 61 39 34 37 53 
0x0350(848) : 78 4d 34 55 38 77 2d 73 6e 49 4c 49 33 47 33 76 
0x0360(864) : 49 67 47 2d 2d 34 35 5a 6c 76 37 76 2e 46 4c 76 
0x0370(880) : 62 51 4e 6a 4b 4d 61 35 65 76 4f 68 41 52 61 53 
0x0380(896) : 35 71 52 35 76 58 65 65 51 6c 58 4f 2e 74 48 61 
0x0390(912) : 48 65 48 62 2e 72 68 63 6c 33 49 76 55 73 4c 61 
0x03a0(928) : 68 6d 66 61 48 48 43 69 30 6b 34 2d 62 4d 5a 73 
0x03b0(944) : 2e 71 52 7a 67 36 5a 50 39 72 49 65 69 64 43 4e 
0x03c0(960) : 4e 72 78 66 36 37 4c 36 72 50 35 51 6c 65 47 6b 
0x03d0(976) : 54 69 68 37 6f 45 57 79 34 6f 61 6d 50 6d 37 6d 
0x03e0(992) : 62 32 50 68 39 6b 6e 2d 38 74 50 74 56 67 62 79 
0x03f0(1008) : 4d 47 33 38 56 5a 34 5a 4c 65 4a 6b 4f 51 56 7a 
0x0400(1024) : 53 75 65 62 64 51 61 6c 48 2e 63 6d 65 43 6a 2e 
0x0410(1040) : 53 6d 36 78 4b 42 55 66 70 6e 4f 43 42 74 39 64 
0x0420(1056) : 6c 6f 44 4d 43 6e 35 54 6c 69 44 4e 75 77 4c 4b 
0x0430(1072) : 68 53 47 2d 64 6b 65 51 57 30 63 68 74 6d 4a 64 
0x0440(1088) : 59 57 7a 6b 48 33 42 31 6c 4f 4f 64 4a 6b 78 2e 
0x0450(1104) : 41 42 7a 6e 77 62 42 51 63 6f 35 54 59 4f 34 34 
0x0460(1120) : 75 32 6f 41 35 7a 42 71 4c 5a 52 65 48 4d 63 52 
0x0470(1136) : 59 5a 43 53 39 4f 73 6c 41 78 43 69 4b 48 6d 43 
0x0480(1152) : 4a 0d 0a 45 4e 44 0d 0a 
Exiting engine Deparser
===================================================================
final inout and output tuples:
	ioports = (
		ingress_port = 0x0(0)
		egress_port = 0x0(0)
	)
output packet (1160 bytes)
 0x0000(0) : 00 00 00 00 00 00 00 00 00 00 00 00 08 00 45 00 
0x0010(16) : 04 7a 76 de 40 00 40 11 c5 a2 7f 00 00 01 7f 00 
0x0020(32) : 00 01 2b cb a9 d3 04 66 fe 69 00 03 00 00 00 01 
0x0030(48) : 00 00 56 41 4c 55 45 20 11 10 10 10 10 10 10 10 
0x0040(64) : 49 4f 6a 53 2e 45 6d 4b 45 34 6d 4d 36 7a 6c 30 
0x0050(80) : 65 61 64 63 72 67 65 6e 34 68 77 6a 49 30 73 61 
0x0060(96) : 50 5a 30 4e 6f 6d 68 30 72 52 4e 78 50 36 79 31 
0x0070(112) : 67 5a 64 56 45 46 48 49 20 30 20 31 30 32 34 0d 
0x0080(128) : 0a 49 4f 6a 53 2e 45 6d 4b 45 34 6d 4d 36 7a 6c 
0x0090(144) : 30 65 61 64 63 72 67 65 6e 34 68 77 6a 49 30 73 
0x00a0(160) : 61 50 5a 30 4e 6f 6d 68 30 72 52 4e 78 50 36 79 
0x00b0(176) : 31 67 5a 64 56 45 46 48 49 78 42 2d 44 42 72 6e 
0x00c0(192) : 61 50 6f 78 42 59 64 42 4e 32 59 4a 52 66 46 53 
0x00d0(208) : 4a 6f 33 70 30 4a 34 49 45 46 49 52 51 37 43 2d 
0x00e0(224) : 57 2e 77 68 58 58 74 75 61 50 42 2d 32 51 53 4d 
0x00f0(240) : 44 56 39 44 6f 44 57 30 53 6f 52 73 76 65 72 51 
0x0100(256) : 63 6d 35 37 48 79 30 72 4d 42 72 4f 63 48 6b 70 
0x0110(272) : 6d 74 30 5a 34 57 5a 57 49 2d 4e 43 64 43 63 44 
0x0120(288) : 79 68 4c 45 65 4c 33 2e 57 75 4d 36 39 35 76 77 
0x0130(304) : 79 77 54 31 51 30 58 6a 2d 75 76 63 35 56 71 31 
0x0140(320) : 41 39 46 6f 55 4a 6d 2e 42 37 35 4c 43 2e 46 38 
0x0150(336) : 75 69 39 4a 69 68 30 69 5a 76 49 65 4f 36 67 59 
0x0160(352) : 46 76 4c 6a 43 35 69 4f 43 6e 6a 4f 6c 79 58 65 
0x0170(368) : 65 67 78 4b 4c 78 30 76 71 4a 58 43 50 42 6b 66 
0x0180(384) : 35 33 4d 48 39 32 66 4c 70 4d 6b 5a 49 46 42 77 
0x0190(400) : 76 36 46 46 31 46 38 72 59 66 31 79 72 6c 62 77 
0x01a0(416) : 70 78 42 79 2e 72 48 6e 42 2d 4b 55 45 56 4f 38 
0x01b0(432) : 62 64 4e 63 74 56 52 50 38 53 4c 7a 43 77 74 2d 
0x01c0(448) : 73 33 78 71 75 43 62 33 43 77 58 51 50 77 59 2d 
0x01d0(464) : 58 76 62 4f 4f 31 6f 58 54 37 55 66 32 4d 65 75 
0x01e0(480) : 50 5a 69 48 6d 48 4b 79 42 73 4d 62 6d 76 61 48 
0x01f0(496) : 6f 39 67 42 41 53 69 65 5a 41 48 62 57 77 54 76 
0x0200(512) : 54 39 41 44 52 56 39 63 4c 57 42 35 50 6c 4d 42 
0x0210(528) : 76 30 4d 33 53 32 68 30 44 7a 62 6a 74 33 64 4b 
0x0220(544) : 43 6e 59 64 47 68 45 62 42 50 67 61 39 31 6d 32 
0x0230(560) : 31 36 35 55 39 6e 55 4d 6b 33 33 62 36 67 76 4a 
0x0240(576) : 53 52 77 69 37 38 49 49 59 79 74 68 7a 64 6a 2d 
0x0250(592) : 6a 6f 54 73 5a 78 43 48 2e 47 73 35 77 6d 4f 4d 
0x0260(608) : 42 49 33 49 52 4c 62 7a 48 53 65 46 33 4c 45 6d 
0x0270(624) : 37 68 64 68 63 70 79 61 33 70 66 2e 5a 31 4b 6b 
0x0280(640) : 4b 4e 31 6c 69 63 69 2e 32 4b 44 35 66 52 72 6d 
0x0290(656) : 36 53 52 69 47 4f 47 4a 42 77 48 6b 78 63 53 46 
0x02a0(672) : 7a 54 2e 67 33 67 65 35 2e 72 41 64 47 30 4f 4d 
0x02b0(688) : 53 70 32 69 42 49 30 4d 43 48 34 38 74 58 4e 72 
0x02c0(704) : 2e 4d 56 32 30 37 37 2d 79 49 63 43 49 2e 59 6b 
0x02d0(720) : 6f 61 52 7a 73 52 4b 33 69 4f 42 61 76 59 50 75 
0x02e0(736) : 75 75 77 76 2d 31 75 78 4a 55 37 62 54 66 4b 46 
0x02f0(752) : 44 6c 43 33 41 57 36 73 76 48 51 6f 71 70 67 69 
0x0300(768) : 68 61 62 67 63 54 62 76 79 69 56 50 4c 70 65 59 
0x0310(784) : 59 71 63 69 4c 69 59 45 2e 7a 30 6f 6d 68 55 53 
0x0320(800) : 46 34 36 72 58 69 6c 54 4f 45 73 6b 31 55 47 5a 
0x0330(816) : 4a 73 46 65 5a 6e 73 58 6b 73 4a 56 58 6e 78 6e 
0x0340(832) : 72 31 63 4e 6a 4c 71 36 5a 68 71 61 39 34 37 53 
0x0350(848) : 78 4d 34 55 38 77 2d 73 6e 49 4c 49 33 47 33 76 
0x0360(864) : 49 67 47 2d 2d 34 35 5a 6c 76 37 76 2e 46 4c 76 
0x0370(880) : 62 51 4e 6a 4b 4d 61 35 65 76 4f 68 41 52 61 53 
0x0380(896) : 35 71 52 35 76 58 65 65 51 6c 58 4f 2e 74 48 61 
0x0390(912) : 48 65 48 62 2e 72 68 63 6c 33 49 76 55 73 4c 61 
0x03a0(928) : 68 6d 66 61 48 48 43 69 30 6b 34 2d 62 4d 5a 73 
0x03b0(944) : 2e 71 52 7a 67 36 5a 50 39 72 49 65 69 64 43 4e 
0x03c0(960) : 4e 72 78 66 36 37 4c 36 72 50 35 51 6c 65 47 6b 
0x03d0(976) : 54 69 68 37 6f 45 57 79 34 6f 61 6d 50 6d 37 6d 
0x03e0(992) : 62 32 50 68 39 6b 6e 2d 38 74 50 74 56 67 62 79 
0x03f0(1008) : 4d 47 33 38 56 5a 34 5a 4c 65 4a 6b 4f 51 56 7a 
0x0400(1024) : 53 75 65 62 64 51 61 6c 48 2e 63 6d 65 43 6a 2e 
0x0410(1040) : 53 6d 36 78 4b 42 55 66 70 6e 4f 43 42 74 39 64 
0x0420(1056) : 6c 6f 44 4d 43 6e 35 54 6c 69 44 4e 75 77 4c 4b 
0x0430(1072) : 68 53 47 2d 64 6b 65 51 57 30 63 68 74 6d 4a 64 
0x0440(1088) : 59 57 7a 6b 48 33 42 31 6c 4f 4f 64 4a 6b 78 2e 
0x0450(1104) : 41 42 7a 6e 77 62 42 51 63 6f 35 54 59 4f 34 34 
0x0460(1120) : 75 32 6f 41 35 7a 42 71 4c 5a 52 65 48 4d 63 52 
0x0470(1136) : 59 5a 43 53 39 4f 73 6c 41 78 43 69 4b 48 6d 43 
0x0480(1152) : 4a 0d 0a 45 4e 44 0d 0a 
Exiting system XilinxSwitch
===================================================================
Evaluating packet #5(1155 bytes)
 0x0000(0) : 00 00 00 00 00 00 00 00 00 00 00 00 08 00 45 00 
0x0010(16) : 04 75 76 e0 40 00 40 11 c1 95 7f 00 00 01 7f 00 
0x0020(32) : 00 01 a9 d3 2b cb 04 61 02 75 00 04 00 00 00 01 
0x0030(48) : 01 00 73 65 74 20 12 10 10 10 10 10 10 10 77 34 
0x0040(64) : 74 30 59 59 44 41 53 41 47 44 59 65 68 45 43 48 
0x0050(80) : 49 2d 49 50 36 4d 72 2d 7a 50 62 51 75 56 56 6c 
0x0060(96) : 56 31 49 6a 42 6b 74 52 78 50 33 63 65 47 74 77 
0x0070(112) : 46 39 4b 4c 56 39 20 30 20 30 20 31 30 32 34 0d 
0x0080(128) : 0a 77 34 74 30 59 59 44 41 53 41 47 44 59 65 68 
0x0090(144) : 45 43 48 49 2d 49 50 36 4d 72 2d 7a 50 62 51 75 
0x00a0(160) : 56 56 6c 56 31 49 6a 42 6b 74 52 78 50 33 63 65 
0x00b0(176) : 47 74 77 46 39 4b 4c 56 39 4c 54 59 77 74 51 51 
0x00c0(192) : 4d 39 76 4e 52 63 59 39 54 7a 35 74 31 68 56 48 
0x00d0(208) : 5a 50 57 69 6a 73 43 73 42 66 4f 35 57 6f 56 74 
0x00e0(224) : 79 50 45 4e 2d 6e 58 54 6b 63 4b 6c 48 70 30 71 
0x00f0(240) : 43 58 58 77 4e 6a 6d 59 4d 39 64 73 78 37 6a 74 
0x0100(256) : 57 79 46 56 6a 6d 79 52 4d 47 42 64 33 42 53 47 
0x0110(272) : 69 7a 41 33 67 77 62 30 33 44 73 2d 4b 61 73 71 
0x0120(288) : 57 35 4a 44 72 47 65 42 57 70 70 61 2d 46 71 68 
0x0130(304) : 43 2e 6c 73 75 4b 73 79 58 69 78 72 47 6e 66 6d 
0x0140(320) : 74 7a 7a 69 44 63 75 6a 50 68 48 4f 77 35 34 36 
0x0150(336) : 33 70 79 79 37 6f 75 66 55 70 55 6c 61 38 56 52 
0x0160(352) : 35 54 38 49 33 30 2d 53 68 48 72 62 4d 76 68 51 
0x0170(368) : 69 64 4d 70 50 45 53 74 31 78 63 62 33 36 31 38 
0x0180(384) : 5a 39 51 63 39 50 32 71 67 74 50 31 6d 34 52 53 
0x0190(400) : 68 6e 47 34 2d 69 78 30 64 59 62 67 65 63 6f 42 
0x01a0(416) : 6c 43 6e 75 63 70 69 47 68 35 48 52 39 69 75 71 
0x01b0(432) : 54 38 75 53 71 71 53 53 4d 32 36 2e 65 76 39 4f 
0x01c0(448) : 35 77 47 68 6a 7a 79 4f 32 44 71 43 77 69 30 4e 
0x01d0(464) : 71 76 71 65 6a 47 34 33 49 42 31 78 34 41 4a 39 
0x01e0(480) : 34 5a 72 6e 57 6e 41 5a 2e 2e 6c 75 67 6c 47 55 
0x01f0(496) : 65 34 36 4c 4b 42 4f 64 4d 50 59 51 5a 72 5a 64 
0x0200(512) : 4f 4f 50 76 39 5a 53 38 58 42 30 42 77 47 66 5a 
0x0210(528) : 4b 6c 75 66 77 48 47 47 67 6f 67 45 64 45 72 2d 
0x0220(544) : 63 45 75 6d 6e 4b 75 49 56 75 54 51 39 36 7a 54 
0x0230(560) : 73 72 36 6d 36 4d 31 6e 38 68 2d 6c 76 71 6c 57 
0x0240(576) : 33 64 47 71 79 38 37 52 30 61 72 39 68 6f 64 58 
0x0250(592) : 65 6a 48 6b 34 49 56 43 2e 55 79 74 4a 68 4e 4d 
0x0260(608) : 49 64 41 45 6c 48 67 6d 73 56 76 58 49 57 32 77 
0x0270(624) : 45 4a 65 49 63 38 55 61 63 51 52 76 35 70 46 4f 
0x0280(640) : 51 51 63 41 68 47 77 58 6d 70 32 32 4b 34 79 59 
0x0290(656) : 4f 61 71 2e 69 49 59 4a 6a 7a 43 6f 6d 53 41 42 
0x02a0(672) : 73 6e 4c 58 31 46 33 6e 32 35 70 4d 41 6c 75 59 
0x02b0(688) : 4b 69 57 30 2d 32 4a 69 2d 57 55 6d 79 66 78 6f 
0x02c0(704) : 51 47 4a 52 56 4d 44 58 53 30 75 63 6d 6d 38 34 
0x02d0(720) : 54 65 34 53 67 4f 38 66 75 63 50 71 46 4b 63 66 
0x02e0(736) : 61 76 35 33 47 49 62 69 49 54 49 32 44 51 36 67 
0x02f0(752) : 32 42 36 69 5a 45 4c 52 72 6c 46 34 33 72 6b 65 
0x0300(768) : 6b 70 68 2e 35 47 67 4e 6a 79 51 78 4d 57 62 4f 
0x0310(784) : 68 69 34 45 77 51 66 6c 39 75 71 43 6a 59 71 53 
0x0320(800) : 4c 57 51 51 6d 35 6e 55 31 42 50 4f 69 2e 6d 4e 
0x0330(816) : 67 72 63 62 46 46 4b 4f 38 38 61 72 67 50 48 2d 
0x0340(832) : 76 69 50 66 6e 42 37 6f 4d 57 41 32 56 78 51 39 
0x0350(848) : 6d 30 6b 2d 46 33 4e 4e 42 78 44 73 4b 55 72 44 
0x0360(864) : 41 46 74 78 51 2e 6b 6d 56 75 70 2e 70 44 37 5a 
0x0370(880) : 44 73 59 53 76 76 71 34 72 31 77 39 56 6d 4e 67 
0x0380(896) : 2d 45 62 50 43 4a 39 68 43 79 66 2d 39 6e 5a 4d 
0x0390(912) : 64 35 70 57 2d 64 61 71 65 56 7a 37 46 4b 6e 45 
0x03a0(928) : 59 4e 64 6c 67 6d 51 73 6a 34 73 73 72 50 44 53 
0x03b0(944) : 55 30 79 54 64 57 48 46 2d 46 4d 45 5a 38 53 36 
0x03c0(960) : 56 33 72 39 71 46 30 58 4a 73 4e 38 46 61 61 6a 
0x03d0(976) : 61 57 42 42 31 53 51 30 68 6e 46 46 76 68 4c 4f 
0x03e0(992) : 6c 41 58 5a 50 58 34 6a 4e 52 72 63 30 51 4b 61 
0x03f0(1008) : 77 56 6d 78 78 41 79 64 78 42 73 71 73 42 43 62 
0x0400(1024) : 4c 6b 38 6b 46 43 52 64 65 48 44 65 68 58 43 62 
0x0410(1040) : 30 79 58 79 37 54 5a 32 65 50 74 55 61 33 34 76 
0x0420(1056) : 6e 43 64 31 50 33 65 31 4b 72 66 2d 4e 72 61 4e 
0x0430(1072) : 6f 35 4a 76 59 73 78 41 46 6f 66 70 73 6a 69 64 
0x0440(1088) : 76 4b 65 49 4e 47 4a 68 36 79 67 54 6f 45 71 61 
0x0450(1104) : 4b 38 54 73 2e 4f 31 45 42 67 31 31 4e 6b 65 47 
0x0460(1120) : 32 48 5a 50 58 73 34 64 70 6b 34 62 79 76 39 47 
0x0470(1136) : 31 63 37 2d 2e 38 44 39 6f 46 41 39 7a 70 50 2d 
0x0480(1152) : 34 0d 0a 
===================================================================
Entering system XilinxSwitch
input packet (1155 bytes)
 0x0000(0) : 00 00 00 00 00 00 00 00 00 00 00 00 08 00 45 00 
0x0010(16) : 04 75 76 e0 40 00 40 11 c1 95 7f 00 00 01 7f 00 
0x0020(32) : 00 01 a9 d3 2b cb 04 61 02 75 00 04 00 00 00 01 
0x0030(48) : 01 00 73 65 74 20 12 10 10 10 10 10 10 10 77 34 
0x0040(64) : 74 30 59 59 44 41 53 41 47 44 59 65 68 45 43 48 
0x0050(80) : 49 2d 49 50 36 4d 72 2d 7a 50 62 51 75 56 56 6c 
0x0060(96) : 56 31 49 6a 42 6b 74 52 78 50 33 63 65 47 74 77 
0x0070(112) : 46 39 4b 4c 56 39 20 30 20 30 20 31 30 32 34 0d 
0x0080(128) : 0a 77 34 74 30 59 59 44 41 53 41 47 44 59 65 68 
0x0090(144) : 45 43 48 49 2d 49 50 36 4d 72 2d 7a 50 62 51 75 
0x00a0(160) : 56 56 6c 56 31 49 6a 42 6b 74 52 78 50 33 63 65 
0x00b0(176) : 47 74 77 46 39 4b 4c 56 39 4c 54 59 77 74 51 51 
0x00c0(192) : 4d 39 76 4e 52 63 59 39 54 7a 35 74 31 68 56 48 
0x00d0(208) : 5a 50 57 69 6a 73 43 73 42 66 4f 35 57 6f 56 74 
0x00e0(224) : 79 50 45 4e 2d 6e 58 54 6b 63 4b 6c 48 70 30 71 
0x00f0(240) : 43 58 58 77 4e 6a 6d 59 4d 39 64 73 78 37 6a 74 
0x0100(256) : 57 79 46 56 6a 6d 79 52 4d 47 42 64 33 42 53 47 
0x0110(272) : 69 7a 41 33 67 77 62 30 33 44 73 2d 4b 61 73 71 
0x0120(288) : 57 35 4a 44 72 47 65 42 57 70 70 61 2d 46 71 68 
0x0130(304) : 43 2e 6c 73 75 4b 73 79 58 69 78 72 47 6e 66 6d 
0x0140(320) : 74 7a 7a 69 44 63 75 6a 50 68 48 4f 77 35 34 36 
0x0150(336) : 33 70 79 79 37 6f 75 66 55 70 55 6c 61 38 56 52 
0x0160(352) : 35 54 38 49 33 30 2d 53 68 48 72 62 4d 76 68 51 
0x0170(368) : 69 64 4d 70 50 45 53 74 31 78 63 62 33 36 31 38 
0x0180(384) : 5a 39 51 63 39 50 32 71 67 74 50 31 6d 34 52 53 
0x0190(400) : 68 6e 47 34 2d 69 78 30 64 59 62 67 65 63 6f 42 
0x01a0(416) : 6c 43 6e 75 63 70 69 47 68 35 48 52 39 69 75 71 
0x01b0(432) : 54 38 75 53 71 71 53 53 4d 32 36 2e 65 76 39 4f 
0x01c0(448) : 35 77 47 68 6a 7a 79 4f 32 44 71 43 77 69 30 4e 
0x01d0(464) : 71 76 71 65 6a 47 34 33 49 42 31 78 34 41 4a 39 
0x01e0(480) : 34 5a 72 6e 57 6e 41 5a 2e 2e 6c 75 67 6c 47 55 
0x01f0(496) : 65 34 36 4c 4b 42 4f 64 4d 50 59 51 5a 72 5a 64 
0x0200(512) : 4f 4f 50 76 39 5a 53 38 58 42 30 42 77 47 66 5a 
0x0210(528) : 4b 6c 75 66 77 48 47 47 67 6f 67 45 64 45 72 2d 
0x0220(544) : 63 45 75 6d 6e 4b 75 49 56 75 54 51 39 36 7a 54 
0x0230(560) : 73 72 36 6d 36 4d 31 6e 38 68 2d 6c 76 71 6c 57 
0x0240(576) : 33 64 47 71 79 38 37 52 30 61 72 39 68 6f 64 58 
0x0250(592) : 65 6a 48 6b 34 49 56 43 2e 55 79 74 4a 68 4e 4d 
0x0260(608) : 49 64 41 45 6c 48 67 6d 73 56 76 58 49 57 32 77 
0x0270(624) : 45 4a 65 49 63 38 55 61 63 51 52 76 35 70 46 4f 
0x0280(640) : 51 51 63 41 68 47 77 58 6d 70 32 32 4b 34 79 59 
0x0290(656) : 4f 61 71 2e 69 49 59 4a 6a 7a 43 6f 6d 53 41 42 
0x02a0(672) : 73 6e 4c 58 31 46 33 6e 32 35 70 4d 41 6c 75 59 
0x02b0(688) : 4b 69 57 30 2d 32 4a 69 2d 57 55 6d 79 66 78 6f 
0x02c0(704) : 51 47 4a 52 56 4d 44 58 53 30 75 63 6d 6d 38 34 
0x02d0(720) : 54 65 34 53 67 4f 38 66 75 63 50 71 46 4b 63 66 
0x02e0(736) : 61 76 35 33 47 49 62 69 49 54 49 32 44 51 36 67 
0x02f0(752) : 32 42 36 69 5a 45 4c 52 72 6c 46 34 33 72 6b 65 
0x0300(768) : 6b 70 68 2e 35 47 67 4e 6a 79 51 78 4d 57 62 4f 
0x0310(784) : 68 69 34 45 77 51 66 6c 39 75 71 43 6a 59 71 53 
0x0320(800) : 4c 57 51 51 6d 35 6e 55 31 42 50 4f 69 2e 6d 4e 
0x0330(816) : 67 72 63 62 46 46 4b 4f 38 38 61 72 67 50 48 2d 
0x0340(832) : 76 69 50 66 6e 42 37 6f 4d 57 41 32 56 78 51 39 
0x0350(848) : 6d 30 6b 2d 46 33 4e 4e 42 78 44 73 4b 55 72 44 
0x0360(864) : 41 46 74 78 51 2e 6b 6d 56 75 70 2e 70 44 37 5a 
0x0370(880) : 44 73 59 53 76 76 71 34 72 31 77 39 56 6d 4e 67 
0x0380(896) : 2d 45 62 50 43 4a 39 68 43 79 66 2d 39 6e 5a 4d 
0x0390(912) : 64 35 70 57 2d 64 61 71 65 56 7a 37 46 4b 6e 45 
0x03a0(928) : 59 4e 64 6c 67 6d 51 73 6a 34 73 73 72 50 44 53 
0x03b0(944) : 55 30 79 54 64 57 48 46 2d 46 4d 45 5a 38 53 36 
0x03c0(960) : 56 33 72 39 71 46 30 58 4a 73 4e 38 46 61 61 6a 
0x03d0(976) : 61 57 42 42 31 53 51 30 68 6e 46 46 76 68 4c 4f 
0x03e0(992) : 6c 41 58 5a 50 58 34 6a 4e 52 72 63 30 51 4b 61 
0x03f0(1008) : 77 56 6d 78 78 41 79 64 78 42 73 71 73 42 43 62 
0x0400(1024) : 4c 6b 38 6b 46 43 52 64 65 48 44 65 68 58 43 62 
0x0410(1040) : 30 79 58 79 37 54 5a 32 65 50 74 55 61 33 34 76 
0x0420(1056) : 6e 43 64 31 50 33 65 31 4b 72 66 2d 4e 72 61 4e 
0x0430(1072) : 6f 35 4a 76 59 73 78 41 46 6f 66 70 73 6a 69 64 
0x0440(1088) : 76 4b 65 49 4e 47 4a 68 36 79 67 54 6f 45 71 61 
0x0450(1104) : 4b 38 54 73 2e 4f 31 45 42 67 31 31 4e 6b 65 47 
0x0460(1120) : 32 48 5a 50 58 73 34 64 70 6b 34 62 79 76 39 47 
0x0470(1136) : 31 63 37 2d 2e 38 44 39 6f 46 41 39 7a 70 50 2d 
0x0480(1152) : 34 0d 0a 
initial input and inout tuples:
	ioports = (
		ingress_port = 0x0(0)
		egress_port = 0x0(0)
	)
clear internal and output-only tuples
===================================================================
Entering engine Parser
input packet (1155 bytes)
 0x0000(0) : 00 00 00 00 00 00 00 00 00 00 00 00 08 00 45 00 
0x0010(16) : 04 75 76 e0 40 00 40 11 c1 95 7f 00 00 01 7f 00 
0x0020(32) : 00 01 a9 d3 2b cb 04 61 02 75 00 04 00 00 00 01 
0x0030(48) : 01 00 73 65 74 20 12 10 10 10 10 10 10 10 77 34 
0x0040(64) : 74 30 59 59 44 41 53 41 47 44 59 65 68 45 43 48 
0x0050(80) : 49 2d 49 50 36 4d 72 2d 7a 50 62 51 75 56 56 6c 
0x0060(96) : 56 31 49 6a 42 6b 74 52 78 50 33 63 65 47 74 77 
0x0070(112) : 46 39 4b 4c 56 39 20 30 20 30 20 31 30 32 34 0d 
0x0080(128) : 0a 77 34 74 30 59 59 44 41 53 41 47 44 59 65 68 
0x0090(144) : 45 43 48 49 2d 49 50 36 4d 72 2d 7a 50 62 51 75 
0x00a0(160) : 56 56 6c 56 31 49 6a 42 6b 74 52 78 50 33 63 65 
0x00b0(176) : 47 74 77 46 39 4b 4c 56 39 4c 54 59 77 74 51 51 
0x00c0(192) : 4d 39 76 4e 52 63 59 39 54 7a 35 74 31 68 56 48 
0x00d0(208) : 5a 50 57 69 6a 73 43 73 42 66 4f 35 57 6f 56 74 
0x00e0(224) : 79 50 45 4e 2d 6e 58 54 6b 63 4b 6c 48 70 30 71 
0x00f0(240) : 43 58 58 77 4e 6a 6d 59 4d 39 64 73 78 37 6a 74 
0x0100(256) : 57 79 46 56 6a 6d 79 52 4d 47 42 64 33 42 53 47 
0x0110(272) : 69 7a 41 33 67 77 62 30 33 44 73 2d 4b 61 73 71 
0x0120(288) : 57 35 4a 44 72 47 65 42 57 70 70 61 2d 46 71 68 
0x0130(304) : 43 2e 6c 73 75 4b 73 79 58 69 78 72 47 6e 66 6d 
0x0140(320) : 74 7a 7a 69 44 63 75 6a 50 68 48 4f 77 35 34 36 
0x0150(336) : 33 70 79 79 37 6f 75 66 55 70 55 6c 61 38 56 52 
0x0160(352) : 35 54 38 49 33 30 2d 53 68 48 72 62 4d 76 68 51 
0x0170(368) : 69 64 4d 70 50 45 53 74 31 78 63 62 33 36 31 38 
0x0180(384) : 5a 39 51 63 39 50 32 71 67 74 50 31 6d 34 52 53 
0x0190(400) : 68 6e 47 34 2d 69 78 30 64 59 62 67 65 63 6f 42 
0x01a0(416) : 6c 43 6e 75 63 70 69 47 68 35 48 52 39 69 75 71 
0x01b0(432) : 54 38 75 53 71 71 53 53 4d 32 36 2e 65 76 39 4f 
0x01c0(448) : 35 77 47 68 6a 7a 79 4f 32 44 71 43 77 69 30 4e 
0x01d0(464) : 71 76 71 65 6a 47 34 33 49 42 31 78 34 41 4a 39 
0x01e0(480) : 34 5a 72 6e 57 6e 41 5a 2e 2e 6c 75 67 6c 47 55 
0x01f0(496) : 65 34 36 4c 4b 42 4f 64 4d 50 59 51 5a 72 5a 64 
0x0200(512) : 4f 4f 50 76 39 5a 53 38 58 42 30 42 77 47 66 5a 
0x0210(528) : 4b 6c 75 66 77 48 47 47 67 6f 67 45 64 45 72 2d 
0x0220(544) : 63 45 75 6d 6e 4b 75 49 56 75 54 51 39 36 7a 54 
0x0230(560) : 73 72 36 6d 36 4d 31 6e 38 68 2d 6c 76 71 6c 57 
0x0240(576) : 33 64 47 71 79 38 37 52 30 61 72 39 68 6f 64 58 
0x0250(592) : 65 6a 48 6b 34 49 56 43 2e 55 79 74 4a 68 4e 4d 
0x0260(608) : 49 64 41 45 6c 48 67 6d 73 56 76 58 49 57 32 77 
0x0270(624) : 45 4a 65 49 63 38 55 61 63 51 52 76 35 70 46 4f 
0x0280(640) : 51 51 63 41 68 47 77 58 6d 70 32 32 4b 34 79 59 
0x0290(656) : 4f 61 71 2e 69 49 59 4a 6a 7a 43 6f 6d 53 41 42 
0x02a0(672) : 73 6e 4c 58 31 46 33 6e 32 35 70 4d 41 6c 75 59 
0x02b0(688) : 4b 69 57 30 2d 32 4a 69 2d 57 55 6d 79 66 78 6f 
0x02c0(704) : 51 47 4a 52 56 4d 44 58 53 30 75 63 6d 6d 38 34 
0x02d0(720) : 54 65 34 53 67 4f 38 66 75 63 50 71 46 4b 63 66 
0x02e0(736) : 61 76 35 33 47 49 62 69 49 54 49 32 44 51 36 67 
0x02f0(752) : 32 42 36 69 5a 45 4c 52 72 6c 46 34 33 72 6b 65 
0x0300(768) : 6b 70 68 2e 35 47 67 4e 6a 79 51 78 4d 57 62 4f 
0x0310(784) : 68 69 34 45 77 51 66 6c 39 75 71 43 6a 59 71 53 
0x0320(800) : 4c 57 51 51 6d 35 6e 55 31 42 50 4f 69 2e 6d 4e 
0x0330(816) : 67 72 63 62 46 46 4b 4f 38 38 61 72 67 50 48 2d 
0x0340(832) : 76 69 50 66 6e 42 37 6f 4d 57 41 32 56 78 51 39 
0x0350(848) : 6d 30 6b 2d 46 33 4e 4e 42 78 44 73 4b 55 72 44 
0x0360(864) : 41 46 74 78 51 2e 6b 6d 56 75 70 2e 70 44 37 5a 
0x0370(880) : 44 73 59 53 76 76 71 34 72 31 77 39 56 6d 4e 67 
0x0380(896) : 2d 45 62 50 43 4a 39 68 43 79 66 2d 39 6e 5a 4d 
0x0390(912) : 64 35 70 57 2d 64 61 71 65 56 7a 37 46 4b 6e 45 
0x03a0(928) : 59 4e 64 6c 67 6d 51 73 6a 34 73 73 72 50 44 53 
0x03b0(944) : 55 30 79 54 64 57 48 46 2d 46 4d 45 5a 38 53 36 
0x03c0(960) : 56 33 72 39 71 46 30 58 4a 73 4e 38 46 61 61 6a 
0x03d0(976) : 61 57 42 42 31 53 51 30 68 6e 46 46 76 68 4c 4f 
0x03e0(992) : 6c 41 58 5a 50 58 34 6a 4e 52 72 63 30 51 4b 61 
0x03f0(1008) : 77 56 6d 78 78 41 79 64 78 42 73 71 73 42 43 62 
0x0400(1024) : 4c 6b 38 6b 46 43 52 64 65 48 44 65 68 58 43 62 
0x0410(1040) : 30 79 58 79 37 54 5a 32 65 50 74 55 61 33 34 76 
0x0420(1056) : 6e 43 64 31 50 33 65 31 4b 72 66 2d 4e 72 61 4e 
0x0430(1072) : 6f 35 4a 76 59 73 78 41 46 6f 66 70 73 6a 69 64 
0x0440(1088) : 76 4b 65 49 4e 47 4a 68 36 79 67 54 6f 45 71 61 
0x0450(1104) : 4b 38 54 73 2e 4f 31 45 42 67 31 31 4e 6b 65 47 
0x0460(1120) : 32 48 5a 50 58 73 34 64 70 6b 34 62 79 76 39 47 
0x0470(1136) : 31 63 37 2d 2e 38 44 39 6f 46 41 39 7a 70 50 2d 
0x0480(1152) : 34 0d 0a 
initial input and inout tuples:
	control = (
		offset = 0x0000(0)
		virtual_offset = 0x0000(0)
		section = 0x0(0)
		activeBank = 0x0(0)
		done = 0x0(0)
		error = 0x0(0)
	)
clear internal and output-only tuples
	hdr = (
		eth = (
		isValid = 0x0(0)
		dst = 0x000000000000(0)
		src = 0x000000000000(0)
		type = 0x0000(0)
	)
		fec = (
		isValid = 0x0(0)
		traffic_class = 0x0(0)
		block_index = 0x00(0)
		packet_index = 0x00(0)
		original_type = 0x0000(0)
	)
		ipv4 = (
		isValid = 0x0(0)
		version = 0x0(0)
		ihl = 0x0(0)
		diffserv = 0x00(0)
		totallen = 0x0000(0)
		identification = 0x0000(0)
		flags = 0x0(0)
		fragoffset = 0x0000(0)
		ttl = 0x00(0)
		protocol = 0x00(0)
		hdrchecksum = 0x0000(0)
		srcAddr = 0x00000000(0)
		dstAddr = 0x00000000(0)
	)
		udp = (
		isValid = 0x0(0)
		sport = 0x0000(0)
		dport = 0x0000(0)
		len = 0x0000(0)
		chksum = 0x0000(0)
	)
	)
	Parser_extracts = (
		size = 0x00000000(0)
	)
processing section start in stage 1
-------------------------------------------------------------------
Section start starting

	extracting 112 bits at offset 0x0000(0)
		dst_0 = 0x000000000000(0)
		src_0 = 0x000000000000(0)
		type_0 = 0x0800(2048)

	method update (tuples)
		hdr.eth.isValid = 0x1(1)
		hdr.eth.dst = 0x000000000000(0)
		hdr.eth.src = 0x000000000000(0)
		hdr.eth.type = 0x0800(2048)
		Parser_extracts.size = 0x00000070(112)


	method move_to_section = parse_ipv4

updated tuples:
	control = (
		offset = 0x0070(112)
		virtual_offset = 0x0070(112)
		section = 0x2(2)
		activeBank = 0x0(0)
		done = 0x0(0)
		error = 0x0(0)
	)
	hdr = (
		eth = (
		isValid = 0x1(1)
		dst = 0x000000000000(0)
		src = 0x000000000000(0)
		type = 0x0800(2048)
	)
		fec = (
		isValid = 0x0(0)
		traffic_class = 0x0(0)
		block_index = 0x00(0)
		packet_index = 0x00(0)
		original_type = 0x0000(0)
	)
		ipv4 = (
		isValid = 0x0(0)
		version = 0x0(0)
		ihl = 0x0(0)
		diffserv = 0x00(0)
		totallen = 0x0000(0)
		identification = 0x0000(0)
		flags = 0x0(0)
		fragoffset = 0x0000(0)
		ttl = 0x00(0)
		protocol = 0x00(0)
		hdrchecksum = 0x0000(0)
		srcAddr = 0x00000000(0)
		dstAddr = 0x00000000(0)
	)
		udp = (
		isValid = 0x0(0)
		sport = 0x0000(0)
		dport = 0x0000(0)
		len = 0x0000(0)
		chksum = 0x0000(0)
	)
	)
	Parser_extracts = (
		size = 0x00000070(112)
	)
Section start finished
-------------------------------------------------------------------
processing section parse_ipv4 in stage 2
-------------------------------------------------------------------
Section parse_ipv4 starting

	extracting 160 bits at offset 0x0070(112)
		version_0 = 0x4(4)
		ihl_0 = 0x5(5)
		diffserv_0 = 0x00(0)
		totallen_0 = 0x0475(1141)
		identification_0 = 0x76e0(30432)
		flags_0 = 0x2(2)
		fragoffset_0 = 0x0000(0)
		ttl_0 = 0x40(64)
		protocol_0 = 0x11(17)
		hdrchecksum_0 = 0xc195(49557)
		srcAddr_0 = 0x7f000001(2130706433)
		dstAddr_0 = 0x7f000001(2130706433)

	method update (tuples)
		hdr.ipv4.isValid = 0x1(1)
		hdr.ipv4.version = 0x4(4)
		hdr.ipv4.ihl = 0x5(5)
		hdr.ipv4.diffserv = 0x00(0)
		hdr.ipv4.totallen = 0x0475(1141)
		hdr.ipv4.identification = 0x76e0(30432)
		hdr.ipv4.flags = 0x2(2)
		hdr.ipv4.fragoffset = 0x0000(0)
		hdr.ipv4.ttl = 0x40(64)
		hdr.ipv4.protocol = 0x11(17)
		hdr.ipv4.hdrchecksum = 0xc195(49557)
		hdr.ipv4.srcAddr = 0x7f000001(2130706433)
		hdr.ipv4.dstAddr = 0x7f000001(2130706433)
		Parser_extracts.size = 0x00000110(272)


	method move_to_section = parse_udp

updated tuples:
	control = (
		offset = 0x0110(272)
		virtual_offset = 0x0110(272)
		section = 0x3(3)
		activeBank = 0x0(0)
		done = 0x0(0)
		error = 0x0(0)
	)
	hdr = (
		eth = (
		isValid = 0x1(1)
		dst = 0x000000000000(0)
		src = 0x000000000000(0)
		type = 0x0800(2048)
	)
		fec = (
		isValid = 0x0(0)
		traffic_class = 0x0(0)
		block_index = 0x00(0)
		packet_index = 0x00(0)
		original_type = 0x0000(0)
	)
		ipv4 = (
		isValid = 0x1(1)
		version = 0x4(4)
		ihl = 0x5(5)
		diffserv = 0x00(0)
		totallen = 0x0475(1141)
		identification = 0x76e0(30432)
		flags = 0x2(2)
		fragoffset = 0x0000(0)
		ttl = 0x40(64)
		protocol = 0x11(17)
		hdrchecksum = 0xc195(49557)
		srcAddr = 0x7f000001(2130706433)
		dstAddr = 0x7f000001(2130706433)
	)
		udp = (
		isValid = 0x0(0)
		sport = 0x0000(0)
		dport = 0x0000(0)
		len = 0x0000(0)
		chksum = 0x0000(0)
	)
	)
	Parser_extracts = (
		size = 0x00000110(272)
	)
Section parse_ipv4 finished
-------------------------------------------------------------------
processing section parse_udp in stage 3
-------------------------------------------------------------------
Section parse_udp starting

	extracting 64 bits at offset 0x0110(272)
		sport_0 = 0xa9d3(43475)
		dport_0 = 0x2bcb(11211)
		len_0 = 0x0461(1121)
		chksum_0 = 0x0275(629)

	method update (tuples)
		hdr.udp.isValid = 0x1(1)
		hdr.udp.sport = 0xa9d3(43475)
		hdr.udp.dport = 0x2bcb(11211)
		hdr.udp.len = 0x0461(1121)
		hdr.udp.chksum = 0x0275(629)
		Parser_extracts.size = 0x00000150(336)


	method move_to_section = accept

updated tuples:
	control = (
		offset = 0x0150(336)
		virtual_offset = 0x0150(336)
		section = 0x4(4)
		activeBank = 0x0(0)
		done = 0x0(0)
		error = 0x0(0)
	)
	hdr = (
		eth = (
		isValid = 0x1(1)
		dst = 0x000000000000(0)
		src = 0x000000000000(0)
		type = 0x0800(2048)
	)
		fec = (
		isValid = 0x0(0)
		traffic_class = 0x0(0)
		block_index = 0x00(0)
		packet_index = 0x00(0)
		original_type = 0x0000(0)
	)
		ipv4 = (
		isValid = 0x1(1)
		version = 0x4(4)
		ihl = 0x5(5)
		diffserv = 0x00(0)
		totallen = 0x0475(1141)
		identification = 0x76e0(30432)
		flags = 0x2(2)
		fragoffset = 0x0000(0)
		ttl = 0x40(64)
		protocol = 0x11(17)
		hdrchecksum = 0xc195(49557)
		srcAddr = 0x7f000001(2130706433)
		dstAddr = 0x7f000001(2130706433)
	)
		udp = (
		isValid = 0x1(1)
		sport = 0xa9d3(43475)
		dport = 0x2bcb(11211)
		len = 0x0461(1121)
		chksum = 0x0275(629)
	)
	)
	Parser_extracts = (
		size = 0x00000150(336)
	)
Section parse_udp finished
-------------------------------------------------------------------
processing section accept in stage 4
-------------------------------------------------------------------
Section accept starting


	method move_to_section = done(0)

updated tuples:
	control = (
		offset = 0x0150(336)
		virtual_offset = 0x0150(336)
		section = 0x0(0)
		activeBank = 0x0(0)
		done = 0x1(1)
		error = 0x0(0)
	)
	hdr = (
		eth = (
		isValid = 0x1(1)
		dst = 0x000000000000(0)
		src = 0x000000000000(0)
		type = 0x0800(2048)
	)
		fec = (
		isValid = 0x0(0)
		traffic_class = 0x0(0)
		block_index = 0x00(0)
		packet_index = 0x00(0)
		original_type = 0x0000(0)
	)
		ipv4 = (
		isValid = 0x1(1)
		version = 0x4(4)
		ihl = 0x5(5)
		diffserv = 0x00(0)
		totallen = 0x0475(1141)
		identification = 0x76e0(30432)
		flags = 0x2(2)
		fragoffset = 0x0000(0)
		ttl = 0x40(64)
		protocol = 0x11(17)
		hdrchecksum = 0xc195(49557)
		srcAddr = 0x7f000001(2130706433)
		dstAddr = 0x7f000001(2130706433)
	)
		udp = (
		isValid = 0x1(1)
		sport = 0xa9d3(43475)
		dport = 0x2bcb(11211)
		len = 0x0461(1121)
		chksum = 0x0275(629)
	)
	)
	Parser_extracts = (
		size = 0x00000150(336)
	)
Section accept finished
-------------------------------------------------------------------
final inout and output tuples:

Note: this engine's wrapper will clear the upper control tuple fields on output, except for the 'control.error' field.

	control = (
		offset = 0x0000(0)
		virtual_offset = 0x0000(0)
		section = 0x0(0)
		activeBank = 0x0(0)
		done = 0x0(0)
		error = 0x0(0)
	)
	hdr = (
		eth = (
		isValid = 0x1(1)
		dst = 0x000000000000(0)
		src = 0x000000000000(0)
		type = 0x0800(2048)
	)
		fec = (
		isValid = 0x0(0)
		traffic_class = 0x0(0)
		block_index = 0x00(0)
		packet_index = 0x00(0)
		original_type = 0x0000(0)
	)
		ipv4 = (
		isValid = 0x1(1)
		version = 0x4(4)
		ihl = 0x5(5)
		diffserv = 0x00(0)
		totallen = 0x0475(1141)
		identification = 0x76e0(30432)
		flags = 0x2(2)
		fragoffset = 0x0000(0)
		ttl = 0x40(64)
		protocol = 0x11(17)
		hdrchecksum = 0xc195(49557)
		srcAddr = 0x7f000001(2130706433)
		dstAddr = 0x7f000001(2130706433)
	)
		udp = (
		isValid = 0x1(1)
		sport = 0xa9d3(43475)
		dport = 0x2bcb(11211)
		len = 0x0461(1121)
		chksum = 0x0275(629)
	)
	)
	Parser_extracts = (
		size = 0x00000150(336)
	)
Exiting engine Parser
===================================================================
===================================================================
Entering engine CheckCache_lvl
input packet (0 bytes)
initial input and inout tuples:
	hdr = (
		eth = (
		isValid = 0x1(1)
		dst = 0x000000000000(0)
		src = 0x000000000000(0)
		type = 0x0800(2048)
	)
		fec = (
		isValid = 0x0(0)
		traffic_class = 0x0(0)
		block_index = 0x00(0)
		packet_index = 0x00(0)
		original_type = 0x0000(0)
	)
		ipv4 = (
		isValid = 0x1(1)
		version = 0x4(4)
		ihl = 0x5(5)
		diffserv = 0x00(0)
		totallen = 0x0475(1141)
		identification = 0x76e0(30432)
		flags = 0x2(2)
		fragoffset = 0x0000(0)
		ttl = 0x40(64)
		protocol = 0x11(17)
		hdrchecksum = 0xc195(49557)
		srcAddr = 0x7f000001(2130706433)
		dstAddr = 0x7f000001(2130706433)
	)
		udp = (
		isValid = 0x1(1)
		sport = 0xa9d3(43475)
		dport = 0x2bcb(11211)
		len = 0x0461(1121)
		chksum = 0x0275(629)
	)
	)
	ioports = (
		ingress_port = 0x0(0)
		egress_port = 0x0(0)
	)
clear internal and output-only tuples
	control = (
		offset = 0x0000(0)
		virtual_offset = 0x0000(0)
		section = 0x0(0)
		activeBank = 0x0(0)
		done = 0x0(0)
		error = 0x0(0)
	)
	CheckCache_fl = (
		forward_1 = 0x0(0)
	)
	local_state = (
		id = 0x0000(0)
	)
processing section setup in stage 1
-------------------------------------------------------------------
Section setup starting


	method move_to_section = done(0)

updated tuples:
	control = (
		offset = 0x0000(0)
		virtual_offset = 0x0000(0)
		section = 0x0(0)
		activeBank = 0x0(0)
		done = 0x1(1)
		error = 0x0(0)
	)
	CheckCache_fl = (
		forward_1 = 0x0(0)
	)
	hdr = (
		eth = (
		isValid = 0x1(1)
		dst = 0x000000000000(0)
		src = 0x000000000000(0)
		type = 0x0800(2048)
	)
		fec = (
		isValid = 0x0(0)
		traffic_class = 0x0(0)
		block_index = 0x00(0)
		packet_index = 0x00(0)
		original_type = 0x0000(0)
	)
		ipv4 = (
		isValid = 0x1(1)
		version = 0x4(4)
		ihl = 0x5(5)
		diffserv = 0x00(0)
		totallen = 0x0475(1141)
		identification = 0x76e0(30432)
		flags = 0x2(2)
		fragoffset = 0x0000(0)
		ttl = 0x40(64)
		protocol = 0x11(17)
		hdrchecksum = 0xc195(49557)
		srcAddr = 0x7f000001(2130706433)
		dstAddr = 0x7f000001(2130706433)
	)
		udp = (
		isValid = 0x1(1)
		sport = 0xa9d3(43475)
		dport = 0x2bcb(11211)
		len = 0x0461(1121)
		chksum = 0x0275(629)
	)
	)
	ioports = (
		ingress_port = 0x0(0)
		egress_port = 0x0(0)
	)
	local_state = (
		id = 0x0000(0)
	)
Section setup finished
-------------------------------------------------------------------
final inout and output tuples:

Note: this engine's wrapper will clear the upper control tuple fields on output, except for the 'control.error' field.

	CheckCache_fl = (
		forward_1 = 0x0(0)
	)
	hdr = (
		eth = (
		isValid = 0x1(1)
		dst = 0x000000000000(0)
		src = 0x000000000000(0)
		type = 0x0800(2048)
	)
		fec = (
		isValid = 0x0(0)
		traffic_class = 0x0(0)
		block_index = 0x00(0)
		packet_index = 0x00(0)
		original_type = 0x0000(0)
	)
		ipv4 = (
		isValid = 0x1(1)
		version = 0x4(4)
		ihl = 0x5(5)
		diffserv = 0x00(0)
		totallen = 0x0475(1141)
		identification = 0x76e0(30432)
		flags = 0x2(2)
		fragoffset = 0x0000(0)
		ttl = 0x40(64)
		protocol = 0x11(17)
		hdrchecksum = 0xc195(49557)
		srcAddr = 0x7f000001(2130706433)
		dstAddr = 0x7f000001(2130706433)
	)
		udp = (
		isValid = 0x1(1)
		sport = 0xa9d3(43475)
		dport = 0x2bcb(11211)
		len = 0x0461(1121)
		chksum = 0x0275(629)
	)
	)
	ioports = (
		ingress_port = 0x0(0)
		egress_port = 0x0(0)
	)
	local_state = (
		id = 0x0000(0)
	)
Exiting engine CheckCache_lvl
===================================================================
===================================================================
Entering engine CheckCache_lvl_0
input packet (0 bytes)
initial input and inout tuples:
	CheckCache_fl = (
		forward_1 = 0x0(0)
	)
	hdr = (
		eth = (
		isValid = 0x1(1)
		dst = 0x000000000000(0)
		src = 0x000000000000(0)
		type = 0x0800(2048)
	)
		fec = (
		isValid = 0x0(0)
		traffic_class = 0x0(0)
		block_index = 0x00(0)
		packet_index = 0x00(0)
		original_type = 0x0000(0)
	)
		ipv4 = (
		isValid = 0x1(1)
		version = 0x4(4)
		ihl = 0x5(5)
		diffserv = 0x00(0)
		totallen = 0x0475(1141)
		identification = 0x76e0(30432)
		flags = 0x2(2)
		fragoffset = 0x0000(0)
		ttl = 0x40(64)
		protocol = 0x11(17)
		hdrchecksum = 0xc195(49557)
		srcAddr = 0x7f000001(2130706433)
		dstAddr = 0x7f000001(2130706433)
	)
		udp = (
		isValid = 0x1(1)
		sport = 0xa9d3(43475)
		dport = 0x2bcb(11211)
		len = 0x0461(1121)
		chksum = 0x0275(629)
	)
	)
	ioports = (
		ingress_port = 0x0(0)
		egress_port = 0x0(0)
	)
	local_state = (
		id = 0x0000(0)
	)
clear internal and output-only tuples
	control = (
		offset = 0x0000(0)
		virtual_offset = 0x0000(0)
		section = 0x0(0)
		activeBank = 0x0(0)
		done = 0x0(0)
		error = 0x0(0)
	)
	memcached_input = (
		stateful_valid = 0x0(0)
	)
processing section condition_sec_0 in stage 1
-------------------------------------------------------------------
Section condition_sec_0 starting

	method update (tuples)
		local_state.id = 0x0005(5)


	method move_to_section = condition_sec

updated tuples:
	control = (
		offset = 0x0000(0)
		virtual_offset = 0x0000(0)
		section = 0x2(2)
		activeBank = 0x0(0)
		done = 0x0(0)
		error = 0x0(0)
	)
	CheckCache_fl = (
		forward_1 = 0x0(0)
	)
	hdr = (
		eth = (
		isValid = 0x1(1)
		dst = 0x000000000000(0)
		src = 0x000000000000(0)
		type = 0x0800(2048)
	)
		fec = (
		isValid = 0x0(0)
		traffic_class = 0x0(0)
		block_index = 0x00(0)
		packet_index = 0x00(0)
		original_type = 0x0000(0)
	)
		ipv4 = (
		isValid = 0x1(1)
		version = 0x4(4)
		ihl = 0x5(5)
		diffserv = 0x00(0)
		totallen = 0x0475(1141)
		identification = 0x76e0(30432)
		flags = 0x2(2)
		fragoffset = 0x0000(0)
		ttl = 0x40(64)
		protocol = 0x11(17)
		hdrchecksum = 0xc195(49557)
		srcAddr = 0x7f000001(2130706433)
		dstAddr = 0x7f000001(2130706433)
	)
		udp = (
		isValid = 0x1(1)
		sport = 0xa9d3(43475)
		dport = 0x2bcb(11211)
		len = 0x0461(1121)
		chksum = 0x0275(629)
	)
	)
	ioports = (
		ingress_port = 0x0(0)
		egress_port = 0x0(0)
	)
	local_state = (
		id = 0x0005(5)
	)
	memcached_input = (
		stateful_valid = 0x0(0)
	)
Section condition_sec_0 finished
-------------------------------------------------------------------
processing section condition_sec in stage 2
-------------------------------------------------------------------
Section condition_sec starting

	method update (tuples)
		local_state.id = 0x0005(5)


	method move_to_section = act_0_sec

updated tuples:
	control = (
		offset = 0x0000(0)
		virtual_offset = 0x0000(0)
		section = 0x1(1)
		activeBank = 0x0(0)
		done = 0x0(0)
		error = 0x0(0)
	)
	CheckCache_fl = (
		forward_1 = 0x0(0)
	)
	hdr = (
		eth = (
		isValid = 0x1(1)
		dst = 0x000000000000(0)
		src = 0x000000000000(0)
		type = 0x0800(2048)
	)
		fec = (
		isValid = 0x0(0)
		traffic_class = 0x0(0)
		block_index = 0x00(0)
		packet_index = 0x00(0)
		original_type = 0x0000(0)
	)
		ipv4 = (
		isValid = 0x1(1)
		version = 0x4(4)
		ihl = 0x5(5)
		diffserv = 0x00(0)
		totallen = 0x0475(1141)
		identification = 0x76e0(30432)
		flags = 0x2(2)
		fragoffset = 0x0000(0)
		ttl = 0x40(64)
		protocol = 0x11(17)
		hdrchecksum = 0xc195(49557)
		srcAddr = 0x7f000001(2130706433)
		dstAddr = 0x7f000001(2130706433)
	)
		udp = (
		isValid = 0x1(1)
		sport = 0xa9d3(43475)
		dport = 0x2bcb(11211)
		len = 0x0461(1121)
		chksum = 0x0275(629)
	)
	)
	ioports = (
		ingress_port = 0x0(0)
		egress_port = 0x0(0)
	)
	local_state = (
		id = 0x0005(5)
	)
	memcached_input = (
		stateful_valid = 0x0(0)
	)
Section condition_sec finished
-------------------------------------------------------------------
processing section act_0_sec in stage 3
-------------------------------------------------------------------
Section act_0_sec starting

	method update (tuples)
		memcached_input.stateful_valid = 0x1(1)
		local_state.id = 0x0004(4)


	method move_to_section = local_end

updated tuples:
	control = (
		offset = 0x0000(0)
		virtual_offset = 0x0000(0)
		section = 0x4(4)
		activeBank = 0x0(0)
		done = 0x0(0)
		error = 0x0(0)
	)
	CheckCache_fl = (
		forward_1 = 0x0(0)
	)
	hdr = (
		eth = (
		isValid = 0x1(1)
		dst = 0x000000000000(0)
		src = 0x000000000000(0)
		type = 0x0800(2048)
	)
		fec = (
		isValid = 0x0(0)
		traffic_class = 0x0(0)
		block_index = 0x00(0)
		packet_index = 0x00(0)
		original_type = 0x0000(0)
	)
		ipv4 = (
		isValid = 0x1(1)
		version = 0x4(4)
		ihl = 0x5(5)
		diffserv = 0x00(0)
		totallen = 0x0475(1141)
		identification = 0x76e0(30432)
		flags = 0x2(2)
		fragoffset = 0x0000(0)
		ttl = 0x40(64)
		protocol = 0x11(17)
		hdrchecksum = 0xc195(49557)
		srcAddr = 0x7f000001(2130706433)
		dstAddr = 0x7f000001(2130706433)
	)
		udp = (
		isValid = 0x1(1)
		sport = 0xa9d3(43475)
		dport = 0x2bcb(11211)
		len = 0x0461(1121)
		chksum = 0x0275(629)
	)
	)
	ioports = (
		ingress_port = 0x0(0)
		egress_port = 0x0(0)
	)
	local_state = (
		id = 0x0004(4)
	)
	memcached_input = (
		stateful_valid = 0x1(1)
	)
Section act_0_sec finished
-------------------------------------------------------------------
processing section local_end in stage 4
-------------------------------------------------------------------
Section local_end starting


	method move_to_section = done(0)

updated tuples:
	control = (
		offset = 0x0000(0)
		virtual_offset = 0x0000(0)
		section = 0x0(0)
		activeBank = 0x0(0)
		done = 0x1(1)
		error = 0x0(0)
	)
	CheckCache_fl = (
		forward_1 = 0x0(0)
	)
	hdr = (
		eth = (
		isValid = 0x1(1)
		dst = 0x000000000000(0)
		src = 0x000000000000(0)
		type = 0x0800(2048)
	)
		fec = (
		isValid = 0x0(0)
		traffic_class = 0x0(0)
		block_index = 0x00(0)
		packet_index = 0x00(0)
		original_type = 0x0000(0)
	)
		ipv4 = (
		isValid = 0x1(1)
		version = 0x4(4)
		ihl = 0x5(5)
		diffserv = 0x00(0)
		totallen = 0x0475(1141)
		identification = 0x76e0(30432)
		flags = 0x2(2)
		fragoffset = 0x0000(0)
		ttl = 0x40(64)
		protocol = 0x11(17)
		hdrchecksum = 0xc195(49557)
		srcAddr = 0x7f000001(2130706433)
		dstAddr = 0x7f000001(2130706433)
	)
		udp = (
		isValid = 0x1(1)
		sport = 0xa9d3(43475)
		dport = 0x2bcb(11211)
		len = 0x0461(1121)
		chksum = 0x0275(629)
	)
	)
	ioports = (
		ingress_port = 0x0(0)
		egress_port = 0x0(0)
	)
	local_state = (
		id = 0x0004(4)
	)
	memcached_input = (
		stateful_valid = 0x1(1)
	)
Section local_end finished
-------------------------------------------------------------------
final inout and output tuples:

Note: this engine's wrapper will clear the upper control tuple fields on output, except for the 'control.error' field.

	CheckCache_fl = (
		forward_1 = 0x0(0)
	)
	hdr = (
		eth = (
		isValid = 0x1(1)
		dst = 0x000000000000(0)
		src = 0x000000000000(0)
		type = 0x0800(2048)
	)
		fec = (
		isValid = 0x0(0)
		traffic_class = 0x0(0)
		block_index = 0x00(0)
		packet_index = 0x00(0)
		original_type = 0x0000(0)
	)
		ipv4 = (
		isValid = 0x1(1)
		version = 0x4(4)
		ihl = 0x5(5)
		diffserv = 0x00(0)
		totallen = 0x0475(1141)
		identification = 0x76e0(30432)
		flags = 0x2(2)
		fragoffset = 0x0000(0)
		ttl = 0x40(64)
		protocol = 0x11(17)
		hdrchecksum = 0xc195(49557)
		srcAddr = 0x7f000001(2130706433)
		dstAddr = 0x7f000001(2130706433)
	)
		udp = (
		isValid = 0x1(1)
		sport = 0xa9d3(43475)
		dport = 0x2bcb(11211)
		len = 0x0461(1121)
		chksum = 0x0275(629)
	)
	)
	ioports = (
		ingress_port = 0x0(0)
		egress_port = 0x0(0)
	)
	local_state = (
		id = 0x0004(4)
	)
	memcached_input = (
		stateful_valid = 0x1(1)
	)
Exiting engine CheckCache_lvl_0
===================================================================
===================================================================
Entering engine memcached_0
input packet (1155 bytes)
 0x0000(0) : 00 00 00 00 00 00 00 00 00 00 00 00 08 00 45 00 
0x0010(16) : 04 75 76 e0 40 00 40 11 c1 95 7f 00 00 01 7f 00 
0x0020(32) : 00 01 a9 d3 2b cb 04 61 02 75 00 04 00 00 00 01 
0x0030(48) : 01 00 73 65 74 20 12 10 10 10 10 10 10 10 77 34 
0x0040(64) : 74 30 59 59 44 41 53 41 47 44 59 65 68 45 43 48 
0x0050(80) : 49 2d 49 50 36 4d 72 2d 7a 50 62 51 75 56 56 6c 
0x0060(96) : 56 31 49 6a 42 6b 74 52 78 50 33 63 65 47 74 77 
0x0070(112) : 46 39 4b 4c 56 39 20 30 20 30 20 31 30 32 34 0d 
0x0080(128) : 0a 77 34 74 30 59 59 44 41 53 41 47 44 59 65 68 
0x0090(144) : 45 43 48 49 2d 49 50 36 4d 72 2d 7a 50 62 51 75 
0x00a0(160) : 56 56 6c 56 31 49 6a 42 6b 74 52 78 50 33 63 65 
0x00b0(176) : 47 74 77 46 39 4b 4c 56 39 4c 54 59 77 74 51 51 
0x00c0(192) : 4d 39 76 4e 52 63 59 39 54 7a 35 74 31 68 56 48 
0x00d0(208) : 5a 50 57 69 6a 73 43 73 42 66 4f 35 57 6f 56 74 
0x00e0(224) : 79 50 45 4e 2d 6e 58 54 6b 63 4b 6c 48 70 30 71 
0x00f0(240) : 43 58 58 77 4e 6a 6d 59 4d 39 64 73 78 37 6a 74 
0x0100(256) : 57 79 46 56 6a 6d 79 52 4d 47 42 64 33 42 53 47 
0x0110(272) : 69 7a 41 33 67 77 62 30 33 44 73 2d 4b 61 73 71 
0x0120(288) : 57 35 4a 44 72 47 65 42 57 70 70 61 2d 46 71 68 
0x0130(304) : 43 2e 6c 73 75 4b 73 79 58 69 78 72 47 6e 66 6d 
0x0140(320) : 74 7a 7a 69 44 63 75 6a 50 68 48 4f 77 35 34 36 
0x0150(336) : 33 70 79 79 37 6f 75 66 55 70 55 6c 61 38 56 52 
0x0160(352) : 35 54 38 49 33 30 2d 53 68 48 72 62 4d 76 68 51 
0x0170(368) : 69 64 4d 70 50 45 53 74 31 78 63 62 33 36 31 38 
0x0180(384) : 5a 39 51 63 39 50 32 71 67 74 50 31 6d 34 52 53 
0x0190(400) : 68 6e 47 34 2d 69 78 30 64 59 62 67 65 63 6f 42 
0x01a0(416) : 6c 43 6e 75 63 70 69 47 68 35 48 52 39 69 75 71 
0x01b0(432) : 54 38 75 53 71 71 53 53 4d 32 36 2e 65 76 39 4f 
0x01c0(448) : 35 77 47 68 6a 7a 79 4f 32 44 71 43 77 69 30 4e 
0x01d0(464) : 71 76 71 65 6a 47 34 33 49 42 31 78 34 41 4a 39 
0x01e0(480) : 34 5a 72 6e 57 6e 41 5a 2e 2e 6c 75 67 6c 47 55 
0x01f0(496) : 65 34 36 4c 4b 42 4f 64 4d 50 59 51 5a 72 5a 64 
0x0200(512) : 4f 4f 50 76 39 5a 53 38 58 42 30 42 77 47 66 5a 
0x0210(528) : 4b 6c 75 66 77 48 47 47 67 6f 67 45 64 45 72 2d 
0x0220(544) : 63 45 75 6d 6e 4b 75 49 56 75 54 51 39 36 7a 54 
0x0230(560) : 73 72 36 6d 36 4d 31 6e 38 68 2d 6c 76 71 6c 57 
0x0240(576) : 33 64 47 71 79 38 37 52 30 61 72 39 68 6f 64 58 
0x0250(592) : 65 6a 48 6b 34 49 56 43 2e 55 79 74 4a 68 4e 4d 
0x0260(608) : 49 64 41 45 6c 48 67 6d 73 56 76 58 49 57 32 77 
0x0270(624) : 45 4a 65 49 63 38 55 61 63 51 52 76 35 70 46 4f 
0x0280(640) : 51 51 63 41 68 47 77 58 6d 70 32 32 4b 34 79 59 
0x0290(656) : 4f 61 71 2e 69 49 59 4a 6a 7a 43 6f 6d 53 41 42 
0x02a0(672) : 73 6e 4c 58 31 46 33 6e 32 35 70 4d 41 6c 75 59 
0x02b0(688) : 4b 69 57 30 2d 32 4a 69 2d 57 55 6d 79 66 78 6f 
0x02c0(704) : 51 47 4a 52 56 4d 44 58 53 30 75 63 6d 6d 38 34 
0x02d0(720) : 54 65 34 53 67 4f 38 66 75 63 50 71 46 4b 63 66 
0x02e0(736) : 61 76 35 33 47 49 62 69 49 54 49 32 44 51 36 67 
0x02f0(752) : 32 42 36 69 5a 45 4c 52 72 6c 46 34 33 72 6b 65 
0x0300(768) : 6b 70 68 2e 35 47 67 4e 6a 79 51 78 4d 57 62 4f 
0x0310(784) : 68 69 34 45 77 51 66 6c 39 75 71 43 6a 59 71 53 
0x0320(800) : 4c 57 51 51 6d 35 6e 55 31 42 50 4f 69 2e 6d 4e 
0x0330(816) : 67 72 63 62 46 46 4b 4f 38 38 61 72 67 50 48 2d 
0x0340(832) : 76 69 50 66 6e 42 37 6f 4d 57 41 32 56 78 51 39 
0x0350(848) : 6d 30 6b 2d 46 33 4e 4e 42 78 44 73 4b 55 72 44 
0x0360(864) : 41 46 74 78 51 2e 6b 6d 56 75 70 2e 70 44 37 5a 
0x0370(880) : 44 73 59 53 76 76 71 34 72 31 77 39 56 6d 4e 67 
0x0380(896) : 2d 45 62 50 43 4a 39 68 43 79 66 2d 39 6e 5a 4d 
0x0390(912) : 64 35 70 57 2d 64 61 71 65 56 7a 37 46 4b 6e 45 
0x03a0(928) : 59 4e 64 6c 67 6d 51 73 6a 34 73 73 72 50 44 53 
0x03b0(944) : 55 30 79 54 64 57 48 46 2d 46 4d 45 5a 38 53 36 
0x03c0(960) : 56 33 72 39 71 46 30 58 4a 73 4e 38 46 61 61 6a 
0x03d0(976) : 61 57 42 42 31 53 51 30 68 6e 46 46 76 68 4c 4f 
0x03e0(992) : 6c 41 58 5a 50 58 34 6a 4e 52 72 63 30 51 4b 61 
0x03f0(1008) : 77 56 6d 78 78 41 79 64 78 42 73 71 73 42 43 62 
0x0400(1024) : 4c 6b 38 6b 46 43 52 64 65 48 44 65 68 58 43 62 
0x0410(1040) : 30 79 58 79 37 54 5a 32 65 50 74 55 61 33 34 76 
0x0420(1056) : 6e 43 64 31 50 33 65 31 4b 72 66 2d 4e 72 61 4e 
0x0430(1072) : 6f 35 4a 76 59 73 78 41 46 6f 66 70 73 6a 69 64 
0x0440(1088) : 76 4b 65 49 4e 47 4a 68 36 79 67 54 6f 45 71 61 
0x0450(1104) : 4b 38 54 73 2e 4f 31 45 42 67 31 31 4e 6b 65 47 
0x0460(1120) : 32 48 5a 50 58 73 34 64 70 6b 34 62 79 76 39 47 
0x0470(1136) : 31 63 37 2d 2e 38 44 39 6f 46 41 39 7a 70 50 2d 
0x0480(1152) : 34 0d 0a 
initial input and inout tuples:
	control = (
		offset = 0x0000(0)
		virtual_offset = 0x0000(0)
		section = 0x0(0)
		activeBank = 0x0(0)
		done = 0x0(0)
		error = 0x0(0)
	)
	CheckCache_fl = (
		forward_1 = 0x0(0)
	)
	hdr = (
		eth = (
		isValid = 0x1(1)
		dst = 0x000000000000(0)
		src = 0x000000000000(0)
		type = 0x0800(2048)
	)
		fec = (
		isValid = 0x0(0)
		traffic_class = 0x0(0)
		block_index = 0x00(0)
		packet_index = 0x00(0)
		original_type = 0x0000(0)
	)
		ipv4 = (
		isValid = 0x1(1)
		version = 0x4(4)
		ihl = 0x5(5)
		diffserv = 0x00(0)
		totallen = 0x0475(1141)
		identification = 0x76e0(30432)
		flags = 0x2(2)
		fragoffset = 0x0000(0)
		ttl = 0x40(64)
		protocol = 0x11(17)
		hdrchecksum = 0xc195(49557)
		srcAddr = 0x7f000001(2130706433)
		dstAddr = 0x7f000001(2130706433)
	)
		udp = (
		isValid = 0x1(1)
		sport = 0xa9d3(43475)
		dport = 0x2bcb(11211)
		len = 0x0461(1121)
		chksum = 0x0275(629)
	)
	)
	ioports = (
		ingress_port = 0x0(0)
		egress_port = 0x0(0)
	)
	local_state = (
		id = 0x0004(4)
	)
	Parser_extracts = (
		size = 0x00000150(336)
	)
	memcached_input = (
		stateful_valid = 0x1(1)
	)
clear internal and output-only tuples
	memcached_output = (
		forward = 0x0(0)
	)
Enter USER ENGINE FUNCTION
0
134235392
321293653945368593
13949195058826804992
468199414629473
177047777530871809
72184473615077904
1157442765409253172
8372289947213845313
5135327767185146696
5272951347577975341
8813652572764526188
6210826081850324050
8669485784682165367
5060158447563644976
2319389203729888269
754129136239860036
4707177809877493096
4990912291186233398
5580572891623346549
6221279052708801090
7742904336051823461
5148871417483971670
4128767701624836433
5564608893354727737
6087236619506046536
6507797571819488115
4784598744646506100
8741563078798104660
7738111513196507249
4852725867931659609
5564589261693872756
6303146490448410962
5568492462391055175
7600459010176148016
3694204232726049649
6284010512900908354
6300659441365053800
4840925892614779769
6370755580112299629
8393155448095864170
5793960426751734838
3706596054853973350
6156514614591379026
3842758269096439123
7514381744799639633
7594280016431895412
3564708378480881976
6501317023691190897
7454671456420778579
7525030316808435760
7230918872942210882
7801200429994371399
7508987471697900913
6068729499127731027
5562568062654626127
3852626520027330895
3622144534892851278
8175846853926401075
5278836105574173241
3772453456115024218
3327716426175498069
7292513397927726948
5571050945001970276
5714874920855032632
6359698685827704410
5434847933277685575
7453289456054137389
7153252696010224969
6229978367365904980
8318771304397091182
4064548607568735319
3703163346295994194
3486193177452307544
7307732970637973059
3338708239136607821
5288423628865038189
8310960283918479991
4992914502765270369
7156591950524597839
5859573722759264088
7885858139117222233
5719977445886089546
7672519061033664834
8317669503467402094
3617921352774481241
5433970289827531369
3267173983357139055
5856731557914297432
5994420173928216628
6081324404653897830
8458692972572795750
7022859163286463081
5283928743055799911
3621516876473257042
8245042207823915877
7741802307121538894
7672253017337848399
7523602125458335340
4140339966798033235
5500954880022769237
3549487758318660942
7454129606988548943
4051095008807241773
8532439369896834927
5572994748349174073
7867906391211724366
4789653465684341316
4703574920941955949
6230009004291274586
4932384231905456436
8228489082329452135
3262121601965635944
4862029617146255949
7220801097284477297
7302158223648976453
6435191334313480563
7652868606485611603
6138539695473641542
3262379940338225974
6211433902113173592
5364717584734314858
7014147796715655472
7525029295830879311
7800613174500668522
5643699053386615649
8599180902691600740
8665615564116476770
5506557002782036580
7298158398486889314
3492920263645092402
7300462906019361910
7945304330573407537
5436520044965290318
8013392984143001665
5075387938228562276
8524018085249108584
3925282162571833697
5420175005215306053
4784847216943260999
3623245201347392612
8100625952305199431
3558748797741319225
8018167901702869037
3750665059785768960
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<Inside MemCore<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<< 
The No. 4Packet
0
983
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<Inside MemCore<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<< 
===================================================================
Entering engine CheckCache_lvl_1
input packet (0 bytes)
initial input and inout tuples:
	CheckCache_fl = (
		forward_1 = 0x0(0)
	)
	hdr = (
		eth = (
		isValid = 0x1(1)
		dst = 0x000000000000(0)
		src = 0x000000000000(0)
		type = 0x0800(2048)
	)
		fec = (
		isValid = 0x0(0)
		traffic_class = 0x0(0)
		block_index = 0x00(0)
		packet_index = 0x00(0)
		original_type = 0x0000(0)
	)
		ipv4 = (
		isValid = 0x1(1)
		version = 0x4(4)
		ihl = 0x5(5)
		diffserv = 0x00(0)
		totallen = 0x0475(1141)
		identification = 0x76e0(30432)
		flags = 0x2(2)
		fragoffset = 0x0000(0)
		ttl = 0x40(64)
		protocol = 0x11(17)
		hdrchecksum = 0xc195(49557)
		srcAddr = 0x7f000001(2130706433)
		dstAddr = 0x7f000001(2130706433)
	)
		udp = (
		isValid = 0x1(1)
		sport = 0xa9d3(43475)
		dport = 0x2bcb(11211)
		len = 0x0461(1121)
		chksum = 0x0275(629)
	)
	)
	ioports = (
		ingress_port = 0x0(0)
		egress_port = 0x0(0)
	)
	local_state = (
		id = 0x0004(4)
	)
	memcached_output = (
		forward = 0x0(0)
	)
clear internal and output-only tuples
	control = (
		offset = 0x0000(0)
		virtual_offset = 0x0000(0)
		section = 0x0(0)
		activeBank = 0x0(0)
		done = 0x0(0)
		error = 0x0(0)
	)
processing section local_start in stage 1
-------------------------------------------------------------------
Section local_start starting


	method move_to_section = memcached_sec

updated tuples:
	control = (
		offset = 0x0000(0)
		virtual_offset = 0x0000(0)
		section = 0x2(2)
		activeBank = 0x0(0)
		done = 0x0(0)
		error = 0x0(0)
	)
	CheckCache_fl = (
		forward_1 = 0x0(0)
	)
	hdr = (
		eth = (
		isValid = 0x1(1)
		dst = 0x000000000000(0)
		src = 0x000000000000(0)
		type = 0x0800(2048)
	)
		fec = (
		isValid = 0x0(0)
		traffic_class = 0x0(0)
		block_index = 0x00(0)
		packet_index = 0x00(0)
		original_type = 0x0000(0)
	)
		ipv4 = (
		isValid = 0x1(1)
		version = 0x4(4)
		ihl = 0x5(5)
		diffserv = 0x00(0)
		totallen = 0x0475(1141)
		identification = 0x76e0(30432)
		flags = 0x2(2)
		fragoffset = 0x0000(0)
		ttl = 0x40(64)
		protocol = 0x11(17)
		hdrchecksum = 0xc195(49557)
		srcAddr = 0x7f000001(2130706433)
		dstAddr = 0x7f000001(2130706433)
	)
		udp = (
		isValid = 0x1(1)
		sport = 0xa9d3(43475)
		dport = 0x2bcb(11211)
		len = 0x0461(1121)
		chksum = 0x0275(629)
	)
	)
	ioports = (
		ingress_port = 0x0(0)
		egress_port = 0x0(0)
	)
	local_state = (
		id = 0x0004(4)
	)
	memcached_output = (
		forward = 0x0(0)
	)
Section local_start finished
-------------------------------------------------------------------
processing section memcached_sec in stage 2
-------------------------------------------------------------------
Section memcached_sec starting

	method update (tuples)
		CheckCache_fl.forward_1 = 0x0(0)


	method move_to_section = sink

updated tuples:
	control = (
		offset = 0x0000(0)
		virtual_offset = 0x0000(0)
		section = 0x3(3)
		activeBank = 0x0(0)
		done = 0x0(0)
		error = 0x0(0)
	)
	CheckCache_fl = (
		forward_1 = 0x0(0)
	)
	hdr = (
		eth = (
		isValid = 0x1(1)
		dst = 0x000000000000(0)
		src = 0x000000000000(0)
		type = 0x0800(2048)
	)
		fec = (
		isValid = 0x0(0)
		traffic_class = 0x0(0)
		block_index = 0x00(0)
		packet_index = 0x00(0)
		original_type = 0x0000(0)
	)
		ipv4 = (
		isValid = 0x1(1)
		version = 0x4(4)
		ihl = 0x5(5)
		diffserv = 0x00(0)
		totallen = 0x0475(1141)
		identification = 0x76e0(30432)
		flags = 0x2(2)
		fragoffset = 0x0000(0)
		ttl = 0x40(64)
		protocol = 0x11(17)
		hdrchecksum = 0xc195(49557)
		srcAddr = 0x7f000001(2130706433)
		dstAddr = 0x7f000001(2130706433)
	)
		udp = (
		isValid = 0x1(1)
		sport = 0xa9d3(43475)
		dport = 0x2bcb(11211)
		len = 0x0461(1121)
		chksum = 0x0275(629)
	)
	)
	ioports = (
		ingress_port = 0x0(0)
		egress_port = 0x0(0)
	)
	local_state = (
		id = 0x0004(4)
	)
	memcached_output = (
		forward = 0x0(0)
	)
Section memcached_sec finished
-------------------------------------------------------------------
processing section sink in stage 3
-------------------------------------------------------------------
Section sink starting


	method move_to_section = done(0)

updated tuples:
	control = (
		offset = 0x0000(0)
		virtual_offset = 0x0000(0)
		section = 0x0(0)
		activeBank = 0x0(0)
		done = 0x1(1)
		error = 0x0(0)
	)
	CheckCache_fl = (
		forward_1 = 0x0(0)
	)
	hdr = (
		eth = (
		isValid = 0x1(1)
		dst = 0x000000000000(0)
		src = 0x000000000000(0)
		type = 0x0800(2048)
	)
		fec = (
		isValid = 0x0(0)
		traffic_class = 0x0(0)
		block_index = 0x00(0)
		packet_index = 0x00(0)
		original_type = 0x0000(0)
	)
		ipv4 = (
		isValid = 0x1(1)
		version = 0x4(4)
		ihl = 0x5(5)
		diffserv = 0x00(0)
		totallen = 0x0475(1141)
		identification = 0x76e0(30432)
		flags = 0x2(2)
		fragoffset = 0x0000(0)
		ttl = 0x40(64)
		protocol = 0x11(17)
		hdrchecksum = 0xc195(49557)
		srcAddr = 0x7f000001(2130706433)
		dstAddr = 0x7f000001(2130706433)
	)
		udp = (
		isValid = 0x1(1)
		sport = 0xa9d3(43475)
		dport = 0x2bcb(11211)
		len = 0x0461(1121)
		chksum = 0x0275(629)
	)
	)
	ioports = (
		ingress_port = 0x0(0)
		egress_port = 0x0(0)
	)
	local_state = (
		id = 0x0004(4)
	)
	memcached_output = (
		forward = 0x0(0)
	)
Section sink finished
-------------------------------------------------------------------
final inout and output tuples:

Note: this engine's wrapper will clear the upper control tuple fields on output, except for the 'control.error' field.

	hdr = (
		eth = (
		isValid = 0x1(1)
		dst = 0x000000000000(0)
		src = 0x000000000000(0)
		type = 0x0800(2048)
	)
		fec = (
		isValid = 0x0(0)
		traffic_class = 0x0(0)
		block_index = 0x00(0)
		packet_index = 0x00(0)
		original_type = 0x0000(0)
	)
		ipv4 = (
		isValid = 0x1(1)
		version = 0x4(4)
		ihl = 0x5(5)
		diffserv = 0x00(0)
		totallen = 0x0475(1141)
		identification = 0x76e0(30432)
		flags = 0x2(2)
		fragoffset = 0x0000(0)
		ttl = 0x40(64)
		protocol = 0x11(17)
		hdrchecksum = 0xc195(49557)
		srcAddr = 0x7f000001(2130706433)
		dstAddr = 0x7f000001(2130706433)
	)
		udp = (
		isValid = 0x1(1)
		sport = 0xa9d3(43475)
		dport = 0x2bcb(11211)
		len = 0x0461(1121)
		chksum = 0x0275(629)
	)
	)
	ioports = (
		ingress_port = 0x0(0)
		egress_port = 0x0(0)
	)
Exiting engine CheckCache_lvl_1
===================================================================
===================================================================
Entering engine Deparser
input packet (1155 bytes)
 0x0000(0) : 00 00 00 00 00 00 00 00 00 00 00 00 08 00 45 00 
0x0010(16) : 04 75 76 e0 40 00 40 11 c1 95 7f 00 00 01 7f 00 
0x0020(32) : 00 01 a9 d3 2b cb 04 61 02 75 00 04 00 00 00 01 
0x0030(48) : 01 00 73 65 74 20 12 10 10 10 10 10 10 10 77 34 
0x0040(64) : 74 30 59 59 44 41 53 41 47 44 59 65 68 45 43 48 
0x0050(80) : 49 2d 49 50 36 4d 72 2d 7a 50 62 51 75 56 56 6c 
0x0060(96) : 56 31 49 6a 42 6b 74 52 78 50 33 63 65 47 74 77 
0x0070(112) : 46 39 4b 4c 56 39 20 30 20 30 20 31 30 32 34 0d 
0x0080(128) : 0a 77 34 74 30 59 59 44 41 53 41 47 44 59 65 68 
0x0090(144) : 45 43 48 49 2d 49 50 36 4d 72 2d 7a 50 62 51 75 
0x00a0(160) : 56 56 6c 56 31 49 6a 42 6b 74 52 78 50 33 63 65 
0x00b0(176) : 47 74 77 46 39 4b 4c 56 39 4c 54 59 77 74 51 51 
0x00c0(192) : 4d 39 76 4e 52 63 59 39 54 7a 35 74 31 68 56 48 
0x00d0(208) : 5a 50 57 69 6a 73 43 73 42 66 4f 35 57 6f 56 74 
0x00e0(224) : 79 50 45 4e 2d 6e 58 54 6b 63 4b 6c 48 70 30 71 
0x00f0(240) : 43 58 58 77 4e 6a 6d 59 4d 39 64 73 78 37 6a 74 
0x0100(256) : 57 79 46 56 6a 6d 79 52 4d 47 42 64 33 42 53 47 
0x0110(272) : 69 7a 41 33 67 77 62 30 33 44 73 2d 4b 61 73 71 
0x0120(288) : 57 35 4a 44 72 47 65 42 57 70 70 61 2d 46 71 68 
0x0130(304) : 43 2e 6c 73 75 4b 73 79 58 69 78 72 47 6e 66 6d 
0x0140(320) : 74 7a 7a 69 44 63 75 6a 50 68 48 4f 77 35 34 36 
0x0150(336) : 33 70 79 79 37 6f 75 66 55 70 55 6c 61 38 56 52 
0x0160(352) : 35 54 38 49 33 30 2d 53 68 48 72 62 4d 76 68 51 
0x0170(368) : 69 64 4d 70 50 45 53 74 31 78 63 62 33 36 31 38 
0x0180(384) : 5a 39 51 63 39 50 32 71 67 74 50 31 6d 34 52 53 
0x0190(400) : 68 6e 47 34 2d 69 78 30 64 59 62 67 65 63 6f 42 
0x01a0(416) : 6c 43 6e 75 63 70 69 47 68 35 48 52 39 69 75 71 
0x01b0(432) : 54 38 75 53 71 71 53 53 4d 32 36 2e 65 76 39 4f 
0x01c0(448) : 35 77 47 68 6a 7a 79 4f 32 44 71 43 77 69 30 4e 
0x01d0(464) : 71 76 71 65 6a 47 34 33 49 42 31 78 34 41 4a 39 
0x01e0(480) : 34 5a 72 6e 57 6e 41 5a 2e 2e 6c 75 67 6c 47 55 
0x01f0(496) : 65 34 36 4c 4b 42 4f 64 4d 50 59 51 5a 72 5a 64 
0x0200(512) : 4f 4f 50 76 39 5a 53 38 58 42 30 42 77 47 66 5a 
0x0210(528) : 4b 6c 75 66 77 48 47 47 67 6f 67 45 64 45 72 2d 
0x0220(544) : 63 45 75 6d 6e 4b 75 49 56 75 54 51 39 36 7a 54 
0x0230(560) : 73 72 36 6d 36 4d 31 6e 38 68 2d 6c 76 71 6c 57 
0x0240(576) : 33 64 47 71 79 38 37 52 30 61 72 39 68 6f 64 58 
0x0250(592) : 65 6a 48 6b 34 49 56 43 2e 55 79 74 4a 68 4e 4d 
0x0260(608) : 49 64 41 45 6c 48 67 6d 73 56 76 58 49 57 32 77 
0x0270(624) : 45 4a 65 49 63 38 55 61 63 51 52 76 35 70 46 4f 
0x0280(640) : 51 51 63 41 68 47 77 58 6d 70 32 32 4b 34 79 59 
0x0290(656) : 4f 61 71 2e 69 49 59 4a 6a 7a 43 6f 6d 53 41 42 
0x02a0(672) : 73 6e 4c 58 31 46 33 6e 32 35 70 4d 41 6c 75 59 
0x02b0(688) : 4b 69 57 30 2d 32 4a 69 2d 57 55 6d 79 66 78 6f 
0x02c0(704) : 51 47 4a 52 56 4d 44 58 53 30 75 63 6d 6d 38 34 
0x02d0(720) : 54 65 34 53 67 4f 38 66 75 63 50 71 46 4b 63 66 
0x02e0(736) : 61 76 35 33 47 49 62 69 49 54 49 32 44 51 36 67 
0x02f0(752) : 32 42 36 69 5a 45 4c 52 72 6c 46 34 33 72 6b 65 
0x0300(768) : 6b 70 68 2e 35 47 67 4e 6a 79 51 78 4d 57 62 4f 
0x0310(784) : 68 69 34 45 77 51 66 6c 39 75 71 43 6a 59 71 53 
0x0320(800) : 4c 57 51 51 6d 35 6e 55 31 42 50 4f 69 2e 6d 4e 
0x0330(816) : 67 72 63 62 46 46 4b 4f 38 38 61 72 67 50 48 2d 
0x0340(832) : 76 69 50 66 6e 42 37 6f 4d 57 41 32 56 78 51 39 
0x0350(848) : 6d 30 6b 2d 46 33 4e 4e 42 78 44 73 4b 55 72 44 
0x0360(864) : 41 46 74 78 51 2e 6b 6d 56 75 70 2e 70 44 37 5a 
0x0370(880) : 44 73 59 53 76 76 71 34 72 31 77 39 56 6d 4e 67 
0x0380(896) : 2d 45 62 50 43 4a 39 68 43 79 66 2d 39 6e 5a 4d 
0x0390(912) : 64 35 70 57 2d 64 61 71 65 56 7a 37 46 4b 6e 45 
0x03a0(928) : 59 4e 64 6c 67 6d 51 73 6a 34 73 73 72 50 44 53 
0x03b0(944) : 55 30 79 54 64 57 48 46 2d 46 4d 45 5a 38 53 36 
0x03c0(960) : 56 33 72 39 71 46 30 58 4a 73 4e 38 46 61 61 6a 
0x03d0(976) : 61 57 42 42 31 53 51 30 68 6e 46 46 76 68 4c 4f 
0x03e0(992) : 6c 41 58 5a 50 58 34 6a 4e 52 72 63 30 51 4b 61 
0x03f0(1008) : 77 56 6d 78 78 41 79 64 78 42 73 71 73 42 43 62 
0x0400(1024) : 4c 6b 38 6b 46 43 52 64 65 48 44 65 68 58 43 62 
0x0410(1040) : 30 79 58 79 37 54 5a 32 65 50 74 55 61 33 34 76 
0x0420(1056) : 6e 43 64 31 50 33 65 31 4b 72 66 2d 4e 72 61 4e 
0x0430(1072) : 6f 35 4a 76 59 73 78 41 46 6f 66 70 73 6a 69 64 
0x0440(1088) : 76 4b 65 49 4e 47 4a 68 36 79 67 54 6f 45 71 61 
0x0450(1104) : 4b 38 54 73 2e 4f 31 45 42 67 31 31 4e 6b 65 47 
0x0460(1120) : 32 48 5a 50 58 73 34 64 70 6b 34 62 79 76 39 47 
0x0470(1136) : 31 63 37 2d 2e 38 44 39 6f 46 41 39 7a 70 50 2d 
0x0480(1152) : 34 0d 0a 
initial input and inout tuples:
	control = (
		offset = 0x0000(0)
		virtual_offset = 0x0000(0)
		section = 0x0(0)
		activeBank = 0x0(0)
		done = 0x0(0)
		error = 0x0(0)
	)
	hdr = (
		eth = (
		isValid = 0x1(1)
		dst = 0x000000000000(0)
		src = 0x000000000000(0)
		type = 0x0800(2048)
	)
		fec = (
		isValid = 0x0(0)
		traffic_class = 0x0(0)
		block_index = 0x00(0)
		packet_index = 0x00(0)
		original_type = 0x0000(0)
	)
		ipv4 = (
		isValid = 0x1(1)
		version = 0x4(4)
		ihl = 0x5(5)
		diffserv = 0x00(0)
		totallen = 0x0475(1141)
		identification = 0x76e0(30432)
		flags = 0x2(2)
		fragoffset = 0x0000(0)
		ttl = 0x40(64)
		protocol = 0x11(17)
		hdrchecksum = 0xc195(49557)
		srcAddr = 0x7f000001(2130706433)
		dstAddr = 0x7f000001(2130706433)
	)
		udp = (
		isValid = 0x1(1)
		sport = 0xa9d3(43475)
		dport = 0x2bcb(11211)
		len = 0x0461(1121)
		chksum = 0x0275(629)
	)
	)
	Deparser_extracts = (
		size = 0x00000150(336)
	)
clear internal and output-only tuples
processing section extract_headers_sec in stage 1
-------------------------------------------------------------------
Section extract_headers_sec starting


	method remove
	removing 42 bytes at byte 0:
 0x0000(0) : 00 00 00 00 00 00 00 00 00 00 00 00 08 00 45 00 
0x0010(16) : 04 75 76 e0 40 00 40 11 c1 95 7f 00 00 01 7f 00 
0x0020(32) : 00 01 a9 d3 2b cb 04 61 02 75 
	method move_to_section = act_sec

updated tuples:
	control = (
		offset = 0x0000(0)
		virtual_offset = 0x0150(336)
		section = 0x1(1)
		activeBank = 0x0(0)
		done = 0x0(0)
		error = 0x0(0)
	)
	hdr = (
		eth = (
		isValid = 0x1(1)
		dst = 0x000000000000(0)
		src = 0x000000000000(0)
		type = 0x0800(2048)
	)
		fec = (
		isValid = 0x0(0)
		traffic_class = 0x0(0)
		block_index = 0x00(0)
		packet_index = 0x00(0)
		original_type = 0x0000(0)
	)
		ipv4 = (
		isValid = 0x1(1)
		version = 0x4(4)
		ihl = 0x5(5)
		diffserv = 0x00(0)
		totallen = 0x0475(1141)
		identification = 0x76e0(30432)
		flags = 0x2(2)
		fragoffset = 0x0000(0)
		ttl = 0x40(64)
		protocol = 0x11(17)
		hdrchecksum = 0xc195(49557)
		srcAddr = 0x7f000001(2130706433)
		dstAddr = 0x7f000001(2130706433)
	)
		udp = (
		isValid = 0x1(1)
		sport = 0xa9d3(43475)
		dport = 0x2bcb(11211)
		len = 0x0461(1121)
		chksum = 0x0275(629)
	)
	)
	Deparser_extracts = (
		size = 0x00000150(336)
	)
Section extract_headers_sec finished
-------------------------------------------------------------------
processing section act_sec in stage 2
-------------------------------------------------------------------
Section act_sec starting


	method move_to_section = emit_3

updated tuples:
	control = (
		offset = 0x0000(0)
		virtual_offset = 0x0150(336)
		section = 0x5(5)
		activeBank = 0x0(0)
		done = 0x0(0)
		error = 0x0(0)
	)
	hdr = (
		eth = (
		isValid = 0x1(1)
		dst = 0x000000000000(0)
		src = 0x000000000000(0)
		type = 0x0800(2048)
	)
		fec = (
		isValid = 0x0(0)
		traffic_class = 0x0(0)
		block_index = 0x00(0)
		packet_index = 0x00(0)
		original_type = 0x0000(0)
	)
		ipv4 = (
		isValid = 0x1(1)
		version = 0x4(4)
		ihl = 0x5(5)
		diffserv = 0x00(0)
		totallen = 0x0475(1141)
		identification = 0x76e0(30432)
		flags = 0x2(2)
		fragoffset = 0x0000(0)
		ttl = 0x40(64)
		protocol = 0x11(17)
		hdrchecksum = 0xc195(49557)
		srcAddr = 0x7f000001(2130706433)
		dstAddr = 0x7f000001(2130706433)
	)
		udp = (
		isValid = 0x1(1)
		sport = 0xa9d3(43475)
		dport = 0x2bcb(11211)
		len = 0x0461(1121)
		chksum = 0x0275(629)
	)
	)
	Deparser_extracts = (
		size = 0x00000150(336)
	)
Section act_sec finished
-------------------------------------------------------------------
processing section emit_3 in stage 3
-------------------------------------------------------------------
Section emit_3 starting

	method update (tuples)


	method update (packet)
		 dst = 0x000000000000(0)
		 src = 0x000000000000(0)
		 type = 0x0800(2048)

	method insert
	inserting 14 bytes at byte 0:
 0x0000(0) : 00 00 00 00 00 00 00 00 00 00 00 00 08 00 
	method move_to_section = emit_2

updated tuples:
	control = (
		offset = 0x0070(112)
		virtual_offset = 0x0150(336)
		section = 0x4(4)
		activeBank = 0x0(0)
		done = 0x0(0)
		error = 0x0(0)
	)
	hdr = (
		eth = (
		isValid = 0x1(1)
		dst = 0x000000000000(0)
		src = 0x000000000000(0)
		type = 0x0800(2048)
	)
		fec = (
		isValid = 0x0(0)
		traffic_class = 0x0(0)
		block_index = 0x00(0)
		packet_index = 0x00(0)
		original_type = 0x0000(0)
	)
		ipv4 = (
		isValid = 0x1(1)
		version = 0x4(4)
		ihl = 0x5(5)
		diffserv = 0x00(0)
		totallen = 0x0475(1141)
		identification = 0x76e0(30432)
		flags = 0x2(2)
		fragoffset = 0x0000(0)
		ttl = 0x40(64)
		protocol = 0x11(17)
		hdrchecksum = 0xc195(49557)
		srcAddr = 0x7f000001(2130706433)
		dstAddr = 0x7f000001(2130706433)
	)
		udp = (
		isValid = 0x1(1)
		sport = 0xa9d3(43475)
		dport = 0x2bcb(11211)
		len = 0x0461(1121)
		chksum = 0x0275(629)
	)
	)
	Deparser_extracts = (
		size = 0x00000150(336)
	)
Section emit_3 finished
-------------------------------------------------------------------
processing section emit_2 in stage 4
-------------------------------------------------------------------
Section emit_2 starting

	method update (tuples)


	method update (packet)
		 traffic_class = 0x0(0)
		 block_index = 0x00(0)
		 packet_index = 0x00(0)
		 original_type = 0x0000(0)

	method insert
	inserting 0 bytes at byte 14:
 0x0000(0) :                                           
	method move_to_section = emit_1

updated tuples:
	control = (
		offset = 0x0070(112)
		virtual_offset = 0x0150(336)
		section = 0x3(3)
		activeBank = 0x0(0)
		done = 0x0(0)
		error = 0x0(0)
	)
	hdr = (
		eth = (
		isValid = 0x1(1)
		dst = 0x000000000000(0)
		src = 0x000000000000(0)
		type = 0x0800(2048)
	)
		fec = (
		isValid = 0x0(0)
		traffic_class = 0x0(0)
		block_index = 0x00(0)
		packet_index = 0x00(0)
		original_type = 0x0000(0)
	)
		ipv4 = (
		isValid = 0x1(1)
		version = 0x4(4)
		ihl = 0x5(5)
		diffserv = 0x00(0)
		totallen = 0x0475(1141)
		identification = 0x76e0(30432)
		flags = 0x2(2)
		fragoffset = 0x0000(0)
		ttl = 0x40(64)
		protocol = 0x11(17)
		hdrchecksum = 0xc195(49557)
		srcAddr = 0x7f000001(2130706433)
		dstAddr = 0x7f000001(2130706433)
	)
		udp = (
		isValid = 0x1(1)
		sport = 0xa9d3(43475)
		dport = 0x2bcb(11211)
		len = 0x0461(1121)
		chksum = 0x0275(629)
	)
	)
	Deparser_extracts = (
		size = 0x00000150(336)
	)
Section emit_2 finished
-------------------------------------------------------------------
processing section emit_1 in stage 5
-------------------------------------------------------------------
Section emit_1 starting

	method update (tuples)


	method update (packet)
		 version = 0x4(4)
		 ihl = 0x5(5)
		 diffserv = 0x00(0)
		 totallen = 0x0475(1141)
		 identification = 0x76e0(30432)
		 flags = 0x2(2)
		 fragoffset = 0x0000(0)
		 ttl = 0x40(64)
		 protocol = 0x11(17)
		 hdrchecksum = 0xc195(49557)
		 srcAddr = 0x7f000001(2130706433)
		 dstAddr = 0x7f000001(2130706433)

	method insert
	inserting 20 bytes at byte 14:
 0x0000(0) :                                           45 00 
0x0010(16) : 04 75 76 e0 40 00 40 11 c1 95 7f 00 00 01 7f 00 
0x0020(32) : 00 01 
	method move_to_section = emit_0

updated tuples:
	control = (
		offset = 0x0110(272)
		virtual_offset = 0x0150(336)
		section = 0x2(2)
		activeBank = 0x0(0)
		done = 0x0(0)
		error = 0x0(0)
	)
	hdr = (
		eth = (
		isValid = 0x1(1)
		dst = 0x000000000000(0)
		src = 0x000000000000(0)
		type = 0x0800(2048)
	)
		fec = (
		isValid = 0x0(0)
		traffic_class = 0x0(0)
		block_index = 0x00(0)
		packet_index = 0x00(0)
		original_type = 0x0000(0)
	)
		ipv4 = (
		isValid = 0x1(1)
		version = 0x4(4)
		ihl = 0x5(5)
		diffserv = 0x00(0)
		totallen = 0x0475(1141)
		identification = 0x76e0(30432)
		flags = 0x2(2)
		fragoffset = 0x0000(0)
		ttl = 0x40(64)
		protocol = 0x11(17)
		hdrchecksum = 0xc195(49557)
		srcAddr = 0x7f000001(2130706433)
		dstAddr = 0x7f000001(2130706433)
	)
		udp = (
		isValid = 0x1(1)
		sport = 0xa9d3(43475)
		dport = 0x2bcb(11211)
		len = 0x0461(1121)
		chksum = 0x0275(629)
	)
	)
	Deparser_extracts = (
		size = 0x00000150(336)
	)
Section emit_1 finished
-------------------------------------------------------------------
processing section emit_0 in stage 6
-------------------------------------------------------------------
Section emit_0 starting

	method update (tuples)


	method update (packet)
		 sport = 0xa9d3(43475)
		 dport = 0x2bcb(11211)
		 len = 0x0461(1121)
		 chksum = 0x0275(629)

	method insert
	inserting 8 bytes at byte 34:
0x0020(32) :       a9 d3 2b cb 04 61 02 75 
	method move_to_section = done(0)

updated tuples:
	control = (
		offset = 0x0150(336)
		virtual_offset = 0x0150(336)
		section = 0x0(0)
		activeBank = 0x0(0)
		done = 0x1(1)
		error = 0x0(0)
	)
	hdr = (
		eth = (
		isValid = 0x1(1)
		dst = 0x000000000000(0)
		src = 0x000000000000(0)
		type = 0x0800(2048)
	)
		fec = (
		isValid = 0x0(0)
		traffic_class = 0x0(0)
		block_index = 0x00(0)
		packet_index = 0x00(0)
		original_type = 0x0000(0)
	)
		ipv4 = (
		isValid = 0x1(1)
		version = 0x4(4)
		ihl = 0x5(5)
		diffserv = 0x00(0)
		totallen = 0x0475(1141)
		identification = 0x76e0(30432)
		flags = 0x2(2)
		fragoffset = 0x0000(0)
		ttl = 0x40(64)
		protocol = 0x11(17)
		hdrchecksum = 0xc195(49557)
		srcAddr = 0x7f000001(2130706433)
		dstAddr = 0x7f000001(2130706433)
	)
		udp = (
		isValid = 0x1(1)
		sport = 0xa9d3(43475)
		dport = 0x2bcb(11211)
		len = 0x0461(1121)
		chksum = 0x0275(629)
	)
	)
	Deparser_extracts = (
		size = 0x00000150(336)
	)
Section emit_0 finished
-------------------------------------------------------------------
final inout and output tuples:

Note: this engine's wrapper will clear the upper control tuple fields on output, except for the 'control.error' field.

	control = (
		offset = 0x0000(0)
		virtual_offset = 0x0000(0)
		section = 0x0(0)
		activeBank = 0x0(0)
		done = 0x0(0)
		error = 0x0(0)
	)
output packet (1155 bytes)
 0x0000(0) : 00 00 00 00 00 00 00 00 00 00 00 00 08 00 45 00 
0x0010(16) : 04 75 76 e0 40 00 40 11 c1 95 7f 00 00 01 7f 00 
0x0020(32) : 00 01 a9 d3 2b cb 04 61 02 75 00 04 00 00 00 01 
0x0030(48) : 01 00 73 65 74 20 12 10 10 10 10 10 10 10 77 34 
0x0040(64) : 74 30 59 59 44 41 53 41 47 44 59 65 68 45 43 48 
0x0050(80) : 49 2d 49 50 36 4d 72 2d 7a 50 62 51 75 56 56 6c 
0x0060(96) : 56 31 49 6a 42 6b 74 52 78 50 33 63 65 47 74 77 
0x0070(112) : 46 39 4b 4c 56 39 20 30 20 30 20 31 30 32 34 0d 
0x0080(128) : 0a 77 34 74 30 59 59 44 41 53 41 47 44 59 65 68 
0x0090(144) : 45 43 48 49 2d 49 50 36 4d 72 2d 7a 50 62 51 75 
0x00a0(160) : 56 56 6c 56 31 49 6a 42 6b 74 52 78 50 33 63 65 
0x00b0(176) : 47 74 77 46 39 4b 4c 56 39 4c 54 59 77 74 51 51 
0x00c0(192) : 4d 39 76 4e 52 63 59 39 54 7a 35 74 31 68 56 48 
0x00d0(208) : 5a 50 57 69 6a 73 43 73 42 66 4f 35 57 6f 56 74 
0x00e0(224) : 79 50 45 4e 2d 6e 58 54 6b 63 4b 6c 48 70 30 71 
0x00f0(240) : 43 58 58 77 4e 6a 6d 59 4d 39 64 73 78 37 6a 74 
0x0100(256) : 57 79 46 56 6a 6d 79 52 4d 47 42 64 33 42 53 47 
0x0110(272) : 69 7a 41 33 67 77 62 30 33 44 73 2d 4b 61 73 71 
0x0120(288) : 57 35 4a 44 72 47 65 42 57 70 70 61 2d 46 71 68 
0x0130(304) : 43 2e 6c 73 75 4b 73 79 58 69 78 72 47 6e 66 6d 
0x0140(320) : 74 7a 7a 69 44 63 75 6a 50 68 48 4f 77 35 34 36 
0x0150(336) : 33 70 79 79 37 6f 75 66 55 70 55 6c 61 38 56 52 
0x0160(352) : 35 54 38 49 33 30 2d 53 68 48 72 62 4d 76 68 51 
0x0170(368) : 69 64 4d 70 50 45 53 74 31 78 63 62 33 36 31 38 
0x0180(384) : 5a 39 51 63 39 50 32 71 67 74 50 31 6d 34 52 53 
0x0190(400) : 68 6e 47 34 2d 69 78 30 64 59 62 67 65 63 6f 42 
0x01a0(416) : 6c 43 6e 75 63 70 69 47 68 35 48 52 39 69 75 71 
0x01b0(432) : 54 38 75 53 71 71 53 53 4d 32 36 2e 65 76 39 4f 
0x01c0(448) : 35 77 47 68 6a 7a 79 4f 32 44 71 43 77 69 30 4e 
0x01d0(464) : 71 76 71 65 6a 47 34 33 49 42 31 78 34 41 4a 39 
0x01e0(480) : 34 5a 72 6e 57 6e 41 5a 2e 2e 6c 75 67 6c 47 55 
0x01f0(496) : 65 34 36 4c 4b 42 4f 64 4d 50 59 51 5a 72 5a 64 
0x0200(512) : 4f 4f 50 76 39 5a 53 38 58 42 30 42 77 47 66 5a 
0x0210(528) : 4b 6c 75 66 77 48 47 47 67 6f 67 45 64 45 72 2d 
0x0220(544) : 63 45 75 6d 6e 4b 75 49 56 75 54 51 39 36 7a 54 
0x0230(560) : 73 72 36 6d 36 4d 31 6e 38 68 2d 6c 76 71 6c 57 
0x0240(576) : 33 64 47 71 79 38 37 52 30 61 72 39 68 6f 64 58 
0x0250(592) : 65 6a 48 6b 34 49 56 43 2e 55 79 74 4a 68 4e 4d 
0x0260(608) : 49 64 41 45 6c 48 67 6d 73 56 76 58 49 57 32 77 
0x0270(624) : 45 4a 65 49 63 38 55 61 63 51 52 76 35 70 46 4f 
0x0280(640) : 51 51 63 41 68 47 77 58 6d 70 32 32 4b 34 79 59 
0x0290(656) : 4f 61 71 2e 69 49 59 4a 6a 7a 43 6f 6d 53 41 42 
0x02a0(672) : 73 6e 4c 58 31 46 33 6e 32 35 70 4d 41 6c 75 59 
0x02b0(688) : 4b 69 57 30 2d 32 4a 69 2d 57 55 6d 79 66 78 6f 
0x02c0(704) : 51 47 4a 52 56 4d 44 58 53 30 75 63 6d 6d 38 34 
0x02d0(720) : 54 65 34 53 67 4f 38 66 75 63 50 71 46 4b 63 66 
0x02e0(736) : 61 76 35 33 47 49 62 69 49 54 49 32 44 51 36 67 
0x02f0(752) : 32 42 36 69 5a 45 4c 52 72 6c 46 34 33 72 6b 65 
0x0300(768) : 6b 70 68 2e 35 47 67 4e 6a 79 51 78 4d 57 62 4f 
0x0310(784) : 68 69 34 45 77 51 66 6c 39 75 71 43 6a 59 71 53 
0x0320(800) : 4c 57 51 51 6d 35 6e 55 31 42 50 4f 69 2e 6d 4e 
0x0330(816) : 67 72 63 62 46 46 4b 4f 38 38 61 72 67 50 48 2d 
0x0340(832) : 76 69 50 66 6e 42 37 6f 4d 57 41 32 56 78 51 39 
0x0350(848) : 6d 30 6b 2d 46 33 4e 4e 42 78 44 73 4b 55 72 44 
0x0360(864) : 41 46 74 78 51 2e 6b 6d 56 75 70 2e 70 44 37 5a 
0x0370(880) : 44 73 59 53 76 76 71 34 72 31 77 39 56 6d 4e 67 
0x0380(896) : 2d 45 62 50 43 4a 39 68 43 79 66 2d 39 6e 5a 4d 
0x0390(912) : 64 35 70 57 2d 64 61 71 65 56 7a 37 46 4b 6e 45 
0x03a0(928) : 59 4e 64 6c 67 6d 51 73 6a 34 73 73 72 50 44 53 
0x03b0(944) : 55 30 79 54 64 57 48 46 2d 46 4d 45 5a 38 53 36 
0x03c0(960) : 56 33 72 39 71 46 30 58 4a 73 4e 38 46 61 61 6a 
0x03d0(976) : 61 57 42 42 31 53 51 30 68 6e 46 46 76 68 4c 4f 
0x03e0(992) : 6c 41 58 5a 50 58 34 6a 4e 52 72 63 30 51 4b 61 
0x03f0(1008) : 77 56 6d 78 78 41 79 64 78 42 73 71 73 42 43 62 
0x0400(1024) : 4c 6b 38 6b 46 43 52 64 65 48 44 65 68 58 43 62 
0x0410(1040) : 30 79 58 79 37 54 5a 32 65 50 74 55 61 33 34 76 
0x0420(1056) : 6e 43 64 31 50 33 65 31 4b 72 66 2d 4e 72 61 4e 
0x0430(1072) : 6f 35 4a 76 59 73 78 41 46 6f 66 70 73 6a 69 64 
0x0440(1088) : 76 4b 65 49 4e 47 4a 68 36 79 67 54 6f 45 71 61 
0x0450(1104) : 4b 38 54 73 2e 4f 31 45 42 67 31 31 4e 6b 65 47 
0x0460(1120) : 32 48 5a 50 58 73 34 64 70 6b 34 62 79 76 39 47 
0x0470(1136) : 31 63 37 2d 2e 38 44 39 6f 46 41 39 7a 70 50 2d 
0x0480(1152) : 34 0d 0a 
Exiting engine Deparser
===================================================================
final inout and output tuples:
	ioports = (
		ingress_port = 0x0(0)
		egress_port = 0x0(0)
	)
output packet (1155 bytes)
 0x0000(0) : 00 00 00 00 00 00 00 00 00 00 00 00 08 00 45 00 
0x0010(16) : 04 75 76 e0 40 00 40 11 c1 95 7f 00 00 01 7f 00 
0x0020(32) : 00 01 a9 d3 2b cb 04 61 02 75 00 04 00 00 00 01 
0x0030(48) : 01 00 73 65 74 20 12 10 10 10 10 10 10 10 77 34 
0x0040(64) : 74 30 59 59 44 41 53 41 47 44 59 65 68 45 43 48 
0x0050(80) : 49 2d 49 50 36 4d 72 2d 7a 50 62 51 75 56 56 6c 
0x0060(96) : 56 31 49 6a 42 6b 74 52 78 50 33 63 65 47 74 77 
0x0070(112) : 46 39 4b 4c 56 39 20 30 20 30 20 31 30 32 34 0d 
0x0080(128) : 0a 77 34 74 30 59 59 44 41 53 41 47 44 59 65 68 
0x0090(144) : 45 43 48 49 2d 49 50 36 4d 72 2d 7a 50 62 51 75 
0x00a0(160) : 56 56 6c 56 31 49 6a 42 6b 74 52 78 50 33 63 65 
0x00b0(176) : 47 74 77 46 39 4b 4c 56 39 4c 54 59 77 74 51 51 
0x00c0(192) : 4d 39 76 4e 52 63 59 39 54 7a 35 74 31 68 56 48 
0x00d0(208) : 5a 50 57 69 6a 73 43 73 42 66 4f 35 57 6f 56 74 
0x00e0(224) : 79 50 45 4e 2d 6e 58 54 6b 63 4b 6c 48 70 30 71 
0x00f0(240) : 43 58 58 77 4e 6a 6d 59 4d 39 64 73 78 37 6a 74 
0x0100(256) : 57 79 46 56 6a 6d 79 52 4d 47 42 64 33 42 53 47 
0x0110(272) : 69 7a 41 33 67 77 62 30 33 44 73 2d 4b 61 73 71 
0x0120(288) : 57 35 4a 44 72 47 65 42 57 70 70 61 2d 46 71 68 
0x0130(304) : 43 2e 6c 73 75 4b 73 79 58 69 78 72 47 6e 66 6d 
0x0140(320) : 74 7a 7a 69 44 63 75 6a 50 68 48 4f 77 35 34 36 
0x0150(336) : 33 70 79 79 37 6f 75 66 55 70 55 6c 61 38 56 52 
0x0160(352) : 35 54 38 49 33 30 2d 53 68 48 72 62 4d 76 68 51 
0x0170(368) : 69 64 4d 70 50 45 53 74 31 78 63 62 33 36 31 38 
0x0180(384) : 5a 39 51 63 39 50 32 71 67 74 50 31 6d 34 52 53 
0x0190(400) : 68 6e 47 34 2d 69 78 30 64 59 62 67 65 63 6f 42 
0x01a0(416) : 6c 43 6e 75 63 70 69 47 68 35 48 52 39 69 75 71 
0x01b0(432) : 54 38 75 53 71 71 53 53 4d 32 36 2e 65 76 39 4f 
0x01c0(448) : 35 77 47 68 6a 7a 79 4f 32 44 71 43 77 69 30 4e 
0x01d0(464) : 71 76 71 65 6a 47 34 33 49 42 31 78 34 41 4a 39 
0x01e0(480) : 34 5a 72 6e 57 6e 41 5a 2e 2e 6c 75 67 6c 47 55 
0x01f0(496) : 65 34 36 4c 4b 42 4f 64 4d 50 59 51 5a 72 5a 64 
0x0200(512) : 4f 4f 50 76 39 5a 53 38 58 42 30 42 77 47 66 5a 
0x0210(528) : 4b 6c 75 66 77 48 47 47 67 6f 67 45 64 45 72 2d 
0x0220(544) : 63 45 75 6d 6e 4b 75 49 56 75 54 51 39 36 7a 54 
0x0230(560) : 73 72 36 6d 36 4d 31 6e 38 68 2d 6c 76 71 6c 57 
0x0240(576) : 33 64 47 71 79 38 37 52 30 61 72 39 68 6f 64 58 
0x0250(592) : 65 6a 48 6b 34 49 56 43 2e 55 79 74 4a 68 4e 4d 
0x0260(608) : 49 64 41 45 6c 48 67 6d 73 56 76 58 49 57 32 77 
0x0270(624) : 45 4a 65 49 63 38 55 61 63 51 52 76 35 70 46 4f 
0x0280(640) : 51 51 63 41 68 47 77 58 6d 70 32 32 4b 34 79 59 
0x0290(656) : 4f 61 71 2e 69 49 59 4a 6a 7a 43 6f 6d 53 41 42 
0x02a0(672) : 73 6e 4c 58 31 46 33 6e 32 35 70 4d 41 6c 75 59 
0x02b0(688) : 4b 69 57 30 2d 32 4a 69 2d 57 55 6d 79 66 78 6f 
0x02c0(704) : 51 47 4a 52 56 4d 44 58 53 30 75 63 6d 6d 38 34 
0x02d0(720) : 54 65 34 53 67 4f 38 66 75 63 50 71 46 4b 63 66 
0x02e0(736) : 61 76 35 33 47 49 62 69 49 54 49 32 44 51 36 67 
0x02f0(752) : 32 42 36 69 5a 45 4c 52 72 6c 46 34 33 72 6b 65 
0x0300(768) : 6b 70 68 2e 35 47 67 4e 6a 79 51 78 4d 57 62 4f 
0x0310(784) : 68 69 34 45 77 51 66 6c 39 75 71 43 6a 59 71 53 
0x0320(800) : 4c 57 51 51 6d 35 6e 55 31 42 50 4f 69 2e 6d 4e 
0x0330(816) : 67 72 63 62 46 46 4b 4f 38 38 61 72 67 50 48 2d 
0x0340(832) : 76 69 50 66 6e 42 37 6f 4d 57 41 32 56 78 51 39 
0x0350(848) : 6d 30 6b 2d 46 33 4e 4e 42 78 44 73 4b 55 72 44 
0x0360(864) : 41 46 74 78 51 2e 6b 6d 56 75 70 2e 70 44 37 5a 
0x0370(880) : 44 73 59 53 76 76 71 34 72 31 77 39 56 6d 4e 67 
0x0380(896) : 2d 45 62 50 43 4a 39 68 43 79 66 2d 39 6e 5a 4d 
0x0390(912) : 64 35 70 57 2d 64 61 71 65 56 7a 37 46 4b 6e 45 
0x03a0(928) : 59 4e 64 6c 67 6d 51 73 6a 34 73 73 72 50 44 53 
0x03b0(944) : 55 30 79 54 64 57 48 46 2d 46 4d 45 5a 38 53 36 
0x03c0(960) : 56 33 72 39 71 46 30 58 4a 73 4e 38 46 61 61 6a 
0x03d0(976) : 61 57 42 42 31 53 51 30 68 6e 46 46 76 68 4c 4f 
0x03e0(992) : 6c 41 58 5a 50 58 34 6a 4e 52 72 63 30 51 4b 61 
0x03f0(1008) : 77 56 6d 78 78 41 79 64 78 42 73 71 73 42 43 62 
0x0400(1024) : 4c 6b 38 6b 46 43 52 64 65 48 44 65 68 58 43 62 
0x0410(1040) : 30 79 58 79 37 54 5a 32 65 50 74 55 61 33 34 76 
0x0420(1056) : 6e 43 64 31 50 33 65 31 4b 72 66 2d 4e 72 61 4e 
0x0430(1072) : 6f 35 4a 76 59 73 78 41 46 6f 66 70 73 6a 69 64 
0x0440(1088) : 76 4b 65 49 4e 47 4a 68 36 79 67 54 6f 45 71 61 
0x0450(1104) : 4b 38 54 73 2e 4f 31 45 42 67 31 31 4e 6b 65 47 
0x0460(1120) : 32 48 5a 50 58 73 34 64 70 6b 34 62 79 76 39 47 
0x0470(1136) : 31 63 37 2d 2e 38 44 39 6f 46 41 39 7a 70 50 2d 
0x0480(1152) : 34 0d 0a 
Exiting system XilinxSwitch
===================================================================
Evaluating packet #6(120 bytes)
 0x0000(0) : 00 00 00 00 00 00 00 00 00 00 00 00 08 00 45 00 
0x0010(16) : 00 6a 76 e2 40 00 40 11 c5 9e 7f 00 00 01 7f 00 
0x0020(32) : 00 01 a9 d3 2b cb 00 56 fe 69 00 05 00 00 00 01 
0x0030(48) : 01 00 67 65 74 20 11 10 10 10 10 10 10 10 49 4f 
0x0040(64) : 6a 53 2e 45 6d 4b 45 34 6d 4d 36 7a 6c 30 65 61 
0x0050(80) : 64 63 72 67 65 6e 34 68 77 6a 49 30 73 61 50 5a 
0x0060(96) : 30 4e 6f 6d 68 30 72 52 4e 78 50 36 79 31 67 5a 
0x0070(112) : 64 56 45 46 48 49 0d 0a 
===================================================================
Entering system XilinxSwitch
input packet (120 bytes)
 0x0000(0) : 00 00 00 00 00 00 00 00 00 00 00 00 08 00 45 00 
0x0010(16) : 00 6a 76 e2 40 00 40 11 c5 9e 7f 00 00 01 7f 00 
0x0020(32) : 00 01 a9 d3 2b cb 00 56 fe 69 00 05 00 00 00 01 
0x0030(48) : 01 00 67 65 74 20 11 10 10 10 10 10 10 10 49 4f 
0x0040(64) : 6a 53 2e 45 6d 4b 45 34 6d 4d 36 7a 6c 30 65 61 
0x0050(80) : 64 63 72 67 65 6e 34 68 77 6a 49 30 73 61 50 5a 
0x0060(96) : 30 4e 6f 6d 68 30 72 52 4e 78 50 36 79 31 67 5a 
0x0070(112) : 64 56 45 46 48 49 0d 0a 
initial input and inout tuples:
	ioports = (
		ingress_port = 0x0(0)
		egress_port = 0x0(0)
	)
clear internal and output-only tuples
===================================================================
Entering engine Parser
input packet (120 bytes)
 0x0000(0) : 00 00 00 00 00 00 00 00 00 00 00 00 08 00 45 00 
0x0010(16) : 00 6a 76 e2 40 00 40 11 c5 9e 7f 00 00 01 7f 00 
0x0020(32) : 00 01 a9 d3 2b cb 00 56 fe 69 00 05 00 00 00 01 
0x0030(48) : 01 00 67 65 74 20 11 10 10 10 10 10 10 10 49 4f 
0x0040(64) : 6a 53 2e 45 6d 4b 45 34 6d 4d 36 7a 6c 30 65 61 
0x0050(80) : 64 63 72 67 65 6e 34 68 77 6a 49 30 73 61 50 5a 
0x0060(96) : 30 4e 6f 6d 68 30 72 52 4e 78 50 36 79 31 67 5a 
0x0070(112) : 64 56 45 46 48 49 0d 0a 
initial input and inout tuples:
	control = (
		offset = 0x0000(0)
		virtual_offset = 0x0000(0)
		section = 0x0(0)
		activeBank = 0x0(0)
		done = 0x0(0)
		error = 0x0(0)
	)
clear internal and output-only tuples
	hdr = (
		eth = (
		isValid = 0x0(0)
		dst = 0x000000000000(0)
		src = 0x000000000000(0)
		type = 0x0000(0)
	)
		fec = (
		isValid = 0x0(0)
		traffic_class = 0x0(0)
		block_index = 0x00(0)
		packet_index = 0x00(0)
		original_type = 0x0000(0)
	)
		ipv4 = (
		isValid = 0x0(0)
		version = 0x0(0)
		ihl = 0x0(0)
		diffserv = 0x00(0)
		totallen = 0x0000(0)
		identification = 0x0000(0)
		flags = 0x0(0)
		fragoffset = 0x0000(0)
		ttl = 0x00(0)
		protocol = 0x00(0)
		hdrchecksum = 0x0000(0)
		srcAddr = 0x00000000(0)
		dstAddr = 0x00000000(0)
	)
		udp = (
		isValid = 0x0(0)
		sport = 0x0000(0)
		dport = 0x0000(0)
		len = 0x0000(0)
		chksum = 0x0000(0)
	)
	)
	Parser_extracts = (
		size = 0x00000000(0)
	)
processing section start in stage 1
-------------------------------------------------------------------
Section start starting

	extracting 112 bits at offset 0x0000(0)
		dst_0 = 0x000000000000(0)
		src_0 = 0x000000000000(0)
		type_0 = 0x0800(2048)

	method update (tuples)
		hdr.eth.isValid = 0x1(1)
		hdr.eth.dst = 0x000000000000(0)
		hdr.eth.src = 0x000000000000(0)
		hdr.eth.type = 0x0800(2048)
		Parser_extracts.size = 0x00000070(112)


	method move_to_section = parse_ipv4

updated tuples:
	control = (
		offset = 0x0070(112)
		virtual_offset = 0x0070(112)
		section = 0x2(2)
		activeBank = 0x0(0)
		done = 0x0(0)
		error = 0x0(0)
	)
	hdr = (
		eth = (
		isValid = 0x1(1)
		dst = 0x000000000000(0)
		src = 0x000000000000(0)
		type = 0x0800(2048)
	)
		fec = (
		isValid = 0x0(0)
		traffic_class = 0x0(0)
		block_index = 0x00(0)
		packet_index = 0x00(0)
		original_type = 0x0000(0)
	)
		ipv4 = (
		isValid = 0x0(0)
		version = 0x0(0)
		ihl = 0x0(0)
		diffserv = 0x00(0)
		totallen = 0x0000(0)
		identification = 0x0000(0)
		flags = 0x0(0)
		fragoffset = 0x0000(0)
		ttl = 0x00(0)
		protocol = 0x00(0)
		hdrchecksum = 0x0000(0)
		srcAddr = 0x00000000(0)
		dstAddr = 0x00000000(0)
	)
		udp = (
		isValid = 0x0(0)
		sport = 0x0000(0)
		dport = 0x0000(0)
		len = 0x0000(0)
		chksum = 0x0000(0)
	)
	)
	Parser_extracts = (
		size = 0x00000070(112)
	)
Section start finished
-------------------------------------------------------------------
processing section parse_ipv4 in stage 2
-------------------------------------------------------------------
Section parse_ipv4 starting

	extracting 160 bits at offset 0x0070(112)
		version_0 = 0x4(4)
		ihl_0 = 0x5(5)
		diffserv_0 = 0x00(0)
		totallen_0 = 0x006a(106)
		identification_0 = 0x76e2(30434)
		flags_0 = 0x2(2)
		fragoffset_0 = 0x0000(0)
		ttl_0 = 0x40(64)
		protocol_0 = 0x11(17)
		hdrchecksum_0 = 0xc59e(50590)
		srcAddr_0 = 0x7f000001(2130706433)
		dstAddr_0 = 0x7f000001(2130706433)

	method update (tuples)
		hdr.ipv4.isValid = 0x1(1)
		hdr.ipv4.version = 0x4(4)
		hdr.ipv4.ihl = 0x5(5)
		hdr.ipv4.diffserv = 0x00(0)
		hdr.ipv4.totallen = 0x006a(106)
		hdr.ipv4.identification = 0x76e2(30434)
		hdr.ipv4.flags = 0x2(2)
		hdr.ipv4.fragoffset = 0x0000(0)
		hdr.ipv4.ttl = 0x40(64)
		hdr.ipv4.protocol = 0x11(17)
		hdr.ipv4.hdrchecksum = 0xc59e(50590)
		hdr.ipv4.srcAddr = 0x7f000001(2130706433)
		hdr.ipv4.dstAddr = 0x7f000001(2130706433)
		Parser_extracts.size = 0x00000110(272)


	method move_to_section = parse_udp

updated tuples:
	control = (
		offset = 0x0110(272)
		virtual_offset = 0x0110(272)
		section = 0x3(3)
		activeBank = 0x0(0)
		done = 0x0(0)
		error = 0x0(0)
	)
	hdr = (
		eth = (
		isValid = 0x1(1)
		dst = 0x000000000000(0)
		src = 0x000000000000(0)
		type = 0x0800(2048)
	)
		fec = (
		isValid = 0x0(0)
		traffic_class = 0x0(0)
		block_index = 0x00(0)
		packet_index = 0x00(0)
		original_type = 0x0000(0)
	)
		ipv4 = (
		isValid = 0x1(1)
		version = 0x4(4)
		ihl = 0x5(5)
		diffserv = 0x00(0)
		totallen = 0x006a(106)
		identification = 0x76e2(30434)
		flags = 0x2(2)
		fragoffset = 0x0000(0)
		ttl = 0x40(64)
		protocol = 0x11(17)
		hdrchecksum = 0xc59e(50590)
		srcAddr = 0x7f000001(2130706433)
		dstAddr = 0x7f000001(2130706433)
	)
		udp = (
		isValid = 0x0(0)
		sport = 0x0000(0)
		dport = 0x0000(0)
		len = 0x0000(0)
		chksum = 0x0000(0)
	)
	)
	Parser_extracts = (
		size = 0x00000110(272)
	)
Section parse_ipv4 finished
-------------------------------------------------------------------
processing section parse_udp in stage 3
-------------------------------------------------------------------
Section parse_udp starting

	extracting 64 bits at offset 0x0110(272)
		sport_0 = 0xa9d3(43475)
		dport_0 = 0x2bcb(11211)
		len_0 = 0x0056(86)
		chksum_0 = 0xfe69(65129)

	method update (tuples)
		hdr.udp.isValid = 0x1(1)
		hdr.udp.sport = 0xa9d3(43475)
		hdr.udp.dport = 0x2bcb(11211)
		hdr.udp.len = 0x0056(86)
		hdr.udp.chksum = 0xfe69(65129)
		Parser_extracts.size = 0x00000150(336)


	method move_to_section = accept

updated tuples:
	control = (
		offset = 0x0150(336)
		virtual_offset = 0x0150(336)
		section = 0x4(4)
		activeBank = 0x0(0)
		done = 0x0(0)
		error = 0x0(0)
	)
	hdr = (
		eth = (
		isValid = 0x1(1)
		dst = 0x000000000000(0)
		src = 0x000000000000(0)
		type = 0x0800(2048)
	)
		fec = (
		isValid = 0x0(0)
		traffic_class = 0x0(0)
		block_index = 0x00(0)
		packet_index = 0x00(0)
		original_type = 0x0000(0)
	)
		ipv4 = (
		isValid = 0x1(1)
		version = 0x4(4)
		ihl = 0x5(5)
		diffserv = 0x00(0)
		totallen = 0x006a(106)
		identification = 0x76e2(30434)
		flags = 0x2(2)
		fragoffset = 0x0000(0)
		ttl = 0x40(64)
		protocol = 0x11(17)
		hdrchecksum = 0xc59e(50590)
		srcAddr = 0x7f000001(2130706433)
		dstAddr = 0x7f000001(2130706433)
	)
		udp = (
		isValid = 0x1(1)
		sport = 0xa9d3(43475)
		dport = 0x2bcb(11211)
		len = 0x0056(86)
		chksum = 0xfe69(65129)
	)
	)
	Parser_extracts = (
		size = 0x00000150(336)
	)
Section parse_udp finished
-------------------------------------------------------------------
processing section accept in stage 4
-------------------------------------------------------------------
Section accept starting


	method move_to_section = done(0)

updated tuples:
	control = (
		offset = 0x0150(336)
		virtual_offset = 0x0150(336)
		section = 0x0(0)
		activeBank = 0x0(0)
		done = 0x1(1)
		error = 0x0(0)
	)
	hdr = (
		eth = (
		isValid = 0x1(1)
		dst = 0x000000000000(0)
		src = 0x000000000000(0)
		type = 0x0800(2048)
	)
		fec = (
		isValid = 0x0(0)
		traffic_class = 0x0(0)
		block_index = 0x00(0)
		packet_index = 0x00(0)
		original_type = 0x0000(0)
	)
		ipv4 = (
		isValid = 0x1(1)
		version = 0x4(4)
		ihl = 0x5(5)
		diffserv = 0x00(0)
		totallen = 0x006a(106)
		identification = 0x76e2(30434)
		flags = 0x2(2)
		fragoffset = 0x0000(0)
		ttl = 0x40(64)
		protocol = 0x11(17)
		hdrchecksum = 0xc59e(50590)
		srcAddr = 0x7f000001(2130706433)
		dstAddr = 0x7f000001(2130706433)
	)
		udp = (
		isValid = 0x1(1)
		sport = 0xa9d3(43475)
		dport = 0x2bcb(11211)
		len = 0x0056(86)
		chksum = 0xfe69(65129)
	)
	)
	Parser_extracts = (
		size = 0x00000150(336)
	)
Section accept finished
-------------------------------------------------------------------
final inout and output tuples:

Note: this engine's wrapper will clear the upper control tuple fields on output, except for the 'control.error' field.

	control = (
		offset = 0x0000(0)
		virtual_offset = 0x0000(0)
		section = 0x0(0)
		activeBank = 0x0(0)
		done = 0x0(0)
		error = 0x0(0)
	)
	hdr = (
		eth = (
		isValid = 0x1(1)
		dst = 0x000000000000(0)
		src = 0x000000000000(0)
		type = 0x0800(2048)
	)
		fec = (
		isValid = 0x0(0)
		traffic_class = 0x0(0)
		block_index = 0x00(0)
		packet_index = 0x00(0)
		original_type = 0x0000(0)
	)
		ipv4 = (
		isValid = 0x1(1)
		version = 0x4(4)
		ihl = 0x5(5)
		diffserv = 0x00(0)
		totallen = 0x006a(106)
		identification = 0x76e2(30434)
		flags = 0x2(2)
		fragoffset = 0x0000(0)
		ttl = 0x40(64)
		protocol = 0x11(17)
		hdrchecksum = 0xc59e(50590)
		srcAddr = 0x7f000001(2130706433)
		dstAddr = 0x7f000001(2130706433)
	)
		udp = (
		isValid = 0x1(1)
		sport = 0xa9d3(43475)
		dport = 0x2bcb(11211)
		len = 0x0056(86)
		chksum = 0xfe69(65129)
	)
	)
	Parser_extracts = (
		size = 0x00000150(336)
	)
Exiting engine Parser
===================================================================
===================================================================
Entering engine CheckCache_lvl
input packet (0 bytes)
initial input and inout tuples:
	hdr = (
		eth = (
		isValid = 0x1(1)
		dst = 0x000000000000(0)
		src = 0x000000000000(0)
		type = 0x0800(2048)
	)
		fec = (
		isValid = 0x0(0)
		traffic_class = 0x0(0)
		block_index = 0x00(0)
		packet_index = 0x00(0)
		original_type = 0x0000(0)
	)
		ipv4 = (
		isValid = 0x1(1)
		version = 0x4(4)
		ihl = 0x5(5)
		diffserv = 0x00(0)
		totallen = 0x006a(106)
		identification = 0x76e2(30434)
		flags = 0x2(2)
		fragoffset = 0x0000(0)
		ttl = 0x40(64)
		protocol = 0x11(17)
		hdrchecksum = 0xc59e(50590)
		srcAddr = 0x7f000001(2130706433)
		dstAddr = 0x7f000001(2130706433)
	)
		udp = (
		isValid = 0x1(1)
		sport = 0xa9d3(43475)
		dport = 0x2bcb(11211)
		len = 0x0056(86)
		chksum = 0xfe69(65129)
	)
	)
	ioports = (
		ingress_port = 0x0(0)
		egress_port = 0x0(0)
	)
clear internal and output-only tuples
	control = (
		offset = 0x0000(0)
		virtual_offset = 0x0000(0)
		section = 0x0(0)
		activeBank = 0x0(0)
		done = 0x0(0)
		error = 0x0(0)
	)
	CheckCache_fl = (
		forward_1 = 0x0(0)
	)
	local_state = (
		id = 0x0000(0)
	)
processing section setup in stage 1
-------------------------------------------------------------------
Section setup starting


	method move_to_section = done(0)

updated tuples:
	control = (
		offset = 0x0000(0)
		virtual_offset = 0x0000(0)
		section = 0x0(0)
		activeBank = 0x0(0)
		done = 0x1(1)
		error = 0x0(0)
	)
	CheckCache_fl = (
		forward_1 = 0x0(0)
	)
	hdr = (
		eth = (
		isValid = 0x1(1)
		dst = 0x000000000000(0)
		src = 0x000000000000(0)
		type = 0x0800(2048)
	)
		fec = (
		isValid = 0x0(0)
		traffic_class = 0x0(0)
		block_index = 0x00(0)
		packet_index = 0x00(0)
		original_type = 0x0000(0)
	)
		ipv4 = (
		isValid = 0x1(1)
		version = 0x4(4)
		ihl = 0x5(5)
		diffserv = 0x00(0)
		totallen = 0x006a(106)
		identification = 0x76e2(30434)
		flags = 0x2(2)
		fragoffset = 0x0000(0)
		ttl = 0x40(64)
		protocol = 0x11(17)
		hdrchecksum = 0xc59e(50590)
		srcAddr = 0x7f000001(2130706433)
		dstAddr = 0x7f000001(2130706433)
	)
		udp = (
		isValid = 0x1(1)
		sport = 0xa9d3(43475)
		dport = 0x2bcb(11211)
		len = 0x0056(86)
		chksum = 0xfe69(65129)
	)
	)
	ioports = (
		ingress_port = 0x0(0)
		egress_port = 0x0(0)
	)
	local_state = (
		id = 0x0000(0)
	)
Section setup finished
-------------------------------------------------------------------
final inout and output tuples:

Note: this engine's wrapper will clear the upper control tuple fields on output, except for the 'control.error' field.

	CheckCache_fl = (
		forward_1 = 0x0(0)
	)
	hdr = (
		eth = (
		isValid = 0x1(1)
		dst = 0x000000000000(0)
		src = 0x000000000000(0)
		type = 0x0800(2048)
	)
		fec = (
		isValid = 0x0(0)
		traffic_class = 0x0(0)
		block_index = 0x00(0)
		packet_index = 0x00(0)
		original_type = 0x0000(0)
	)
		ipv4 = (
		isValid = 0x1(1)
		version = 0x4(4)
		ihl = 0x5(5)
		diffserv = 0x00(0)
		totallen = 0x006a(106)
		identification = 0x76e2(30434)
		flags = 0x2(2)
		fragoffset = 0x0000(0)
		ttl = 0x40(64)
		protocol = 0x11(17)
		hdrchecksum = 0xc59e(50590)
		srcAddr = 0x7f000001(2130706433)
		dstAddr = 0x7f000001(2130706433)
	)
		udp = (
		isValid = 0x1(1)
		sport = 0xa9d3(43475)
		dport = 0x2bcb(11211)
		len = 0x0056(86)
		chksum = 0xfe69(65129)
	)
	)
	ioports = (
		ingress_port = 0x0(0)
		egress_port = 0x0(0)
	)
	local_state = (
		id = 0x0000(0)
	)
Exiting engine CheckCache_lvl
===================================================================
===================================================================
Entering engine CheckCache_lvl_0
input packet (0 bytes)
initial input and inout tuples:
	CheckCache_fl = (
		forward_1 = 0x0(0)
	)
	hdr = (
		eth = (
		isValid = 0x1(1)
		dst = 0x000000000000(0)
		src = 0x000000000000(0)
		type = 0x0800(2048)
	)
		fec = (
		isValid = 0x0(0)
		traffic_class = 0x0(0)
		block_index = 0x00(0)
		packet_index = 0x00(0)
		original_type = 0x0000(0)
	)
		ipv4 = (
		isValid = 0x1(1)
		version = 0x4(4)
		ihl = 0x5(5)
		diffserv = 0x00(0)
		totallen = 0x006a(106)
		identification = 0x76e2(30434)
		flags = 0x2(2)
		fragoffset = 0x0000(0)
		ttl = 0x40(64)
		protocol = 0x11(17)
		hdrchecksum = 0xc59e(50590)
		srcAddr = 0x7f000001(2130706433)
		dstAddr = 0x7f000001(2130706433)
	)
		udp = (
		isValid = 0x1(1)
		sport = 0xa9d3(43475)
		dport = 0x2bcb(11211)
		len = 0x0056(86)
		chksum = 0xfe69(65129)
	)
	)
	ioports = (
		ingress_port = 0x0(0)
		egress_port = 0x0(0)
	)
	local_state = (
		id = 0x0000(0)
	)
clear internal and output-only tuples
	control = (
		offset = 0x0000(0)
		virtual_offset = 0x0000(0)
		section = 0x0(0)
		activeBank = 0x0(0)
		done = 0x0(0)
		error = 0x0(0)
	)
	memcached_input = (
		stateful_valid = 0x0(0)
	)
processing section condition_sec_0 in stage 1
-------------------------------------------------------------------
Section condition_sec_0 starting

	method update (tuples)
		local_state.id = 0x0005(5)


	method move_to_section = condition_sec

updated tuples:
	control = (
		offset = 0x0000(0)
		virtual_offset = 0x0000(0)
		section = 0x2(2)
		activeBank = 0x0(0)
		done = 0x0(0)
		error = 0x0(0)
	)
	CheckCache_fl = (
		forward_1 = 0x0(0)
	)
	hdr = (
		eth = (
		isValid = 0x1(1)
		dst = 0x000000000000(0)
		src = 0x000000000000(0)
		type = 0x0800(2048)
	)
		fec = (
		isValid = 0x0(0)
		traffic_class = 0x0(0)
		block_index = 0x00(0)
		packet_index = 0x00(0)
		original_type = 0x0000(0)
	)
		ipv4 = (
		isValid = 0x1(1)
		version = 0x4(4)
		ihl = 0x5(5)
		diffserv = 0x00(0)
		totallen = 0x006a(106)
		identification = 0x76e2(30434)
		flags = 0x2(2)
		fragoffset = 0x0000(0)
		ttl = 0x40(64)
		protocol = 0x11(17)
		hdrchecksum = 0xc59e(50590)
		srcAddr = 0x7f000001(2130706433)
		dstAddr = 0x7f000001(2130706433)
	)
		udp = (
		isValid = 0x1(1)
		sport = 0xa9d3(43475)
		dport = 0x2bcb(11211)
		len = 0x0056(86)
		chksum = 0xfe69(65129)
	)
	)
	ioports = (
		ingress_port = 0x0(0)
		egress_port = 0x0(0)
	)
	local_state = (
		id = 0x0005(5)
	)
	memcached_input = (
		stateful_valid = 0x0(0)
	)
Section condition_sec_0 finished
-------------------------------------------------------------------
processing section condition_sec in stage 2
-------------------------------------------------------------------
Section condition_sec starting

	method update (tuples)
		local_state.id = 0x0005(5)


	method move_to_section = act_0_sec

updated tuples:
	control = (
		offset = 0x0000(0)
		virtual_offset = 0x0000(0)
		section = 0x1(1)
		activeBank = 0x0(0)
		done = 0x0(0)
		error = 0x0(0)
	)
	CheckCache_fl = (
		forward_1 = 0x0(0)
	)
	hdr = (
		eth = (
		isValid = 0x1(1)
		dst = 0x000000000000(0)
		src = 0x000000000000(0)
		type = 0x0800(2048)
	)
		fec = (
		isValid = 0x0(0)
		traffic_class = 0x0(0)
		block_index = 0x00(0)
		packet_index = 0x00(0)
		original_type = 0x0000(0)
	)
		ipv4 = (
		isValid = 0x1(1)
		version = 0x4(4)
		ihl = 0x5(5)
		diffserv = 0x00(0)
		totallen = 0x006a(106)
		identification = 0x76e2(30434)
		flags = 0x2(2)
		fragoffset = 0x0000(0)
		ttl = 0x40(64)
		protocol = 0x11(17)
		hdrchecksum = 0xc59e(50590)
		srcAddr = 0x7f000001(2130706433)
		dstAddr = 0x7f000001(2130706433)
	)
		udp = (
		isValid = 0x1(1)
		sport = 0xa9d3(43475)
		dport = 0x2bcb(11211)
		len = 0x0056(86)
		chksum = 0xfe69(65129)
	)
	)
	ioports = (
		ingress_port = 0x0(0)
		egress_port = 0x0(0)
	)
	local_state = (
		id = 0x0005(5)
	)
	memcached_input = (
		stateful_valid = 0x0(0)
	)
Section condition_sec finished
-------------------------------------------------------------------
processing section act_0_sec in stage 3
-------------------------------------------------------------------
Section act_0_sec starting

	method update (tuples)
		memcached_input.stateful_valid = 0x1(1)
		local_state.id = 0x0004(4)


	method move_to_section = local_end

updated tuples:
	control = (
		offset = 0x0000(0)
		virtual_offset = 0x0000(0)
		section = 0x4(4)
		activeBank = 0x0(0)
		done = 0x0(0)
		error = 0x0(0)
	)
	CheckCache_fl = (
		forward_1 = 0x0(0)
	)
	hdr = (
		eth = (
		isValid = 0x1(1)
		dst = 0x000000000000(0)
		src = 0x000000000000(0)
		type = 0x0800(2048)
	)
		fec = (
		isValid = 0x0(0)
		traffic_class = 0x0(0)
		block_index = 0x00(0)
		packet_index = 0x00(0)
		original_type = 0x0000(0)
	)
		ipv4 = (
		isValid = 0x1(1)
		version = 0x4(4)
		ihl = 0x5(5)
		diffserv = 0x00(0)
		totallen = 0x006a(106)
		identification = 0x76e2(30434)
		flags = 0x2(2)
		fragoffset = 0x0000(0)
		ttl = 0x40(64)
		protocol = 0x11(17)
		hdrchecksum = 0xc59e(50590)
		srcAddr = 0x7f000001(2130706433)
		dstAddr = 0x7f000001(2130706433)
	)
		udp = (
		isValid = 0x1(1)
		sport = 0xa9d3(43475)
		dport = 0x2bcb(11211)
		len = 0x0056(86)
		chksum = 0xfe69(65129)
	)
	)
	ioports = (
		ingress_port = 0x0(0)
		egress_port = 0x0(0)
	)
	local_state = (
		id = 0x0004(4)
	)
	memcached_input = (
		stateful_valid = 0x1(1)
	)
Section act_0_sec finished
-------------------------------------------------------------------
processing section local_end in stage 4
-------------------------------------------------------------------
Section local_end starting


	method move_to_section = done(0)

updated tuples:
	control = (
		offset = 0x0000(0)
		virtual_offset = 0x0000(0)
		section = 0x0(0)
		activeBank = 0x0(0)
		done = 0x1(1)
		error = 0x0(0)
	)
	CheckCache_fl = (
		forward_1 = 0x0(0)
	)
	hdr = (
		eth = (
		isValid = 0x1(1)
		dst = 0x000000000000(0)
		src = 0x000000000000(0)
		type = 0x0800(2048)
	)
		fec = (
		isValid = 0x0(0)
		traffic_class = 0x0(0)
		block_index = 0x00(0)
		packet_index = 0x00(0)
		original_type = 0x0000(0)
	)
		ipv4 = (
		isValid = 0x1(1)
		version = 0x4(4)
		ihl = 0x5(5)
		diffserv = 0x00(0)
		totallen = 0x006a(106)
		identification = 0x76e2(30434)
		flags = 0x2(2)
		fragoffset = 0x0000(0)
		ttl = 0x40(64)
		protocol = 0x11(17)
		hdrchecksum = 0xc59e(50590)
		srcAddr = 0x7f000001(2130706433)
		dstAddr = 0x7f000001(2130706433)
	)
		udp = (
		isValid = 0x1(1)
		sport = 0xa9d3(43475)
		dport = 0x2bcb(11211)
		len = 0x0056(86)
		chksum = 0xfe69(65129)
	)
	)
	ioports = (
		ingress_port = 0x0(0)
		egress_port = 0x0(0)
	)
	local_state = (
		id = 0x0004(4)
	)
	memcached_input = (
		stateful_valid = 0x1(1)
	)
Section local_end finished
-------------------------------------------------------------------
final inout and output tuples:

Note: this engine's wrapper will clear the upper control tuple fields on output, except for the 'control.error' field.

	CheckCache_fl = (
		forward_1 = 0x0(0)
	)
	hdr = (
		eth = (
		isValid = 0x1(1)
		dst = 0x000000000000(0)
		src = 0x000000000000(0)
		type = 0x0800(2048)
	)
		fec = (
		isValid = 0x0(0)
		traffic_class = 0x0(0)
		block_index = 0x00(0)
		packet_index = 0x00(0)
		original_type = 0x0000(0)
	)
		ipv4 = (
		isValid = 0x1(1)
		version = 0x4(4)
		ihl = 0x5(5)
		diffserv = 0x00(0)
		totallen = 0x006a(106)
		identification = 0x76e2(30434)
		flags = 0x2(2)
		fragoffset = 0x0000(0)
		ttl = 0x40(64)
		protocol = 0x11(17)
		hdrchecksum = 0xc59e(50590)
		srcAddr = 0x7f000001(2130706433)
		dstAddr = 0x7f000001(2130706433)
	)
		udp = (
		isValid = 0x1(1)
		sport = 0xa9d3(43475)
		dport = 0x2bcb(11211)
		len = 0x0056(86)
		chksum = 0xfe69(65129)
	)
	)
	ioports = (
		ingress_port = 0x0(0)
		egress_port = 0x0(0)
	)
	local_state = (
		id = 0x0004(4)
	)
	memcached_input = (
		stateful_valid = 0x1(1)
	)
Exiting engine CheckCache_lvl_0
===================================================================
===================================================================
Entering engine memcached_0
input packet (120 bytes)
 0x0000(0) : 00 00 00 00 00 00 00 00 00 00 00 00 08 00 45 00 
0x0010(16) : 00 6a 76 e2 40 00 40 11 c5 9e 7f 00 00 01 7f 00 
0x0020(32) : 00 01 a9 d3 2b cb 00 56 fe 69 00 05 00 00 00 01 
0x0030(48) : 01 00 67 65 74 20 11 10 10 10 10 10 10 10 49 4f 
0x0040(64) : 6a 53 2e 45 6d 4b 45 34 6d 4d 36 7a 6c 30 65 61 
0x0050(80) : 64 63 72 67 65 6e 34 68 77 6a 49 30 73 61 50 5a 
0x0060(96) : 30 4e 6f 6d 68 30 72 52 4e 78 50 36 79 31 67 5a 
0x0070(112) : 64 56 45 46 48 49 0d 0a 
initial input and inout tuples:
	control = (
		offset = 0x0000(0)
		virtual_offset = 0x0000(0)
		section = 0x0(0)
		activeBank = 0x0(0)
		done = 0x0(0)
		error = 0x0(0)
	)
	CheckCache_fl = (
		forward_1 = 0x0(0)
	)
	hdr = (
		eth = (
		isValid = 0x1(1)
		dst = 0x000000000000(0)
		src = 0x000000000000(0)
		type = 0x0800(2048)
	)
		fec = (
		isValid = 0x0(0)
		traffic_class = 0x0(0)
		block_index = 0x00(0)
		packet_index = 0x00(0)
		original_type = 0x0000(0)
	)
		ipv4 = (
		isValid = 0x1(1)
		version = 0x4(4)
		ihl = 0x5(5)
		diffserv = 0x00(0)
		totallen = 0x006a(106)
		identification = 0x76e2(30434)
		flags = 0x2(2)
		fragoffset = 0x0000(0)
		ttl = 0x40(64)
		protocol = 0x11(17)
		hdrchecksum = 0xc59e(50590)
		srcAddr = 0x7f000001(2130706433)
		dstAddr = 0x7f000001(2130706433)
	)
		udp = (
		isValid = 0x1(1)
		sport = 0xa9d3(43475)
		dport = 0x2bcb(11211)
		len = 0x0056(86)
		chksum = 0xfe69(65129)
	)
	)
	ioports = (
		ingress_port = 0x0(0)
		egress_port = 0x0(0)
	)
	local_state = (
		id = 0x0004(4)
	)
	Parser_extracts = (
		size = 0x00000150(336)
	)
	memcached_input = (
		stateful_valid = 0x1(1)
	)
clear internal and output-only tuples
	memcached_output = (
		forward = 0x0(0)
	)
Enter USER ENGINE FUNCTION
0
134235392
29967061639774225
14239958709768912640
468199414628438
18332183779663151105
72171279475544336
1157442765409241423
7661518266808616244
7876011222769886561
7233751214896067688
8604770510487769178
3480842077694095954
5654357527055394650
7230042419952684298
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<Inside MemCore<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<< 
The No. 5Packet
1
576
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<Inside MemCore<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<< 
===================================================================
Entering engine CheckCache_lvl_1
input packet (0 bytes)
initial input and inout tuples:
	CheckCache_fl = (
		forward_1 = 0x0(0)
	)
	hdr = (
		eth = (
		isValid = 0x1(1)
		dst = 0x000000000000(0)
		src = 0x000000000000(0)
		type = 0x0800(2048)
	)
		fec = (
		isValid = 0x0(0)
		traffic_class = 0x0(0)
		block_index = 0x00(0)
		packet_index = 0x00(0)
		original_type = 0x0000(0)
	)
		ipv4 = (
		isValid = 0x1(1)
		version = 0x4(4)
		ihl = 0x5(5)
		diffserv = 0x00(0)
		totallen = 0x047a(1146)
		identification = 0x76e2(30434)
		flags = 0x2(2)
		fragoffset = 0x0000(0)
		ttl = 0x40(64)
		protocol = 0x11(17)
		hdrchecksum = 0xc59e(50590)
		srcAddr = 0x7f000001(2130706433)
		dstAddr = 0x7f000001(2130706433)
	)
		udp = (
		isValid = 0x1(1)
		sport = 0x2bcb(11211)
		dport = 0xa9d3(43475)
		len = 0x0466(1126)
		chksum = 0xfe69(65129)
	)
	)
	ioports = (
		ingress_port = 0x0(0)
		egress_port = 0x0(0)
	)
	local_state = (
		id = 0x0004(4)
	)
	memcached_output = (
		forward = 0x0(0)
	)
clear internal and output-only tuples
	control = (
		offset = 0x0000(0)
		virtual_offset = 0x0000(0)
		section = 0x0(0)
		activeBank = 0x0(0)
		done = 0x0(0)
		error = 0x0(0)
	)
processing section local_start in stage 1
-------------------------------------------------------------------
Section local_start starting


	method move_to_section = memcached_sec

updated tuples:
	control = (
		offset = 0x0000(0)
		virtual_offset = 0x0000(0)
		section = 0x2(2)
		activeBank = 0x0(0)
		done = 0x0(0)
		error = 0x0(0)
	)
	CheckCache_fl = (
		forward_1 = 0x0(0)
	)
	hdr = (
		eth = (
		isValid = 0x1(1)
		dst = 0x000000000000(0)
		src = 0x000000000000(0)
		type = 0x0800(2048)
	)
		fec = (
		isValid = 0x0(0)
		traffic_class = 0x0(0)
		block_index = 0x00(0)
		packet_index = 0x00(0)
		original_type = 0x0000(0)
	)
		ipv4 = (
		isValid = 0x1(1)
		version = 0x4(4)
		ihl = 0x5(5)
		diffserv = 0x00(0)
		totallen = 0x047a(1146)
		identification = 0x76e2(30434)
		flags = 0x2(2)
		fragoffset = 0x0000(0)
		ttl = 0x40(64)
		protocol = 0x11(17)
		hdrchecksum = 0xc59e(50590)
		srcAddr = 0x7f000001(2130706433)
		dstAddr = 0x7f000001(2130706433)
	)
		udp = (
		isValid = 0x1(1)
		sport = 0x2bcb(11211)
		dport = 0xa9d3(43475)
		len = 0x0466(1126)
		chksum = 0xfe69(65129)
	)
	)
	ioports = (
		ingress_port = 0x0(0)
		egress_port = 0x0(0)
	)
	local_state = (
		id = 0x0004(4)
	)
	memcached_output = (
		forward = 0x0(0)
	)
Section local_start finished
-------------------------------------------------------------------
processing section memcached_sec in stage 2
-------------------------------------------------------------------
Section memcached_sec starting

	method update (tuples)
		CheckCache_fl.forward_1 = 0x0(0)


	method move_to_section = sink

updated tuples:
	control = (
		offset = 0x0000(0)
		virtual_offset = 0x0000(0)
		section = 0x3(3)
		activeBank = 0x0(0)
		done = 0x0(0)
		error = 0x0(0)
	)
	CheckCache_fl = (
		forward_1 = 0x0(0)
	)
	hdr = (
		eth = (
		isValid = 0x1(1)
		dst = 0x000000000000(0)
		src = 0x000000000000(0)
		type = 0x0800(2048)
	)
		fec = (
		isValid = 0x0(0)
		traffic_class = 0x0(0)
		block_index = 0x00(0)
		packet_index = 0x00(0)
		original_type = 0x0000(0)
	)
		ipv4 = (
		isValid = 0x1(1)
		version = 0x4(4)
		ihl = 0x5(5)
		diffserv = 0x00(0)
		totallen = 0x047a(1146)
		identification = 0x76e2(30434)
		flags = 0x2(2)
		fragoffset = 0x0000(0)
		ttl = 0x40(64)
		protocol = 0x11(17)
		hdrchecksum = 0xc59e(50590)
		srcAddr = 0x7f000001(2130706433)
		dstAddr = 0x7f000001(2130706433)
	)
		udp = (
		isValid = 0x1(1)
		sport = 0x2bcb(11211)
		dport = 0xa9d3(43475)
		len = 0x0466(1126)
		chksum = 0xfe69(65129)
	)
	)
	ioports = (
		ingress_port = 0x0(0)
		egress_port = 0x0(0)
	)
	local_state = (
		id = 0x0004(4)
	)
	memcached_output = (
		forward = 0x0(0)
	)
Section memcached_sec finished
-------------------------------------------------------------------
processing section sink in stage 3
-------------------------------------------------------------------
Section sink starting


	method move_to_section = done(0)

updated tuples:
	control = (
		offset = 0x0000(0)
		virtual_offset = 0x0000(0)
		section = 0x0(0)
		activeBank = 0x0(0)
		done = 0x1(1)
		error = 0x0(0)
	)
	CheckCache_fl = (
		forward_1 = 0x0(0)
	)
	hdr = (
		eth = (
		isValid = 0x1(1)
		dst = 0x000000000000(0)
		src = 0x000000000000(0)
		type = 0x0800(2048)
	)
		fec = (
		isValid = 0x0(0)
		traffic_class = 0x0(0)
		block_index = 0x00(0)
		packet_index = 0x00(0)
		original_type = 0x0000(0)
	)
		ipv4 = (
		isValid = 0x1(1)
		version = 0x4(4)
		ihl = 0x5(5)
		diffserv = 0x00(0)
		totallen = 0x047a(1146)
		identification = 0x76e2(30434)
		flags = 0x2(2)
		fragoffset = 0x0000(0)
		ttl = 0x40(64)
		protocol = 0x11(17)
		hdrchecksum = 0xc59e(50590)
		srcAddr = 0x7f000001(2130706433)
		dstAddr = 0x7f000001(2130706433)
	)
		udp = (
		isValid = 0x1(1)
		sport = 0x2bcb(11211)
		dport = 0xa9d3(43475)
		len = 0x0466(1126)
		chksum = 0xfe69(65129)
	)
	)
	ioports = (
		ingress_port = 0x0(0)
		egress_port = 0x0(0)
	)
	local_state = (
		id = 0x0004(4)
	)
	memcached_output = (
		forward = 0x0(0)
	)
Section sink finished
-------------------------------------------------------------------
final inout and output tuples:

Note: this engine's wrapper will clear the upper control tuple fields on output, except for the 'control.error' field.

	hdr = (
		eth = (
		isValid = 0x1(1)
		dst = 0x000000000000(0)
		src = 0x000000000000(0)
		type = 0x0800(2048)
	)
		fec = (
		isValid = 0x0(0)
		traffic_class = 0x0(0)
		block_index = 0x00(0)
		packet_index = 0x00(0)
		original_type = 0x0000(0)
	)
		ipv4 = (
		isValid = 0x1(1)
		version = 0x4(4)
		ihl = 0x5(5)
		diffserv = 0x00(0)
		totallen = 0x047a(1146)
		identification = 0x76e2(30434)
		flags = 0x2(2)
		fragoffset = 0x0000(0)
		ttl = 0x40(64)
		protocol = 0x11(17)
		hdrchecksum = 0xc59e(50590)
		srcAddr = 0x7f000001(2130706433)
		dstAddr = 0x7f000001(2130706433)
	)
		udp = (
		isValid = 0x1(1)
		sport = 0x2bcb(11211)
		dport = 0xa9d3(43475)
		len = 0x0466(1126)
		chksum = 0xfe69(65129)
	)
	)
	ioports = (
		ingress_port = 0x0(0)
		egress_port = 0x0(0)
	)
Exiting engine CheckCache_lvl_1
===================================================================
===================================================================
Entering engine Deparser
input packet (1160 bytes)
 0x0000(0) : 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 
0x0010(16) : 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 
0x0020(32) : 00 00 00 00 00 00 00 00 00 00 00 05 00 00 00 01 
0x0030(48) : 00 00 56 41 4c 55 45 20 11 10 10 10 10 10 10 10 
0x0040(64) : 49 4f 6a 53 2e 45 6d 4b 45 34 6d 4d 36 7a 6c 30 
0x0050(80) : 65 61 64 63 72 67 65 6e 34 68 77 6a 49 30 73 61 
0x0060(96) : 50 5a 30 4e 6f 6d 68 30 72 52 4e 78 50 36 79 31 
0x0070(112) : 67 5a 64 56 45 46 48 49 20 30 20 31 30 32 34 0d 
0x0080(128) : 0a 49 4f 6a 53 2e 45 6d 4b 45 34 6d 4d 36 7a 6c 
0x0090(144) : 30 65 61 64 63 72 67 65 6e 34 68 77 6a 49 30 73 
0x00a0(160) : 61 50 5a 30 4e 6f 6d 68 30 72 52 4e 78 50 36 79 
0x00b0(176) : 31 67 5a 64 56 45 46 48 49 78 42 2d 44 42 72 6e 
0x00c0(192) : 61 50 6f 78 42 59 64 42 4e 32 59 4a 52 66 46 53 
0x00d0(208) : 4a 6f 33 70 30 4a 34 49 45 46 49 52 51 37 43 2d 
0x00e0(224) : 57 2e 77 68 58 58 74 75 61 50 42 2d 32 51 53 4d 
0x00f0(240) : 44 56 39 44 6f 44 57 30 53 6f 52 73 76 65 72 51 
0x0100(256) : 63 6d 35 37 48 79 30 72 4d 42 72 4f 63 48 6b 70 
0x0110(272) : 6d 74 30 5a 34 57 5a 57 49 2d 4e 43 64 43 63 44 
0x0120(288) : 79 68 4c 45 65 4c 33 2e 57 75 4d 36 39 35 76 77 
0x0130(304) : 79 77 54 31 51 30 58 6a 2d 75 76 63 35 56 71 31 
0x0140(320) : 41 39 46 6f 55 4a 6d 2e 42 37 35 4c 43 2e 46 38 
0x0150(336) : 75 69 39 4a 69 68 30 69 5a 76 49 65 4f 36 67 59 
0x0160(352) : 46 76 4c 6a 43 35 69 4f 43 6e 6a 4f 6c 79 58 65 
0x0170(368) : 65 67 78 4b 4c 78 30 76 71 4a 58 43 50 42 6b 66 
0x0180(384) : 35 33 4d 48 39 32 66 4c 70 4d 6b 5a 49 46 42 77 
0x0190(400) : 76 36 46 46 31 46 38 72 59 66 31 79 72 6c 62 77 
0x01a0(416) : 70 78 42 79 2e 72 48 6e 42 2d 4b 55 45 56 4f 38 
0x01b0(432) : 62 64 4e 63 74 56 52 50 38 53 4c 7a 43 77 74 2d 
0x01c0(448) : 73 33 78 71 75 43 62 33 43 77 58 51 50 77 59 2d 
0x01d0(464) : 58 76 62 4f 4f 31 6f 58 54 37 55 66 32 4d 65 75 
0x01e0(480) : 50 5a 69 48 6d 48 4b 79 42 73 4d 62 6d 76 61 48 
0x01f0(496) : 6f 39 67 42 41 53 69 65 5a 41 48 62 57 77 54 76 
0x0200(512) : 54 39 41 44 52 56 39 63 4c 57 42 35 50 6c 4d 42 
0x0210(528) : 76 30 4d 33 53 32 68 30 44 7a 62 6a 74 33 64 4b 
0x0220(544) : 43 6e 59 64 47 68 45 62 42 50 67 61 39 31 6d 32 
0x0230(560) : 31 36 35 55 39 6e 55 4d 6b 33 33 62 36 67 76 4a 
0x0240(576) : 53 52 77 69 37 38 49 49 59 79 74 68 7a 64 6a 2d 
0x0250(592) : 6a 6f 54 73 5a 78 43 48 2e 47 73 35 77 6d 4f 4d 
0x0260(608) : 42 49 33 49 52 4c 62 7a 48 53 65 46 33 4c 45 6d 
0x0270(624) : 37 68 64 68 63 70 79 61 33 70 66 2e 5a 31 4b 6b 
0x0280(640) : 4b 4e 31 6c 69 63 69 2e 32 4b 44 35 66 52 72 6d 
0x0290(656) : 36 53 52 69 47 4f 47 4a 42 77 48 6b 78 63 53 46 
0x02a0(672) : 7a 54 2e 67 33 67 65 35 2e 72 41 64 47 30 4f 4d 
0x02b0(688) : 53 70 32 69 42 49 30 4d 43 48 34 38 74 58 4e 72 
0x02c0(704) : 2e 4d 56 32 30 37 37 2d 79 49 63 43 49 2e 59 6b 
0x02d0(720) : 6f 61 52 7a 73 52 4b 33 69 4f 42 61 76 59 50 75 
0x02e0(736) : 75 75 77 76 2d 31 75 78 4a 55 37 62 54 66 4b 46 
0x02f0(752) : 44 6c 43 33 41 57 36 73 76 48 51 6f 71 70 67 69 
0x0300(768) : 68 61 62 67 63 54 62 76 79 69 56 50 4c 70 65 59 
0x0310(784) : 59 71 63 69 4c 69 59 45 2e 7a 30 6f 6d 68 55 53 
0x0320(800) : 46 34 36 72 58 69 6c 54 4f 45 73 6b 31 55 47 5a 
0x0330(816) : 4a 73 46 65 5a 6e 73 58 6b 73 4a 56 58 6e 78 6e 
0x0340(832) : 72 31 63 4e 6a 4c 71 36 5a 68 71 61 39 34 37 53 
0x0350(848) : 78 4d 34 55 38 77 2d 73 6e 49 4c 49 33 47 33 76 
0x0360(864) : 49 67 47 2d 2d 34 35 5a 6c 76 37 76 2e 46 4c 76 
0x0370(880) : 62 51 4e 6a 4b 4d 61 35 65 76 4f 68 41 52 61 53 
0x0380(896) : 35 71 52 35 76 58 65 65 51 6c 58 4f 2e 74 48 61 
0x0390(912) : 48 65 48 62 2e 72 68 63 6c 33 49 76 55 73 4c 61 
0x03a0(928) : 68 6d 66 61 48 48 43 69 30 6b 34 2d 62 4d 5a 73 
0x03b0(944) : 2e 71 52 7a 67 36 5a 50 39 72 49 65 69 64 43 4e 
0x03c0(960) : 4e 72 78 66 36 37 4c 36 72 50 35 51 6c 65 47 6b 
0x03d0(976) : 54 69 68 37 6f 45 57 79 34 6f 61 6d 50 6d 37 6d 
0x03e0(992) : 62 32 50 68 39 6b 6e 2d 38 74 50 74 56 67 62 79 
0x03f0(1008) : 4d 47 33 38 56 5a 34 5a 4c 65 4a 6b 4f 51 56 7a 
0x0400(1024) : 53 75 65 62 64 51 61 6c 48 2e 63 6d 65 43 6a 2e 
0x0410(1040) : 53 6d 36 78 4b 42 55 66 70 6e 4f 43 42 74 39 64 
0x0420(1056) : 6c 6f 44 4d 43 6e 35 54 6c 69 44 4e 75 77 4c 4b 
0x0430(1072) : 68 53 47 2d 64 6b 65 51 57 30 63 68 74 6d 4a 64 
0x0440(1088) : 59 57 7a 6b 48 33 42 31 6c 4f 4f 64 4a 6b 78 2e 
0x0450(1104) : 41 42 7a 6e 77 62 42 51 63 6f 35 54 59 4f 34 34 
0x0460(1120) : 75 32 6f 41 35 7a 42 71 4c 5a 52 65 48 4d 63 52 
0x0470(1136) : 59 5a 43 53 39 4f 73 6c 41 78 43 69 4b 48 6d 43 
0x0480(1152) : 4a 0d 0a 45 4e 44 0d 0a 
initial input and inout tuples:
	control = (
		offset = 0x0000(0)
		virtual_offset = 0x0000(0)
		section = 0x0(0)
		activeBank = 0x0(0)
		done = 0x0(0)
		error = 0x0(0)
	)
	hdr = (
		eth = (
		isValid = 0x1(1)
		dst = 0x000000000000(0)
		src = 0x000000000000(0)
		type = 0x0800(2048)
	)
		fec = (
		isValid = 0x0(0)
		traffic_class = 0x0(0)
		block_index = 0x00(0)
		packet_index = 0x00(0)
		original_type = 0x0000(0)
	)
		ipv4 = (
		isValid = 0x1(1)
		version = 0x4(4)
		ihl = 0x5(5)
		diffserv = 0x00(0)
		totallen = 0x047a(1146)
		identification = 0x76e2(30434)
		flags = 0x2(2)
		fragoffset = 0x0000(0)
		ttl = 0x40(64)
		protocol = 0x11(17)
		hdrchecksum = 0xc59e(50590)
		srcAddr = 0x7f000001(2130706433)
		dstAddr = 0x7f000001(2130706433)
	)
		udp = (
		isValid = 0x1(1)
		sport = 0x2bcb(11211)
		dport = 0xa9d3(43475)
		len = 0x0466(1126)
		chksum = 0xfe69(65129)
	)
	)
	Deparser_extracts = (
		size = 0x00000150(336)
	)
clear internal and output-only tuples
processing section extract_headers_sec in stage 1
-------------------------------------------------------------------
Section extract_headers_sec starting


	method remove
	removing 42 bytes at byte 0:
 0x0000(0) : 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 
0x0010(16) : 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 
0x0020(32) : 00 00 00 00 00 00 00 00 00 00 
	method move_to_section = act_sec

updated tuples:
	control = (
		offset = 0x0000(0)
		virtual_offset = 0x0150(336)
		section = 0x1(1)
		activeBank = 0x0(0)
		done = 0x0(0)
		error = 0x0(0)
	)
	hdr = (
		eth = (
		isValid = 0x1(1)
		dst = 0x000000000000(0)
		src = 0x000000000000(0)
		type = 0x0800(2048)
	)
		fec = (
		isValid = 0x0(0)
		traffic_class = 0x0(0)
		block_index = 0x00(0)
		packet_index = 0x00(0)
		original_type = 0x0000(0)
	)
		ipv4 = (
		isValid = 0x1(1)
		version = 0x4(4)
		ihl = 0x5(5)
		diffserv = 0x00(0)
		totallen = 0x047a(1146)
		identification = 0x76e2(30434)
		flags = 0x2(2)
		fragoffset = 0x0000(0)
		ttl = 0x40(64)
		protocol = 0x11(17)
		hdrchecksum = 0xc59e(50590)
		srcAddr = 0x7f000001(2130706433)
		dstAddr = 0x7f000001(2130706433)
	)
		udp = (
		isValid = 0x1(1)
		sport = 0x2bcb(11211)
		dport = 0xa9d3(43475)
		len = 0x0466(1126)
		chksum = 0xfe69(65129)
	)
	)
	Deparser_extracts = (
		size = 0x00000150(336)
	)
Section extract_headers_sec finished
-------------------------------------------------------------------
processing section act_sec in stage 2
-------------------------------------------------------------------
Section act_sec starting


	method move_to_section = emit_3

updated tuples:
	control = (
		offset = 0x0000(0)
		virtual_offset = 0x0150(336)
		section = 0x5(5)
		activeBank = 0x0(0)
		done = 0x0(0)
		error = 0x0(0)
	)
	hdr = (
		eth = (
		isValid = 0x1(1)
		dst = 0x000000000000(0)
		src = 0x000000000000(0)
		type = 0x0800(2048)
	)
		fec = (
		isValid = 0x0(0)
		traffic_class = 0x0(0)
		block_index = 0x00(0)
		packet_index = 0x00(0)
		original_type = 0x0000(0)
	)
		ipv4 = (
		isValid = 0x1(1)
		version = 0x4(4)
		ihl = 0x5(5)
		diffserv = 0x00(0)
		totallen = 0x047a(1146)
		identification = 0x76e2(30434)
		flags = 0x2(2)
		fragoffset = 0x0000(0)
		ttl = 0x40(64)
		protocol = 0x11(17)
		hdrchecksum = 0xc59e(50590)
		srcAddr = 0x7f000001(2130706433)
		dstAddr = 0x7f000001(2130706433)
	)
		udp = (
		isValid = 0x1(1)
		sport = 0x2bcb(11211)
		dport = 0xa9d3(43475)
		len = 0x0466(1126)
		chksum = 0xfe69(65129)
	)
	)
	Deparser_extracts = (
		size = 0x00000150(336)
	)
Section act_sec finished
-------------------------------------------------------------------
processing section emit_3 in stage 3
-------------------------------------------------------------------
Section emit_3 starting

	method update (tuples)


	method update (packet)
		 dst = 0x000000000000(0)
		 src = 0x000000000000(0)
		 type = 0x0800(2048)

	method insert
	inserting 14 bytes at byte 0:
 0x0000(0) : 00 00 00 00 00 00 00 00 00 00 00 00 08 00 
	method move_to_section = emit_2

updated tuples:
	control = (
		offset = 0x0070(112)
		virtual_offset = 0x0150(336)
		section = 0x4(4)
		activeBank = 0x0(0)
		done = 0x0(0)
		error = 0x0(0)
	)
	hdr = (
		eth = (
		isValid = 0x1(1)
		dst = 0x000000000000(0)
		src = 0x000000000000(0)
		type = 0x0800(2048)
	)
		fec = (
		isValid = 0x0(0)
		traffic_class = 0x0(0)
		block_index = 0x00(0)
		packet_index = 0x00(0)
		original_type = 0x0000(0)
	)
		ipv4 = (
		isValid = 0x1(1)
		version = 0x4(4)
		ihl = 0x5(5)
		diffserv = 0x00(0)
		totallen = 0x047a(1146)
		identification = 0x76e2(30434)
		flags = 0x2(2)
		fragoffset = 0x0000(0)
		ttl = 0x40(64)
		protocol = 0x11(17)
		hdrchecksum = 0xc59e(50590)
		srcAddr = 0x7f000001(2130706433)
		dstAddr = 0x7f000001(2130706433)
	)
		udp = (
		isValid = 0x1(1)
		sport = 0x2bcb(11211)
		dport = 0xa9d3(43475)
		len = 0x0466(1126)
		chksum = 0xfe69(65129)
	)
	)
	Deparser_extracts = (
		size = 0x00000150(336)
	)
Section emit_3 finished
-------------------------------------------------------------------
processing section emit_2 in stage 4
-------------------------------------------------------------------
Section emit_2 starting

	method update (tuples)


	method update (packet)
		 traffic_class = 0x0(0)
		 block_index = 0x00(0)
		 packet_index = 0x00(0)
		 original_type = 0x0000(0)

	method insert
	inserting 0 bytes at byte 14:
 0x0000(0) :                                           
	method move_to_section = emit_1

updated tuples:
	control = (
		offset = 0x0070(112)
		virtual_offset = 0x0150(336)
		section = 0x3(3)
		activeBank = 0x0(0)
		done = 0x0(0)
		error = 0x0(0)
	)
	hdr = (
		eth = (
		isValid = 0x1(1)
		dst = 0x000000000000(0)
		src = 0x000000000000(0)
		type = 0x0800(2048)
	)
		fec = (
		isValid = 0x0(0)
		traffic_class = 0x0(0)
		block_index = 0x00(0)
		packet_index = 0x00(0)
		original_type = 0x0000(0)
	)
		ipv4 = (
		isValid = 0x1(1)
		version = 0x4(4)
		ihl = 0x5(5)
		diffserv = 0x00(0)
		totallen = 0x047a(1146)
		identification = 0x76e2(30434)
		flags = 0x2(2)
		fragoffset = 0x0000(0)
		ttl = 0x40(64)
		protocol = 0x11(17)
		hdrchecksum = 0xc59e(50590)
		srcAddr = 0x7f000001(2130706433)
		dstAddr = 0x7f000001(2130706433)
	)
		udp = (
		isValid = 0x1(1)
		sport = 0x2bcb(11211)
		dport = 0xa9d3(43475)
		len = 0x0466(1126)
		chksum = 0xfe69(65129)
	)
	)
	Deparser_extracts = (
		size = 0x00000150(336)
	)
Section emit_2 finished
-------------------------------------------------------------------
processing section emit_1 in stage 5
-------------------------------------------------------------------
Section emit_1 starting

	method update (tuples)


	method update (packet)
		 version = 0x4(4)
		 ihl = 0x5(5)
		 diffserv = 0x00(0)
		 totallen = 0x047a(1146)
		 identification = 0x76e2(30434)
		 flags = 0x2(2)
		 fragoffset = 0x0000(0)
		 ttl = 0x40(64)
		 protocol = 0x11(17)
		 hdrchecksum = 0xc59e(50590)
		 srcAddr = 0x7f000001(2130706433)
		 dstAddr = 0x7f000001(2130706433)

	method insert
	inserting 20 bytes at byte 14:
 0x0000(0) :                                           45 00 
0x0010(16) : 04 7a 76 e2 40 00 40 11 c5 9e 7f 00 00 01 7f 00 
0x0020(32) : 00 01 
	method move_to_section = emit_0

updated tuples:
	control = (
		offset = 0x0110(272)
		virtual_offset = 0x0150(336)
		section = 0x2(2)
		activeBank = 0x0(0)
		done = 0x0(0)
		error = 0x0(0)
	)
	hdr = (
		eth = (
		isValid = 0x1(1)
		dst = 0x000000000000(0)
		src = 0x000000000000(0)
		type = 0x0800(2048)
	)
		fec = (
		isValid = 0x0(0)
		traffic_class = 0x0(0)
		block_index = 0x00(0)
		packet_index = 0x00(0)
		original_type = 0x0000(0)
	)
		ipv4 = (
		isValid = 0x1(1)
		version = 0x4(4)
		ihl = 0x5(5)
		diffserv = 0x00(0)
		totallen = 0x047a(1146)
		identification = 0x76e2(30434)
		flags = 0x2(2)
		fragoffset = 0x0000(0)
		ttl = 0x40(64)
		protocol = 0x11(17)
		hdrchecksum = 0xc59e(50590)
		srcAddr = 0x7f000001(2130706433)
		dstAddr = 0x7f000001(2130706433)
	)
		udp = (
		isValid = 0x1(1)
		sport = 0x2bcb(11211)
		dport = 0xa9d3(43475)
		len = 0x0466(1126)
		chksum = 0xfe69(65129)
	)
	)
	Deparser_extracts = (
		size = 0x00000150(336)
	)
Section emit_1 finished
-------------------------------------------------------------------
processing section emit_0 in stage 6
-------------------------------------------------------------------
Section emit_0 starting

	method update (tuples)


	method update (packet)
		 sport = 0x2bcb(11211)
		 dport = 0xa9d3(43475)
		 len = 0x0466(1126)
		 chksum = 0xfe69(65129)

	method insert
	inserting 8 bytes at byte 34:
0x0020(32) :       2b cb a9 d3 04 66 fe 69 
	method move_to_section = done(0)

updated tuples:
	control = (
		offset = 0x0150(336)
		virtual_offset = 0x0150(336)
		section = 0x0(0)
		activeBank = 0x0(0)
		done = 0x1(1)
		error = 0x0(0)
	)
	hdr = (
		eth = (
		isValid = 0x1(1)
		dst = 0x000000000000(0)
		src = 0x000000000000(0)
		type = 0x0800(2048)
	)
		fec = (
		isValid = 0x0(0)
		traffic_class = 0x0(0)
		block_index = 0x00(0)
		packet_index = 0x00(0)
		original_type = 0x0000(0)
	)
		ipv4 = (
		isValid = 0x1(1)
		version = 0x4(4)
		ihl = 0x5(5)
		diffserv = 0x00(0)
		totallen = 0x047a(1146)
		identification = 0x76e2(30434)
		flags = 0x2(2)
		fragoffset = 0x0000(0)
		ttl = 0x40(64)
		protocol = 0x11(17)
		hdrchecksum = 0xc59e(50590)
		srcAddr = 0x7f000001(2130706433)
		dstAddr = 0x7f000001(2130706433)
	)
		udp = (
		isValid = 0x1(1)
		sport = 0x2bcb(11211)
		dport = 0xa9d3(43475)
		len = 0x0466(1126)
		chksum = 0xfe69(65129)
	)
	)
	Deparser_extracts = (
		size = 0x00000150(336)
	)
Section emit_0 finished
-------------------------------------------------------------------
final inout and output tuples:

Note: this engine's wrapper will clear the upper control tuple fields on output, except for the 'control.error' field.

	control = (
		offset = 0x0000(0)
		virtual_offset = 0x0000(0)
		section = 0x0(0)
		activeBank = 0x0(0)
		done = 0x0(0)
		error = 0x0(0)
	)
output packet (1160 bytes)
 0x0000(0) : 00 00 00 00 00 00 00 00 00 00 00 00 08 00 45 00 
0x0010(16) : 04 7a 76 e2 40 00 40 11 c5 9e 7f 00 00 01 7f 00 
0x0020(32) : 00 01 2b cb a9 d3 04 66 fe 69 00 05 00 00 00 01 
0x0030(48) : 00 00 56 41 4c 55 45 20 11 10 10 10 10 10 10 10 
0x0040(64) : 49 4f 6a 53 2e 45 6d 4b 45 34 6d 4d 36 7a 6c 30 
0x0050(80) : 65 61 64 63 72 67 65 6e 34 68 77 6a 49 30 73 61 
0x0060(96) : 50 5a 30 4e 6f 6d 68 30 72 52 4e 78 50 36 79 31 
0x0070(112) : 67 5a 64 56 45 46 48 49 20 30 20 31 30 32 34 0d 
0x0080(128) : 0a 49 4f 6a 53 2e 45 6d 4b 45 34 6d 4d 36 7a 6c 
0x0090(144) : 30 65 61 64 63 72 67 65 6e 34 68 77 6a 49 30 73 
0x00a0(160) : 61 50 5a 30 4e 6f 6d 68 30 72 52 4e 78 50 36 79 
0x00b0(176) : 31 67 5a 64 56 45 46 48 49 78 42 2d 44 42 72 6e 
0x00c0(192) : 61 50 6f 78 42 59 64 42 4e 32 59 4a 52 66 46 53 
0x00d0(208) : 4a 6f 33 70 30 4a 34 49 45 46 49 52 51 37 43 2d 
0x00e0(224) : 57 2e 77 68 58 58 74 75 61 50 42 2d 32 51 53 4d 
0x00f0(240) : 44 56 39 44 6f 44 57 30 53 6f 52 73 76 65 72 51 
0x0100(256) : 63 6d 35 37 48 79 30 72 4d 42 72 4f 63 48 6b 70 
0x0110(272) : 6d 74 30 5a 34 57 5a 57 49 2d 4e 43 64 43 63 44 
0x0120(288) : 79 68 4c 45 65 4c 33 2e 57 75 4d 36 39 35 76 77 
0x0130(304) : 79 77 54 31 51 30 58 6a 2d 75 76 63 35 56 71 31 
0x0140(320) : 41 39 46 6f 55 4a 6d 2e 42 37 35 4c 43 2e 46 38 
0x0150(336) : 75 69 39 4a 69 68 30 69 5a 76 49 65 4f 36 67 59 
0x0160(352) : 46 76 4c 6a 43 35 69 4f 43 6e 6a 4f 6c 79 58 65 
0x0170(368) : 65 67 78 4b 4c 78 30 76 71 4a 58 43 50 42 6b 66 
0x0180(384) : 35 33 4d 48 39 32 66 4c 70 4d 6b 5a 49 46 42 77 
0x0190(400) : 76 36 46 46 31 46 38 72 59 66 31 79 72 6c 62 77 
0x01a0(416) : 70 78 42 79 2e 72 48 6e 42 2d 4b 55 45 56 4f 38 
0x01b0(432) : 62 64 4e 63 74 56 52 50 38 53 4c 7a 43 77 74 2d 
0x01c0(448) : 73 33 78 71 75 43 62 33 43 77 58 51 50 77 59 2d 
0x01d0(464) : 58 76 62 4f 4f 31 6f 58 54 37 55 66 32 4d 65 75 
0x01e0(480) : 50 5a 69 48 6d 48 4b 79 42 73 4d 62 6d 76 61 48 
0x01f0(496) : 6f 39 67 42 41 53 69 65 5a 41 48 62 57 77 54 76 
0x0200(512) : 54 39 41 44 52 56 39 63 4c 57 42 35 50 6c 4d 42 
0x0210(528) : 76 30 4d 33 53 32 68 30 44 7a 62 6a 74 33 64 4b 
0x0220(544) : 43 6e 59 64 47 68 45 62 42 50 67 61 39 31 6d 32 
0x0230(560) : 31 36 35 55 39 6e 55 4d 6b 33 33 62 36 67 76 4a 
0x0240(576) : 53 52 77 69 37 38 49 49 59 79 74 68 7a 64 6a 2d 
0x0250(592) : 6a 6f 54 73 5a 78 43 48 2e 47 73 35 77 6d 4f 4d 
0x0260(608) : 42 49 33 49 52 4c 62 7a 48 53 65 46 33 4c 45 6d 
0x0270(624) : 37 68 64 68 63 70 79 61 33 70 66 2e 5a 31 4b 6b 
0x0280(640) : 4b 4e 31 6c 69 63 69 2e 32 4b 44 35 66 52 72 6d 
0x0290(656) : 36 53 52 69 47 4f 47 4a 42 77 48 6b 78 63 53 46 
0x02a0(672) : 7a 54 2e 67 33 67 65 35 2e 72 41 64 47 30 4f 4d 
0x02b0(688) : 53 70 32 69 42 49 30 4d 43 48 34 38 74 58 4e 72 
0x02c0(704) : 2e 4d 56 32 30 37 37 2d 79 49 63 43 49 2e 59 6b 
0x02d0(720) : 6f 61 52 7a 73 52 4b 33 69 4f 42 61 76 59 50 75 
0x02e0(736) : 75 75 77 76 2d 31 75 78 4a 55 37 62 54 66 4b 46 
0x02f0(752) : 44 6c 43 33 41 57 36 73 76 48 51 6f 71 70 67 69 
0x0300(768) : 68 61 62 67 63 54 62 76 79 69 56 50 4c 70 65 59 
0x0310(784) : 59 71 63 69 4c 69 59 45 2e 7a 30 6f 6d 68 55 53 
0x0320(800) : 46 34 36 72 58 69 6c 54 4f 45 73 6b 31 55 47 5a 
0x0330(816) : 4a 73 46 65 5a 6e 73 58 6b 73 4a 56 58 6e 78 6e 
0x0340(832) : 72 31 63 4e 6a 4c 71 36 5a 68 71 61 39 34 37 53 
0x0350(848) : 78 4d 34 55 38 77 2d 73 6e 49 4c 49 33 47 33 76 
0x0360(864) : 49 67 47 2d 2d 34 35 5a 6c 76 37 76 2e 46 4c 76 
0x0370(880) : 62 51 4e 6a 4b 4d 61 35 65 76 4f 68 41 52 61 53 
0x0380(896) : 35 71 52 35 76 58 65 65 51 6c 58 4f 2e 74 48 61 
0x0390(912) : 48 65 48 62 2e 72 68 63 6c 33 49 76 55 73 4c 61 
0x03a0(928) : 68 6d 66 61 48 48 43 69 30 6b 34 2d 62 4d 5a 73 
0x03b0(944) : 2e 71 52 7a 67 36 5a 50 39 72 49 65 69 64 43 4e 
0x03c0(960) : 4e 72 78 66 36 37 4c 36 72 50 35 51 6c 65 47 6b 
0x03d0(976) : 54 69 68 37 6f 45 57 79 34 6f 61 6d 50 6d 37 6d 
0x03e0(992) : 62 32 50 68 39 6b 6e 2d 38 74 50 74 56 67 62 79 
0x03f0(1008) : 4d 47 33 38 56 5a 34 5a 4c 65 4a 6b 4f 51 56 7a 
0x0400(1024) : 53 75 65 62 64 51 61 6c 48 2e 63 6d 65 43 6a 2e 
0x0410(1040) : 53 6d 36 78 4b 42 55 66 70 6e 4f 43 42 74 39 64 
0x0420(1056) : 6c 6f 44 4d 43 6e 35 54 6c 69 44 4e 75 77 4c 4b 
0x0430(1072) : 68 53 47 2d 64 6b 65 51 57 30 63 68 74 6d 4a 64 
0x0440(1088) : 59 57 7a 6b 48 33 42 31 6c 4f 4f 64 4a 6b 78 2e 
0x0450(1104) : 41 42 7a 6e 77 62 42 51 63 6f 35 54 59 4f 34 34 
0x0460(1120) : 75 32 6f 41 35 7a 42 71 4c 5a 52 65 48 4d 63 52 
0x0470(1136) : 59 5a 43 53 39 4f 73 6c 41 78 43 69 4b 48 6d 43 
0x0480(1152) : 4a 0d 0a 45 4e 44 0d 0a 
Exiting engine Deparser
===================================================================
final inout and output tuples:
	ioports = (
		ingress_port = 0x0(0)
		egress_port = 0x0(0)
	)
output packet (1160 bytes)
 0x0000(0) : 00 00 00 00 00 00 00 00 00 00 00 00 08 00 45 00 
0x0010(16) : 04 7a 76 e2 40 00 40 11 c5 9e 7f 00 00 01 7f 00 
0x0020(32) : 00 01 2b cb a9 d3 04 66 fe 69 00 05 00 00 00 01 
0x0030(48) : 00 00 56 41 4c 55 45 20 11 10 10 10 10 10 10 10 
0x0040(64) : 49 4f 6a 53 2e 45 6d 4b 45 34 6d 4d 36 7a 6c 30 
0x0050(80) : 65 61 64 63 72 67 65 6e 34 68 77 6a 49 30 73 61 
0x0060(96) : 50 5a 30 4e 6f 6d 68 30 72 52 4e 78 50 36 79 31 
0x0070(112) : 67 5a 64 56 45 46 48 49 20 30 20 31 30 32 34 0d 
0x0080(128) : 0a 49 4f 6a 53 2e 45 6d 4b 45 34 6d 4d 36 7a 6c 
0x0090(144) : 30 65 61 64 63 72 67 65 6e 34 68 77 6a 49 30 73 
0x00a0(160) : 61 50 5a 30 4e 6f 6d 68 30 72 52 4e 78 50 36 79 
0x00b0(176) : 31 67 5a 64 56 45 46 48 49 78 42 2d 44 42 72 6e 
0x00c0(192) : 61 50 6f 78 42 59 64 42 4e 32 59 4a 52 66 46 53 
0x00d0(208) : 4a 6f 33 70 30 4a 34 49 45 46 49 52 51 37 43 2d 
0x00e0(224) : 57 2e 77 68 58 58 74 75 61 50 42 2d 32 51 53 4d 
0x00f0(240) : 44 56 39 44 6f 44 57 30 53 6f 52 73 76 65 72 51 
0x0100(256) : 63 6d 35 37 48 79 30 72 4d 42 72 4f 63 48 6b 70 
0x0110(272) : 6d 74 30 5a 34 57 5a 57 49 2d 4e 43 64 43 63 44 
0x0120(288) : 79 68 4c 45 65 4c 33 2e 57 75 4d 36 39 35 76 77 
0x0130(304) : 79 77 54 31 51 30 58 6a 2d 75 76 63 35 56 71 31 
0x0140(320) : 41 39 46 6f 55 4a 6d 2e 42 37 35 4c 43 2e 46 38 
0x0150(336) : 75 69 39 4a 69 68 30 69 5a 76 49 65 4f 36 67 59 
0x0160(352) : 46 76 4c 6a 43 35 69 4f 43 6e 6a 4f 6c 79 58 65 
0x0170(368) : 65 67 78 4b 4c 78 30 76 71 4a 58 43 50 42 6b 66 
0x0180(384) : 35 33 4d 48 39 32 66 4c 70 4d 6b 5a 49 46 42 77 
0x0190(400) : 76 36 46 46 31 46 38 72 59 66 31 79 72 6c 62 77 
0x01a0(416) : 70 78 42 79 2e 72 48 6e 42 2d 4b 55 45 56 4f 38 
0x01b0(432) : 62 64 4e 63 74 56 52 50 38 53 4c 7a 43 77 74 2d 
0x01c0(448) : 73 33 78 71 75 43 62 33 43 77 58 51 50 77 59 2d 
0x01d0(464) : 58 76 62 4f 4f 31 6f 58 54 37 55 66 32 4d 65 75 
0x01e0(480) : 50 5a 69 48 6d 48 4b 79 42 73 4d 62 6d 76 61 48 
0x01f0(496) : 6f 39 67 42 41 53 69 65 5a 41 48 62 57 77 54 76 
0x0200(512) : 54 39 41 44 52 56 39 63 4c 57 42 35 50 6c 4d 42 
0x0210(528) : 76 30 4d 33 53 32 68 30 44 7a 62 6a 74 33 64 4b 
0x0220(544) : 43 6e 59 64 47 68 45 62 42 50 67 61 39 31 6d 32 
0x0230(560) : 31 36 35 55 39 6e 55 4d 6b 33 33 62 36 67 76 4a 
0x0240(576) : 53 52 77 69 37 38 49 49 59 79 74 68 7a 64 6a 2d 
0x0250(592) : 6a 6f 54 73 5a 78 43 48 2e 47 73 35 77 6d 4f 4d 
0x0260(608) : 42 49 33 49 52 4c 62 7a 48 53 65 46 33 4c 45 6d 
0x0270(624) : 37 68 64 68 63 70 79 61 33 70 66 2e 5a 31 4b 6b 
0x0280(640) : 4b 4e 31 6c 69 63 69 2e 32 4b 44 35 66 52 72 6d 
0x0290(656) : 36 53 52 69 47 4f 47 4a 42 77 48 6b 78 63 53 46 
0x02a0(672) : 7a 54 2e 67 33 67 65 35 2e 72 41 64 47 30 4f 4d 
0x02b0(688) : 53 70 32 69 42 49 30 4d 43 48 34 38 74 58 4e 72 
0x02c0(704) : 2e 4d 56 32 30 37 37 2d 79 49 63 43 49 2e 59 6b 
0x02d0(720) : 6f 61 52 7a 73 52 4b 33 69 4f 42 61 76 59 50 75 
0x02e0(736) : 75 75 77 76 2d 31 75 78 4a 55 37 62 54 66 4b 46 
0x02f0(752) : 44 6c 43 33 41 57 36 73 76 48 51 6f 71 70 67 69 
0x0300(768) : 68 61 62 67 63 54 62 76 79 69 56 50 4c 70 65 59 
0x0310(784) : 59 71 63 69 4c 69 59 45 2e 7a 30 6f 6d 68 55 53 
0x0320(800) : 46 34 36 72 58 69 6c 54 4f 45 73 6b 31 55 47 5a 
0x0330(816) : 4a 73 46 65 5a 6e 73 58 6b 73 4a 56 58 6e 78 6e 
0x0340(832) : 72 31 63 4e 6a 4c 71 36 5a 68 71 61 39 34 37 53 
0x0350(848) : 78 4d 34 55 38 77 2d 73 6e 49 4c 49 33 47 33 76 
0x0360(864) : 49 67 47 2d 2d 34 35 5a 6c 76 37 76 2e 46 4c 76 
0x0370(880) : 62 51 4e 6a 4b 4d 61 35 65 76 4f 68 41 52 61 53 
0x0380(896) : 35 71 52 35 76 58 65 65 51 6c 58 4f 2e 74 48 61 
0x0390(912) : 48 65 48 62 2e 72 68 63 6c 33 49 76 55 73 4c 61 
0x03a0(928) : 68 6d 66 61 48 48 43 69 30 6b 34 2d 62 4d 5a 73 
0x03b0(944) : 2e 71 52 7a 67 36 5a 50 39 72 49 65 69 64 43 4e 
0x03c0(960) : 4e 72 78 66 36 37 4c 36 72 50 35 51 6c 65 47 6b 
0x03d0(976) : 54 69 68 37 6f 45 57 79 34 6f 61 6d 50 6d 37 6d 
0x03e0(992) : 62 32 50 68 39 6b 6e 2d 38 74 50 74 56 67 62 79 
0x03f0(1008) : 4d 47 33 38 56 5a 34 5a 4c 65 4a 6b 4f 51 56 7a 
0x0400(1024) : 53 75 65 62 64 51 61 6c 48 2e 63 6d 65 43 6a 2e 
0x0410(1040) : 53 6d 36 78 4b 42 55 66 70 6e 4f 43 42 74 39 64 
0x0420(1056) : 6c 6f 44 4d 43 6e 35 54 6c 69 44 4e 75 77 4c 4b 
0x0430(1072) : 68 53 47 2d 64 6b 65 51 57 30 63 68 74 6d 4a 64 
0x0440(1088) : 59 57 7a 6b 48 33 42 31 6c 4f 4f 64 4a 6b 78 2e 
0x0450(1104) : 41 42 7a 6e 77 62 42 51 63 6f 35 54 59 4f 34 34 
0x0460(1120) : 75 32 6f 41 35 7a 42 71 4c 5a 52 65 48 4d 63 52 
0x0470(1136) : 59 5a 43 53 39 4f 73 6c 41 78 43 69 4b 48 6d 43 
0x0480(1152) : 4a 0d 0a 45 4e 44 0d 0a 
Exiting system XilinxSwitch
===================================================================
Evaluating packet #7(1155 bytes)
 0x0000(0) : 00 00 00 00 00 00 00 00 00 00 00 00 08 00 45 00 
0x0010(16) : 04 75 76 e4 40 00 40 11 c1 91 7f 00 00 01 7f 00 
0x0020(32) : 00 01 a9 d3 2b cb 04 61 02 75 00 06 00 00 00 01 
0x0030(48) : 01 00 73 65 74 20 13 10 10 10 10 10 10 10 76 77 
0x0040(64) : 6f 30 50 30 42 34 4b 4e 72 69 6d 37 52 54 56 72 
0x0050(80) : 72 79 6e 7a 48 7a 33 42 6c 37 74 68 79 6e 62 6b 
0x0060(96) : 6e 2d 6b 79 33 33 4a 76 6c 34 30 41 58 56 2d 4d 
0x0070(112) : 52 6d 4a 6a 6a 4d 20 30 20 30 20 31 30 32 34 0d 
0x0080(128) : 0a 76 77 6f 30 50 30 42 34 4b 4e 72 69 6d 37 52 
0x0090(144) : 54 56 72 72 79 6e 7a 48 7a 33 42 6c 37 74 68 79 
0x00a0(160) : 6e 62 6b 6e 2d 6b 79 33 33 4a 76 6c 34 30 41 58 
0x00b0(176) : 56 2d 4d 52 6d 4a 6a 6a 4d 75 53 54 6c 38 50 57 
0x00c0(192) : 6a 37 48 69 72 45 6d 75 58 66 64 62 66 6e 36 38 
0x00d0(208) : 6d 53 5a 57 6c 47 45 35 38 67 59 75 6f 78 4f 57 
0x00e0(224) : 32 67 43 75 75 79 6d 50 62 4f 2d 45 39 35 4d 77 
0x00f0(240) : 59 77 51 48 41 65 4e 4a 4a 76 42 35 72 5a 62 74 
0x0100(256) : 44 6f 6c 35 6b 57 56 4b 75 55 59 31 5a 76 78 35 
0x0110(272) : 70 4d 4e 7a 2e 6b 47 48 64 52 4e 53 2d 79 4b 43 
0x0120(288) : 6b 33 49 54 5a 6e 6e 52 46 4a 54 6f 43 4f 75 2d 
0x0130(304) : 6b 46 7a 6a 7a 44 2e 61 66 4c 31 65 49 4c 71 30 
0x0140(320) : 4f 36 54 79 74 45 4e 36 59 71 76 6b 44 6e 6b 78 
0x0150(336) : 30 68 65 7a 75 64 58 58 79 59 39 45 74 2e 46 47 
0x0160(352) : 34 69 43 79 78 5a 32 54 4f 78 42 62 69 76 57 69 
0x0170(368) : 61 39 66 54 6d 42 2e 69 6a 38 78 62 36 41 72 41 
0x0180(384) : 73 31 36 6e 61 39 45 79 34 51 58 6e 4a 32 54 75 
0x0190(400) : 42 37 4c 78 49 4a 64 2d 52 59 61 58 69 50 69 5a 
0x01a0(416) : 51 6f 4b 2d 78 5a 78 30 7a 54 6e 47 56 45 38 67 
0x01b0(432) : 4c 54 62 64 6e 43 64 43 6c 42 6b 52 62 51 2e 2d 
0x01c0(448) : 43 4a 2e 38 73 77 38 70 4e 76 33 73 37 43 57 54 
0x01d0(464) : 66 35 34 51 48 68 64 30 74 4c 53 53 6c 51 52 78 
0x01e0(480) : 6a 51 33 5a 4b 42 4d 68 34 51 58 43 63 31 66 46 
0x01f0(496) : 36 6a 67 4e 50 48 4f 47 63 71 69 4c 45 37 47 79 
0x0200(512) : 58 4b 56 72 56 73 57 61 47 31 6d 73 32 50 35 38 
0x0210(528) : 36 6c 57 56 30 75 6c 63 69 52 78 77 5a 43 73 34 
0x0220(544) : 57 4d 77 2d 43 51 5a 53 53 4a 49 55 69 4e 64 70 
0x0230(560) : 37 37 49 37 2d 32 6b 68 54 66 62 30 72 53 35 4c 
0x0240(576) : 6f 2d 4c 2e 50 75 51 72 43 69 4b 75 33 78 68 41 
0x0250(592) : 32 2e 49 31 30 30 69 54 66 48 55 56 6a 5a 71 56 
0x0260(608) : 59 39 54 78 32 74 6e 45 5a 35 36 64 30 6f 6e 32 
0x0270(624) : 6d 33 33 6d 33 6c 44 6a 30 68 43 6b 45 30 44 6d 
0x0280(640) : 41 68 69 43 59 54 51 36 59 57 6a 59 49 55 61 32 
0x0290(656) : 59 64 6f 62 4d 30 49 4d 68 55 34 77 56 49 67 66 
0x02a0(672) : 7a 4d 72 56 70 46 62 4c 6c 49 74 32 6e 52 34 4a 
0x02b0(688) : 32 74 75 4f 74 42 6c 59 66 70 53 38 35 37 6e 32 
0x02c0(704) : 54 63 59 48 72 37 63 62 51 55 64 42 76 68 55 79 
0x02d0(720) : 59 4d 4b 50 58 33 79 42 74 4f 4a 79 56 35 2d 7a 
0x02e0(736) : 68 58 45 58 65 71 36 32 49 6a 44 43 4f 68 38 78 
0x02f0(752) : 32 53 4b 5a 57 47 6b 4e 66 32 4a 38 37 49 35 6f 
0x0300(768) : 70 4a 4a 53 38 50 55 51 36 69 63 56 4e 6b 51 50 
0x0310(784) : 42 6b 7a 68 2d 68 32 65 6a 4c 6d 71 65 73 64 52 
0x0320(800) : 39 77 74 48 4b 4d 69 51 32 49 76 50 31 4a 70 43 
0x0330(816) : 32 6d 74 31 52 76 66 39 45 50 7a 73 46 61 49 50 
0x0340(832) : 56 39 67 70 56 4d 44 58 66 37 78 67 51 6b 73 53 
0x0350(848) : 55 6a 54 76 63 36 32 71 57 30 68 6c 61 7a 38 33 
0x0360(864) : 36 70 73 63 39 34 37 6f 42 32 53 62 6d 49 32 45 
0x0370(880) : 2d 56 38 62 63 41 51 36 41 35 72 6c 32 2e 6f 38 
0x0380(896) : 6e 66 6b 77 6a 73 6a 75 75 39 54 66 53 56 74 52 
0x0390(912) : 2d 2d 31 62 41 52 68 4b 57 57 33 59 55 73 67 46 
0x03a0(928) : 56 50 41 43 46 74 34 37 30 58 6d 53 31 65 75 30 
0x03b0(944) : 64 76 62 6e 4b 47 36 71 6d 39 4d 46 2d 30 55 55 
0x03c0(960) : 50 65 67 65 56 6b 6d 57 47 57 79 48 38 71 48 6d 
0x03d0(976) : 6a 73 58 31 36 64 72 73 6e 42 35 6d 43 61 46 62 
0x03e0(992) : 43 76 45 69 65 2e 43 75 55 38 39 64 7a 51 4e 67 
0x03f0(1008) : 47 75 69 4d 57 58 43 48 6a 49 31 76 73 47 55 32 
0x0400(1024) : 41 69 6b 6f 67 77 67 39 33 70 6d 30 44 37 67 54 
0x0410(1040) : 2d 4d 70 56 75 2d 6d 62 48 6f 55 37 32 79 41 43 
0x0420(1056) : 66 75 2e 4a 70 65 53 73 52 43 73 65 4a 57 35 4a 
0x0430(1072) : 74 75 6f 6c 75 5a 4b 39 4c 6f 48 4e 6b 52 61 4e 
0x0440(1088) : 4a 59 68 36 42 37 79 63 4b 6f 46 64 4a 4b 77 41 
0x0450(1104) : 44 6a 76 35 47 44 45 62 2d 56 79 6a 77 57 35 45 
0x0460(1120) : 33 6d 4b 45 74 48 71 42 33 33 70 4d 4f 6a 57 62 
0x0470(1136) : 51 50 67 67 63 75 46 62 4f 43 4a 49 69 4f 57 6c 
0x0480(1152) : 38 0d 0a 
===================================================================
Entering system XilinxSwitch
input packet (1155 bytes)
 0x0000(0) : 00 00 00 00 00 00 00 00 00 00 00 00 08 00 45 00 
0x0010(16) : 04 75 76 e4 40 00 40 11 c1 91 7f 00 00 01 7f 00 
0x0020(32) : 00 01 a9 d3 2b cb 04 61 02 75 00 06 00 00 00 01 
0x0030(48) : 01 00 73 65 74 20 13 10 10 10 10 10 10 10 76 77 
0x0040(64) : 6f 30 50 30 42 34 4b 4e 72 69 6d 37 52 54 56 72 
0x0050(80) : 72 79 6e 7a 48 7a 33 42 6c 37 74 68 79 6e 62 6b 
0x0060(96) : 6e 2d 6b 79 33 33 4a 76 6c 34 30 41 58 56 2d 4d 
0x0070(112) : 52 6d 4a 6a 6a 4d 20 30 20 30 20 31 30 32 34 0d 
0x0080(128) : 0a 76 77 6f 30 50 30 42 34 4b 4e 72 69 6d 37 52 
0x0090(144) : 54 56 72 72 79 6e 7a 48 7a 33 42 6c 37 74 68 79 
0x00a0(160) : 6e 62 6b 6e 2d 6b 79 33 33 4a 76 6c 34 30 41 58 
0x00b0(176) : 56 2d 4d 52 6d 4a 6a 6a 4d 75 53 54 6c 38 50 57 
0x00c0(192) : 6a 37 48 69 72 45 6d 75 58 66 64 62 66 6e 36 38 
0x00d0(208) : 6d 53 5a 57 6c 47 45 35 38 67 59 75 6f 78 4f 57 
0x00e0(224) : 32 67 43 75 75 79 6d 50 62 4f 2d 45 39 35 4d 77 
0x00f0(240) : 59 77 51 48 41 65 4e 4a 4a 76 42 35 72 5a 62 74 
0x0100(256) : 44 6f 6c 35 6b 57 56 4b 75 55 59 31 5a 76 78 35 
0x0110(272) : 70 4d 4e 7a 2e 6b 47 48 64 52 4e 53 2d 79 4b 43 
0x0120(288) : 6b 33 49 54 5a 6e 6e 52 46 4a 54 6f 43 4f 75 2d 
0x0130(304) : 6b 46 7a 6a 7a 44 2e 61 66 4c 31 65 49 4c 71 30 
0x0140(320) : 4f 36 54 79 74 45 4e 36 59 71 76 6b 44 6e 6b 78 
0x0150(336) : 30 68 65 7a 75 64 58 58 79 59 39 45 74 2e 46 47 
0x0160(352) : 34 69 43 79 78 5a 32 54 4f 78 42 62 69 76 57 69 
0x0170(368) : 61 39 66 54 6d 42 2e 69 6a 38 78 62 36 41 72 41 
0x0180(384) : 73 31 36 6e 61 39 45 79 34 51 58 6e 4a 32 54 75 
0x0190(400) : 42 37 4c 78 49 4a 64 2d 52 59 61 58 69 50 69 5a 
0x01a0(416) : 51 6f 4b 2d 78 5a 78 30 7a 54 6e 47 56 45 38 67 
0x01b0(432) : 4c 54 62 64 6e 43 64 43 6c 42 6b 52 62 51 2e 2d 
0x01c0(448) : 43 4a 2e 38 73 77 38 70 4e 76 33 73 37 43 57 54 
0x01d0(464) : 66 35 34 51 48 68 64 30 74 4c 53 53 6c 51 52 78 
0x01e0(480) : 6a 51 33 5a 4b 42 4d 68 34 51 58 43 63 31 66 46 
0x01f0(496) : 36 6a 67 4e 50 48 4f 47 63 71 69 4c 45 37 47 79 
0x0200(512) : 58 4b 56 72 56 73 57 61 47 31 6d 73 32 50 35 38 
0x0210(528) : 36 6c 57 56 30 75 6c 63 69 52 78 77 5a 43 73 34 
0x0220(544) : 57 4d 77 2d 43 51 5a 53 53 4a 49 55 69 4e 64 70 
0x0230(560) : 37 37 49 37 2d 32 6b 68 54 66 62 30 72 53 35 4c 
0x0240(576) : 6f 2d 4c 2e 50 75 51 72 43 69 4b 75 33 78 68 41 
0x0250(592) : 32 2e 49 31 30 30 69 54 66 48 55 56 6a 5a 71 56 
0x0260(608) : 59 39 54 78 32 74 6e 45 5a 35 36 64 30 6f 6e 32 
0x0270(624) : 6d 33 33 6d 33 6c 44 6a 30 68 43 6b 45 30 44 6d 
0x0280(640) : 41 68 69 43 59 54 51 36 59 57 6a 59 49 55 61 32 
0x0290(656) : 59 64 6f 62 4d 30 49 4d 68 55 34 77 56 49 67 66 
0x02a0(672) : 7a 4d 72 56 70 46 62 4c 6c 49 74 32 6e 52 34 4a 
0x02b0(688) : 32 74 75 4f 74 42 6c 59 66 70 53 38 35 37 6e 32 
0x02c0(704) : 54 63 59 48 72 37 63 62 51 55 64 42 76 68 55 79 
0x02d0(720) : 59 4d 4b 50 58 33 79 42 74 4f 4a 79 56 35 2d 7a 
0x02e0(736) : 68 58 45 58 65 71 36 32 49 6a 44 43 4f 68 38 78 
0x02f0(752) : 32 53 4b 5a 57 47 6b 4e 66 32 4a 38 37 49 35 6f 
0x0300(768) : 70 4a 4a 53 38 50 55 51 36 69 63 56 4e 6b 51 50 
0x0310(784) : 42 6b 7a 68 2d 68 32 65 6a 4c 6d 71 65 73 64 52 
0x0320(800) : 39 77 74 48 4b 4d 69 51 32 49 76 50 31 4a 70 43 
0x0330(816) : 32 6d 74 31 52 76 66 39 45 50 7a 73 46 61 49 50 
0x0340(832) : 56 39 67 70 56 4d 44 58 66 37 78 67 51 6b 73 53 
0x0350(848) : 55 6a 54 76 63 36 32 71 57 30 68 6c 61 7a 38 33 
0x0360(864) : 36 70 73 63 39 34 37 6f 42 32 53 62 6d 49 32 45 
0x0370(880) : 2d 56 38 62 63 41 51 36 41 35 72 6c 32 2e 6f 38 
0x0380(896) : 6e 66 6b 77 6a 73 6a 75 75 39 54 66 53 56 74 52 
0x0390(912) : 2d 2d 31 62 41 52 68 4b 57 57 33 59 55 73 67 46 
0x03a0(928) : 56 50 41 43 46 74 34 37 30 58 6d 53 31 65 75 30 
0x03b0(944) : 64 76 62 6e 4b 47 36 71 6d 39 4d 46 2d 30 55 55 
0x03c0(960) : 50 65 67 65 56 6b 6d 57 47 57 79 48 38 71 48 6d 
0x03d0(976) : 6a 73 58 31 36 64 72 73 6e 42 35 6d 43 61 46 62 
0x03e0(992) : 43 76 45 69 65 2e 43 75 55 38 39 64 7a 51 4e 67 
0x03f0(1008) : 47 75 69 4d 57 58 43 48 6a 49 31 76 73 47 55 32 
0x0400(1024) : 41 69 6b 6f 67 77 67 39 33 70 6d 30 44 37 67 54 
0x0410(1040) : 2d 4d 70 56 75 2d 6d 62 48 6f 55 37 32 79 41 43 
0x0420(1056) : 66 75 2e 4a 70 65 53 73 52 43 73 65 4a 57 35 4a 
0x0430(1072) : 74 75 6f 6c 75 5a 4b 39 4c 6f 48 4e 6b 52 61 4e 
0x0440(1088) : 4a 59 68 36 42 37 79 63 4b 6f 46 64 4a 4b 77 41 
0x0450(1104) : 44 6a 76 35 47 44 45 62 2d 56 79 6a 77 57 35 45 
0x0460(1120) : 33 6d 4b 45 74 48 71 42 33 33 70 4d 4f 6a 57 62 
0x0470(1136) : 51 50 67 67 63 75 46 62 4f 43 4a 49 69 4f 57 6c 
0x0480(1152) : 38 0d 0a 
initial input and inout tuples:
	ioports = (
		ingress_port = 0x0(0)
		egress_port = 0x0(0)
	)
clear internal and output-only tuples
===================================================================
Entering engine Parser
input packet (1155 bytes)
 0x0000(0) : 00 00 00 00 00 00 00 00 00 00 00 00 08 00 45 00 
0x0010(16) : 04 75 76 e4 40 00 40 11 c1 91 7f 00 00 01 7f 00 
0x0020(32) : 00 01 a9 d3 2b cb 04 61 02 75 00 06 00 00 00 01 
0x0030(48) : 01 00 73 65 74 20 13 10 10 10 10 10 10 10 76 77 
0x0040(64) : 6f 30 50 30 42 34 4b 4e 72 69 6d 37 52 54 56 72 
0x0050(80) : 72 79 6e 7a 48 7a 33 42 6c 37 74 68 79 6e 62 6b 
0x0060(96) : 6e 2d 6b 79 33 33 4a 76 6c 34 30 41 58 56 2d 4d 
0x0070(112) : 52 6d 4a 6a 6a 4d 20 30 20 30 20 31 30 32 34 0d 
0x0080(128) : 0a 76 77 6f 30 50 30 42 34 4b 4e 72 69 6d 37 52 
0x0090(144) : 54 56 72 72 79 6e 7a 48 7a 33 42 6c 37 74 68 79 
0x00a0(160) : 6e 62 6b 6e 2d 6b 79 33 33 4a 76 6c 34 30 41 58 
0x00b0(176) : 56 2d 4d 52 6d 4a 6a 6a 4d 75 53 54 6c 38 50 57 
0x00c0(192) : 6a 37 48 69 72 45 6d 75 58 66 64 62 66 6e 36 38 
0x00d0(208) : 6d 53 5a 57 6c 47 45 35 38 67 59 75 6f 78 4f 57 
0x00e0(224) : 32 67 43 75 75 79 6d 50 62 4f 2d 45 39 35 4d 77 
0x00f0(240) : 59 77 51 48 41 65 4e 4a 4a 76 42 35 72 5a 62 74 
0x0100(256) : 44 6f 6c 35 6b 57 56 4b 75 55 59 31 5a 76 78 35 
0x0110(272) : 70 4d 4e 7a 2e 6b 47 48 64 52 4e 53 2d 79 4b 43 
0x0120(288) : 6b 33 49 54 5a 6e 6e 52 46 4a 54 6f 43 4f 75 2d 
0x0130(304) : 6b 46 7a 6a 7a 44 2e 61 66 4c 31 65 49 4c 71 30 
0x0140(320) : 4f 36 54 79 74 45 4e 36 59 71 76 6b 44 6e 6b 78 
0x0150(336) : 30 68 65 7a 75 64 58 58 79 59 39 45 74 2e 46 47 
0x0160(352) : 34 69 43 79 78 5a 32 54 4f 78 42 62 69 76 57 69 
0x0170(368) : 61 39 66 54 6d 42 2e 69 6a 38 78 62 36 41 72 41 
0x0180(384) : 73 31 36 6e 61 39 45 79 34 51 58 6e 4a 32 54 75 
0x0190(400) : 42 37 4c 78 49 4a 64 2d 52 59 61 58 69 50 69 5a 
0x01a0(416) : 51 6f 4b 2d 78 5a 78 30 7a 54 6e 47 56 45 38 67 
0x01b0(432) : 4c 54 62 64 6e 43 64 43 6c 42 6b 52 62 51 2e 2d 
0x01c0(448) : 43 4a 2e 38 73 77 38 70 4e 76 33 73 37 43 57 54 
0x01d0(464) : 66 35 34 51 48 68 64 30 74 4c 53 53 6c 51 52 78 
0x01e0(480) : 6a 51 33 5a 4b 42 4d 68 34 51 58 43 63 31 66 46 
0x01f0(496) : 36 6a 67 4e 50 48 4f 47 63 71 69 4c 45 37 47 79 
0x0200(512) : 58 4b 56 72 56 73 57 61 47 31 6d 73 32 50 35 38 
0x0210(528) : 36 6c 57 56 30 75 6c 63 69 52 78 77 5a 43 73 34 
0x0220(544) : 57 4d 77 2d 43 51 5a 53 53 4a 49 55 69 4e 64 70 
0x0230(560) : 37 37 49 37 2d 32 6b 68 54 66 62 30 72 53 35 4c 
0x0240(576) : 6f 2d 4c 2e 50 75 51 72 43 69 4b 75 33 78 68 41 
0x0250(592) : 32 2e 49 31 30 30 69 54 66 48 55 56 6a 5a 71 56 
0x0260(608) : 59 39 54 78 32 74 6e 45 5a 35 36 64 30 6f 6e 32 
0x0270(624) : 6d 33 33 6d 33 6c 44 6a 30 68 43 6b 45 30 44 6d 
0x0280(640) : 41 68 69 43 59 54 51 36 59 57 6a 59 49 55 61 32 
0x0290(656) : 59 64 6f 62 4d 30 49 4d 68 55 34 77 56 49 67 66 
0x02a0(672) : 7a 4d 72 56 70 46 62 4c 6c 49 74 32 6e 52 34 4a 
0x02b0(688) : 32 74 75 4f 74 42 6c 59 66 70 53 38 35 37 6e 32 
0x02c0(704) : 54 63 59 48 72 37 63 62 51 55 64 42 76 68 55 79 
0x02d0(720) : 59 4d 4b 50 58 33 79 42 74 4f 4a 79 56 35 2d 7a 
0x02e0(736) : 68 58 45 58 65 71 36 32 49 6a 44 43 4f 68 38 78 
0x02f0(752) : 32 53 4b 5a 57 47 6b 4e 66 32 4a 38 37 49 35 6f 
0x0300(768) : 70 4a 4a 53 38 50 55 51 36 69 63 56 4e 6b 51 50 
0x0310(784) : 42 6b 7a 68 2d 68 32 65 6a 4c 6d 71 65 73 64 52 
0x0320(800) : 39 77 74 48 4b 4d 69 51 32 49 76 50 31 4a 70 43 
0x0330(816) : 32 6d 74 31 52 76 66 39 45 50 7a 73 46 61 49 50 
0x0340(832) : 56 39 67 70 56 4d 44 58 66 37 78 67 51 6b 73 53 
0x0350(848) : 55 6a 54 76 63 36 32 71 57 30 68 6c 61 7a 38 33 
0x0360(864) : 36 70 73 63 39 34 37 6f 42 32 53 62 6d 49 32 45 
0x0370(880) : 2d 56 38 62 63 41 51 36 41 35 72 6c 32 2e 6f 38 
0x0380(896) : 6e 66 6b 77 6a 73 6a 75 75 39 54 66 53 56 74 52 
0x0390(912) : 2d 2d 31 62 41 52 68 4b 57 57 33 59 55 73 67 46 
0x03a0(928) : 56 50 41 43 46 74 34 37 30 58 6d 53 31 65 75 30 
0x03b0(944) : 64 76 62 6e 4b 47 36 71 6d 39 4d 46 2d 30 55 55 
0x03c0(960) : 50 65 67 65 56 6b 6d 57 47 57 79 48 38 71 48 6d 
0x03d0(976) : 6a 73 58 31 36 64 72 73 6e 42 35 6d 43 61 46 62 
0x03e0(992) : 43 76 45 69 65 2e 43 75 55 38 39 64 7a 51 4e 67 
0x03f0(1008) : 47 75 69 4d 57 58 43 48 6a 49 31 76 73 47 55 32 
0x0400(1024) : 41 69 6b 6f 67 77 67 39 33 70 6d 30 44 37 67 54 
0x0410(1040) : 2d 4d 70 56 75 2d 6d 62 48 6f 55 37 32 79 41 43 
0x0420(1056) : 66 75 2e 4a 70 65 53 73 52 43 73 65 4a 57 35 4a 
0x0430(1072) : 74 75 6f 6c 75 5a 4b 39 4c 6f 48 4e 6b 52 61 4e 
0x0440(1088) : 4a 59 68 36 42 37 79 63 4b 6f 46 64 4a 4b 77 41 
0x0450(1104) : 44 6a 76 35 47 44 45 62 2d 56 79 6a 77 57 35 45 
0x0460(1120) : 33 6d 4b 45 74 48 71 42 33 33 70 4d 4f 6a 57 62 
0x0470(1136) : 51 50 67 67 63 75 46 62 4f 43 4a 49 69 4f 57 6c 
0x0480(1152) : 38 0d 0a 
initial input and inout tuples:
	control = (
		offset = 0x0000(0)
		virtual_offset = 0x0000(0)
		section = 0x0(0)
		activeBank = 0x0(0)
		done = 0x0(0)
		error = 0x0(0)
	)
clear internal and output-only tuples
	hdr = (
		eth = (
		isValid = 0x0(0)
		dst = 0x000000000000(0)
		src = 0x000000000000(0)
		type = 0x0000(0)
	)
		fec = (
		isValid = 0x0(0)
		traffic_class = 0x0(0)
		block_index = 0x00(0)
		packet_index = 0x00(0)
		original_type = 0x0000(0)
	)
		ipv4 = (
		isValid = 0x0(0)
		version = 0x0(0)
		ihl = 0x0(0)
		diffserv = 0x00(0)
		totallen = 0x0000(0)
		identification = 0x0000(0)
		flags = 0x0(0)
		fragoffset = 0x0000(0)
		ttl = 0x00(0)
		protocol = 0x00(0)
		hdrchecksum = 0x0000(0)
		srcAddr = 0x00000000(0)
		dstAddr = 0x00000000(0)
	)
		udp = (
		isValid = 0x0(0)
		sport = 0x0000(0)
		dport = 0x0000(0)
		len = 0x0000(0)
		chksum = 0x0000(0)
	)
	)
	Parser_extracts = (
		size = 0x00000000(0)
	)
processing section start in stage 1
-------------------------------------------------------------------
Section start starting

	extracting 112 bits at offset 0x0000(0)
		dst_0 = 0x000000000000(0)
		src_0 = 0x000000000000(0)
		type_0 = 0x0800(2048)

	method update (tuples)
		hdr.eth.isValid = 0x1(1)
		hdr.eth.dst = 0x000000000000(0)
		hdr.eth.src = 0x000000000000(0)
		hdr.eth.type = 0x0800(2048)
		Parser_extracts.size = 0x00000070(112)


	method move_to_section = parse_ipv4

updated tuples:
	control = (
		offset = 0x0070(112)
		virtual_offset = 0x0070(112)
		section = 0x2(2)
		activeBank = 0x0(0)
		done = 0x0(0)
		error = 0x0(0)
	)
	hdr = (
		eth = (
		isValid = 0x1(1)
		dst = 0x000000000000(0)
		src = 0x000000000000(0)
		type = 0x0800(2048)
	)
		fec = (
		isValid = 0x0(0)
		traffic_class = 0x0(0)
		block_index = 0x00(0)
		packet_index = 0x00(0)
		original_type = 0x0000(0)
	)
		ipv4 = (
		isValid = 0x0(0)
		version = 0x0(0)
		ihl = 0x0(0)
		diffserv = 0x00(0)
		totallen = 0x0000(0)
		identification = 0x0000(0)
		flags = 0x0(0)
		fragoffset = 0x0000(0)
		ttl = 0x00(0)
		protocol = 0x00(0)
		hdrchecksum = 0x0000(0)
		srcAddr = 0x00000000(0)
		dstAddr = 0x00000000(0)
	)
		udp = (
		isValid = 0x0(0)
		sport = 0x0000(0)
		dport = 0x0000(0)
		len = 0x0000(0)
		chksum = 0x0000(0)
	)
	)
	Parser_extracts = (
		size = 0x00000070(112)
	)
Section start finished
-------------------------------------------------------------------
processing section parse_ipv4 in stage 2
-------------------------------------------------------------------
Section parse_ipv4 starting

	extracting 160 bits at offset 0x0070(112)
		version_0 = 0x4(4)
		ihl_0 = 0x5(5)
		diffserv_0 = 0x00(0)
		totallen_0 = 0x0475(1141)
		identification_0 = 0x76e4(30436)
		flags_0 = 0x2(2)
		fragoffset_0 = 0x0000(0)
		ttl_0 = 0x40(64)
		protocol_0 = 0x11(17)
		hdrchecksum_0 = 0xc191(49553)
		srcAddr_0 = 0x7f000001(2130706433)
		dstAddr_0 = 0x7f000001(2130706433)

	method update (tuples)
		hdr.ipv4.isValid = 0x1(1)
		hdr.ipv4.version = 0x4(4)
		hdr.ipv4.ihl = 0x5(5)
		hdr.ipv4.diffserv = 0x00(0)
		hdr.ipv4.totallen = 0x0475(1141)
		hdr.ipv4.identification = 0x76e4(30436)
		hdr.ipv4.flags = 0x2(2)
		hdr.ipv4.fragoffset = 0x0000(0)
		hdr.ipv4.ttl = 0x40(64)
		hdr.ipv4.protocol = 0x11(17)
		hdr.ipv4.hdrchecksum = 0xc191(49553)
		hdr.ipv4.srcAddr = 0x7f000001(2130706433)
		hdr.ipv4.dstAddr = 0x7f000001(2130706433)
		Parser_extracts.size = 0x00000110(272)


	method move_to_section = parse_udp

updated tuples:
	control = (
		offset = 0x0110(272)
		virtual_offset = 0x0110(272)
		section = 0x3(3)
		activeBank = 0x0(0)
		done = 0x0(0)
		error = 0x0(0)
	)
	hdr = (
		eth = (
		isValid = 0x1(1)
		dst = 0x000000000000(0)
		src = 0x000000000000(0)
		type = 0x0800(2048)
	)
		fec = (
		isValid = 0x0(0)
		traffic_class = 0x0(0)
		block_index = 0x00(0)
		packet_index = 0x00(0)
		original_type = 0x0000(0)
	)
		ipv4 = (
		isValid = 0x1(1)
		version = 0x4(4)
		ihl = 0x5(5)
		diffserv = 0x00(0)
		totallen = 0x0475(1141)
		identification = 0x76e4(30436)
		flags = 0x2(2)
		fragoffset = 0x0000(0)
		ttl = 0x40(64)
		protocol = 0x11(17)
		hdrchecksum = 0xc191(49553)
		srcAddr = 0x7f000001(2130706433)
		dstAddr = 0x7f000001(2130706433)
	)
		udp = (
		isValid = 0x0(0)
		sport = 0x0000(0)
		dport = 0x0000(0)
		len = 0x0000(0)
		chksum = 0x0000(0)
	)
	)
	Parser_extracts = (
		size = 0x00000110(272)
	)
Section parse_ipv4 finished
-------------------------------------------------------------------
processing section parse_udp in stage 3
-------------------------------------------------------------------
Section parse_udp starting

	extracting 64 bits at offset 0x0110(272)
		sport_0 = 0xa9d3(43475)
		dport_0 = 0x2bcb(11211)
		len_0 = 0x0461(1121)
		chksum_0 = 0x0275(629)

	method update (tuples)
		hdr.udp.isValid = 0x1(1)
		hdr.udp.sport = 0xa9d3(43475)
		hdr.udp.dport = 0x2bcb(11211)
		hdr.udp.len = 0x0461(1121)
		hdr.udp.chksum = 0x0275(629)
		Parser_extracts.size = 0x00000150(336)


	method move_to_section = accept

updated tuples:
	control = (
		offset = 0x0150(336)
		virtual_offset = 0x0150(336)
		section = 0x4(4)
		activeBank = 0x0(0)
		done = 0x0(0)
		error = 0x0(0)
	)
	hdr = (
		eth = (
		isValid = 0x1(1)
		dst = 0x000000000000(0)
		src = 0x000000000000(0)
		type = 0x0800(2048)
	)
		fec = (
		isValid = 0x0(0)
		traffic_class = 0x0(0)
		block_index = 0x00(0)
		packet_index = 0x00(0)
		original_type = 0x0000(0)
	)
		ipv4 = (
		isValid = 0x1(1)
		version = 0x4(4)
		ihl = 0x5(5)
		diffserv = 0x00(0)
		totallen = 0x0475(1141)
		identification = 0x76e4(30436)
		flags = 0x2(2)
		fragoffset = 0x0000(0)
		ttl = 0x40(64)
		protocol = 0x11(17)
		hdrchecksum = 0xc191(49553)
		srcAddr = 0x7f000001(2130706433)
		dstAddr = 0x7f000001(2130706433)
	)
		udp = (
		isValid = 0x1(1)
		sport = 0xa9d3(43475)
		dport = 0x2bcb(11211)
		len = 0x0461(1121)
		chksum = 0x0275(629)
	)
	)
	Parser_extracts = (
		size = 0x00000150(336)
	)
Section parse_udp finished
-------------------------------------------------------------------
processing section accept in stage 4
-------------------------------------------------------------------
Section accept starting


	method move_to_section = done(0)

updated tuples:
	control = (
		offset = 0x0150(336)
		virtual_offset = 0x0150(336)
		section = 0x0(0)
		activeBank = 0x0(0)
		done = 0x1(1)
		error = 0x0(0)
	)
	hdr = (
		eth = (
		isValid = 0x1(1)
		dst = 0x000000000000(0)
		src = 0x000000000000(0)
		type = 0x0800(2048)
	)
		fec = (
		isValid = 0x0(0)
		traffic_class = 0x0(0)
		block_index = 0x00(0)
		packet_index = 0x00(0)
		original_type = 0x0000(0)
	)
		ipv4 = (
		isValid = 0x1(1)
		version = 0x4(4)
		ihl = 0x5(5)
		diffserv = 0x00(0)
		totallen = 0x0475(1141)
		identification = 0x76e4(30436)
		flags = 0x2(2)
		fragoffset = 0x0000(0)
		ttl = 0x40(64)
		protocol = 0x11(17)
		hdrchecksum = 0xc191(49553)
		srcAddr = 0x7f000001(2130706433)
		dstAddr = 0x7f000001(2130706433)
	)
		udp = (
		isValid = 0x1(1)
		sport = 0xa9d3(43475)
		dport = 0x2bcb(11211)
		len = 0x0461(1121)
		chksum = 0x0275(629)
	)
	)
	Parser_extracts = (
		size = 0x00000150(336)
	)
Section accept finished
-------------------------------------------------------------------
final inout and output tuples:

Note: this engine's wrapper will clear the upper control tuple fields on output, except for the 'control.error' field.

	control = (
		offset = 0x0000(0)
		virtual_offset = 0x0000(0)
		section = 0x0(0)
		activeBank = 0x0(0)
		done = 0x0(0)
		error = 0x0(0)
	)
	hdr = (
		eth = (
		isValid = 0x1(1)
		dst = 0x000000000000(0)
		src = 0x000000000000(0)
		type = 0x0800(2048)
	)
		fec = (
		isValid = 0x0(0)
		traffic_class = 0x0(0)
		block_index = 0x00(0)
		packet_index = 0x00(0)
		original_type = 0x0000(0)
	)
		ipv4 = (
		isValid = 0x1(1)
		version = 0x4(4)
		ihl = 0x5(5)
		diffserv = 0x00(0)
		totallen = 0x0475(1141)
		identification = 0x76e4(30436)
		flags = 0x2(2)
		fragoffset = 0x0000(0)
		ttl = 0x40(64)
		protocol = 0x11(17)
		hdrchecksum = 0xc191(49553)
		srcAddr = 0x7f000001(2130706433)
		dstAddr = 0x7f000001(2130706433)
	)
		udp = (
		isValid = 0x1(1)
		sport = 0xa9d3(43475)
		dport = 0x2bcb(11211)
		len = 0x0461(1121)
		chksum = 0x0275(629)
	)
	)
	Parser_extracts = (
		size = 0x00000150(336)
	)
Exiting engine Parser
===================================================================
===================================================================
Entering engine CheckCache_lvl
input packet (0 bytes)
initial input and inout tuples:
	hdr = (
		eth = (
		isValid = 0x1(1)
		dst = 0x000000000000(0)
		src = 0x000000000000(0)
		type = 0x0800(2048)
	)
		fec = (
		isValid = 0x0(0)
		traffic_class = 0x0(0)
		block_index = 0x00(0)
		packet_index = 0x00(0)
		original_type = 0x0000(0)
	)
		ipv4 = (
		isValid = 0x1(1)
		version = 0x4(4)
		ihl = 0x5(5)
		diffserv = 0x00(0)
		totallen = 0x0475(1141)
		identification = 0x76e4(30436)
		flags = 0x2(2)
		fragoffset = 0x0000(0)
		ttl = 0x40(64)
		protocol = 0x11(17)
		hdrchecksum = 0xc191(49553)
		srcAddr = 0x7f000001(2130706433)
		dstAddr = 0x7f000001(2130706433)
	)
		udp = (
		isValid = 0x1(1)
		sport = 0xa9d3(43475)
		dport = 0x2bcb(11211)
		len = 0x0461(1121)
		chksum = 0x0275(629)
	)
	)
	ioports = (
		ingress_port = 0x0(0)
		egress_port = 0x0(0)
	)
clear internal and output-only tuples
	control = (
		offset = 0x0000(0)
		virtual_offset = 0x0000(0)
		section = 0x0(0)
		activeBank = 0x0(0)
		done = 0x0(0)
		error = 0x0(0)
	)
	CheckCache_fl = (
		forward_1 = 0x0(0)
	)
	local_state = (
		id = 0x0000(0)
	)
processing section setup in stage 1
-------------------------------------------------------------------
Section setup starting


	method move_to_section = done(0)

updated tuples:
	control = (
		offset = 0x0000(0)
		virtual_offset = 0x0000(0)
		section = 0x0(0)
		activeBank = 0x0(0)
		done = 0x1(1)
		error = 0x0(0)
	)
	CheckCache_fl = (
		forward_1 = 0x0(0)
	)
	hdr = (
		eth = (
		isValid = 0x1(1)
		dst = 0x000000000000(0)
		src = 0x000000000000(0)
		type = 0x0800(2048)
	)
		fec = (
		isValid = 0x0(0)
		traffic_class = 0x0(0)
		block_index = 0x00(0)
		packet_index = 0x00(0)
		original_type = 0x0000(0)
	)
		ipv4 = (
		isValid = 0x1(1)
		version = 0x4(4)
		ihl = 0x5(5)
		diffserv = 0x00(0)
		totallen = 0x0475(1141)
		identification = 0x76e4(30436)
		flags = 0x2(2)
		fragoffset = 0x0000(0)
		ttl = 0x40(64)
		protocol = 0x11(17)
		hdrchecksum = 0xc191(49553)
		srcAddr = 0x7f000001(2130706433)
		dstAddr = 0x7f000001(2130706433)
	)
		udp = (
		isValid = 0x1(1)
		sport = 0xa9d3(43475)
		dport = 0x2bcb(11211)
		len = 0x0461(1121)
		chksum = 0x0275(629)
	)
	)
	ioports = (
		ingress_port = 0x0(0)
		egress_port = 0x0(0)
	)
	local_state = (
		id = 0x0000(0)
	)
Section setup finished
-------------------------------------------------------------------
final inout and output tuples:

Note: this engine's wrapper will clear the upper control tuple fields on output, except for the 'control.error' field.

	CheckCache_fl = (
		forward_1 = 0x0(0)
	)
	hdr = (
		eth = (
		isValid = 0x1(1)
		dst = 0x000000000000(0)
		src = 0x000000000000(0)
		type = 0x0800(2048)
	)
		fec = (
		isValid = 0x0(0)
		traffic_class = 0x0(0)
		block_index = 0x00(0)
		packet_index = 0x00(0)
		original_type = 0x0000(0)
	)
		ipv4 = (
		isValid = 0x1(1)
		version = 0x4(4)
		ihl = 0x5(5)
		diffserv = 0x00(0)
		totallen = 0x0475(1141)
		identification = 0x76e4(30436)
		flags = 0x2(2)
		fragoffset = 0x0000(0)
		ttl = 0x40(64)
		protocol = 0x11(17)
		hdrchecksum = 0xc191(49553)
		srcAddr = 0x7f000001(2130706433)
		dstAddr = 0x7f000001(2130706433)
	)
		udp = (
		isValid = 0x1(1)
		sport = 0xa9d3(43475)
		dport = 0x2bcb(11211)
		len = 0x0461(1121)
		chksum = 0x0275(629)
	)
	)
	ioports = (
		ingress_port = 0x0(0)
		egress_port = 0x0(0)
	)
	local_state = (
		id = 0x0000(0)
	)
Exiting engine CheckCache_lvl
===================================================================
===================================================================
Entering engine CheckCache_lvl_0
input packet (0 bytes)
initial input and inout tuples:
	CheckCache_fl = (
		forward_1 = 0x0(0)
	)
	hdr = (
		eth = (
		isValid = 0x1(1)
		dst = 0x000000000000(0)
		src = 0x000000000000(0)
		type = 0x0800(2048)
	)
		fec = (
		isValid = 0x0(0)
		traffic_class = 0x0(0)
		block_index = 0x00(0)
		packet_index = 0x00(0)
		original_type = 0x0000(0)
	)
		ipv4 = (
		isValid = 0x1(1)
		version = 0x4(4)
		ihl = 0x5(5)
		diffserv = 0x00(0)
		totallen = 0x0475(1141)
		identification = 0x76e4(30436)
		flags = 0x2(2)
		fragoffset = 0x0000(0)
		ttl = 0x40(64)
		protocol = 0x11(17)
		hdrchecksum = 0xc191(49553)
		srcAddr = 0x7f000001(2130706433)
		dstAddr = 0x7f000001(2130706433)
	)
		udp = (
		isValid = 0x1(1)
		sport = 0xa9d3(43475)
		dport = 0x2bcb(11211)
		len = 0x0461(1121)
		chksum = 0x0275(629)
	)
	)
	ioports = (
		ingress_port = 0x0(0)
		egress_port = 0x0(0)
	)
	local_state = (
		id = 0x0000(0)
	)
clear internal and output-only tuples
	control = (
		offset = 0x0000(0)
		virtual_offset = 0x0000(0)
		section = 0x0(0)
		activeBank = 0x0(0)
		done = 0x0(0)
		error = 0x0(0)
	)
	memcached_input = (
		stateful_valid = 0x0(0)
	)
processing section condition_sec_0 in stage 1
-------------------------------------------------------------------
Section condition_sec_0 starting

	method update (tuples)
		local_state.id = 0x0005(5)


	method move_to_section = condition_sec

updated tuples:
	control = (
		offset = 0x0000(0)
		virtual_offset = 0x0000(0)
		section = 0x2(2)
		activeBank = 0x0(0)
		done = 0x0(0)
		error = 0x0(0)
	)
	CheckCache_fl = (
		forward_1 = 0x0(0)
	)
	hdr = (
		eth = (
		isValid = 0x1(1)
		dst = 0x000000000000(0)
		src = 0x000000000000(0)
		type = 0x0800(2048)
	)
		fec = (
		isValid = 0x0(0)
		traffic_class = 0x0(0)
		block_index = 0x00(0)
		packet_index = 0x00(0)
		original_type = 0x0000(0)
	)
		ipv4 = (
		isValid = 0x1(1)
		version = 0x4(4)
		ihl = 0x5(5)
		diffserv = 0x00(0)
		totallen = 0x0475(1141)
		identification = 0x76e4(30436)
		flags = 0x2(2)
		fragoffset = 0x0000(0)
		ttl = 0x40(64)
		protocol = 0x11(17)
		hdrchecksum = 0xc191(49553)
		srcAddr = 0x7f000001(2130706433)
		dstAddr = 0x7f000001(2130706433)
	)
		udp = (
		isValid = 0x1(1)
		sport = 0xa9d3(43475)
		dport = 0x2bcb(11211)
		len = 0x0461(1121)
		chksum = 0x0275(629)
	)
	)
	ioports = (
		ingress_port = 0x0(0)
		egress_port = 0x0(0)
	)
	local_state = (
		id = 0x0005(5)
	)
	memcached_input = (
		stateful_valid = 0x0(0)
	)
Section condition_sec_0 finished
-------------------------------------------------------------------
processing section condition_sec in stage 2
-------------------------------------------------------------------
Section condition_sec starting

	method update (tuples)
		local_state.id = 0x0005(5)


	method move_to_section = act_0_sec

updated tuples:
	control = (
		offset = 0x0000(0)
		virtual_offset = 0x0000(0)
		section = 0x1(1)
		activeBank = 0x0(0)
		done = 0x0(0)
		error = 0x0(0)
	)
	CheckCache_fl = (
		forward_1 = 0x0(0)
	)
	hdr = (
		eth = (
		isValid = 0x1(1)
		dst = 0x000000000000(0)
		src = 0x000000000000(0)
		type = 0x0800(2048)
	)
		fec = (
		isValid = 0x0(0)
		traffic_class = 0x0(0)
		block_index = 0x00(0)
		packet_index = 0x00(0)
		original_type = 0x0000(0)
	)
		ipv4 = (
		isValid = 0x1(1)
		version = 0x4(4)
		ihl = 0x5(5)
		diffserv = 0x00(0)
		totallen = 0x0475(1141)
		identification = 0x76e4(30436)
		flags = 0x2(2)
		fragoffset = 0x0000(0)
		ttl = 0x40(64)
		protocol = 0x11(17)
		hdrchecksum = 0xc191(49553)
		srcAddr = 0x7f000001(2130706433)
		dstAddr = 0x7f000001(2130706433)
	)
		udp = (
		isValid = 0x1(1)
		sport = 0xa9d3(43475)
		dport = 0x2bcb(11211)
		len = 0x0461(1121)
		chksum = 0x0275(629)
	)
	)
	ioports = (
		ingress_port = 0x0(0)
		egress_port = 0x0(0)
	)
	local_state = (
		id = 0x0005(5)
	)
	memcached_input = (
		stateful_valid = 0x0(0)
	)
Section condition_sec finished
-------------------------------------------------------------------
processing section act_0_sec in stage 3
-------------------------------------------------------------------
Section act_0_sec starting

	method update (tuples)
		memcached_input.stateful_valid = 0x1(1)
		local_state.id = 0x0004(4)


	method move_to_section = local_end

updated tuples:
	control = (
		offset = 0x0000(0)
		virtual_offset = 0x0000(0)
		section = 0x4(4)
		activeBank = 0x0(0)
		done = 0x0(0)
		error = 0x0(0)
	)
	CheckCache_fl = (
		forward_1 = 0x0(0)
	)
	hdr = (
		eth = (
		isValid = 0x1(1)
		dst = 0x000000000000(0)
		src = 0x000000000000(0)
		type = 0x0800(2048)
	)
		fec = (
		isValid = 0x0(0)
		traffic_class = 0x0(0)
		block_index = 0x00(0)
		packet_index = 0x00(0)
		original_type = 0x0000(0)
	)
		ipv4 = (
		isValid = 0x1(1)
		version = 0x4(4)
		ihl = 0x5(5)
		diffserv = 0x00(0)
		totallen = 0x0475(1141)
		identification = 0x76e4(30436)
		flags = 0x2(2)
		fragoffset = 0x0000(0)
		ttl = 0x40(64)
		protocol = 0x11(17)
		hdrchecksum = 0xc191(49553)
		srcAddr = 0x7f000001(2130706433)
		dstAddr = 0x7f000001(2130706433)
	)
		udp = (
		isValid = 0x1(1)
		sport = 0xa9d3(43475)
		dport = 0x2bcb(11211)
		len = 0x0461(1121)
		chksum = 0x0275(629)
	)
	)
	ioports = (
		ingress_port = 0x0(0)
		egress_port = 0x0(0)
	)
	local_state = (
		id = 0x0004(4)
	)
	memcached_input = (
		stateful_valid = 0x1(1)
	)
Section act_0_sec finished
-------------------------------------------------------------------
processing section local_end in stage 4
-------------------------------------------------------------------
Section local_end starting


	method move_to_section = done(0)

updated tuples:
	control = (
		offset = 0x0000(0)
		virtual_offset = 0x0000(0)
		section = 0x0(0)
		activeBank = 0x0(0)
		done = 0x1(1)
		error = 0x0(0)
	)
	CheckCache_fl = (
		forward_1 = 0x0(0)
	)
	hdr = (
		eth = (
		isValid = 0x1(1)
		dst = 0x000000000000(0)
		src = 0x000000000000(0)
		type = 0x0800(2048)
	)
		fec = (
		isValid = 0x0(0)
		traffic_class = 0x0(0)
		block_index = 0x00(0)
		packet_index = 0x00(0)
		original_type = 0x0000(0)
	)
		ipv4 = (
		isValid = 0x1(1)
		version = 0x4(4)
		ihl = 0x5(5)
		diffserv = 0x00(0)
		totallen = 0x0475(1141)
		identification = 0x76e4(30436)
		flags = 0x2(2)
		fragoffset = 0x0000(0)
		ttl = 0x40(64)
		protocol = 0x11(17)
		hdrchecksum = 0xc191(49553)
		srcAddr = 0x7f000001(2130706433)
		dstAddr = 0x7f000001(2130706433)
	)
		udp = (
		isValid = 0x1(1)
		sport = 0xa9d3(43475)
		dport = 0x2bcb(11211)
		len = 0x0461(1121)
		chksum = 0x0275(629)
	)
	)
	ioports = (
		ingress_port = 0x0(0)
		egress_port = 0x0(0)
	)
	local_state = (
		id = 0x0004(4)
	)
	memcached_input = (
		stateful_valid = 0x1(1)
	)
Section local_end finished
-------------------------------------------------------------------
final inout and output tuples:

Note: this engine's wrapper will clear the upper control tuple fields on output, except for the 'control.error' field.

	CheckCache_fl = (
		forward_1 = 0x0(0)
	)
	hdr = (
		eth = (
		isValid = 0x1(1)
		dst = 0x000000000000(0)
		src = 0x000000000000(0)
		type = 0x0800(2048)
	)
		fec = (
		isValid = 0x0(0)
		traffic_class = 0x0(0)
		block_index = 0x00(0)
		packet_index = 0x00(0)
		original_type = 0x0000(0)
	)
		ipv4 = (
		isValid = 0x1(1)
		version = 0x4(4)
		ihl = 0x5(5)
		diffserv = 0x00(0)
		totallen = 0x0475(1141)
		identification = 0x76e4(30436)
		flags = 0x2(2)
		fragoffset = 0x0000(0)
		ttl = 0x40(64)
		protocol = 0x11(17)
		hdrchecksum = 0xc191(49553)
		srcAddr = 0x7f000001(2130706433)
		dstAddr = 0x7f000001(2130706433)
	)
		udp = (
		isValid = 0x1(1)
		sport = 0xa9d3(43475)
		dport = 0x2bcb(11211)
		len = 0x0461(1121)
		chksum = 0x0275(629)
	)
	)
	ioports = (
		ingress_port = 0x0(0)
		egress_port = 0x0(0)
	)
	local_state = (
		id = 0x0004(4)
	)
	memcached_input = (
		stateful_valid = 0x1(1)
	)
Exiting engine CheckCache_lvl_0
===================================================================
===================================================================
Entering engine memcached_0
input packet (1155 bytes)
 0x0000(0) : 00 00 00 00 00 00 00 00 00 00 00 00 08 00 45 00 
0x0010(16) : 04 75 76 e4 40 00 40 11 c1 91 7f 00 00 01 7f 00 
0x0020(32) : 00 01 a9 d3 2b cb 04 61 02 75 00 06 00 00 00 01 
0x0030(48) : 01 00 73 65 74 20 13 10 10 10 10 10 10 10 76 77 
0x0040(64) : 6f 30 50 30 42 34 4b 4e 72 69 6d 37 52 54 56 72 
0x0050(80) : 72 79 6e 7a 48 7a 33 42 6c 37 74 68 79 6e 62 6b 
0x0060(96) : 6e 2d 6b 79 33 33 4a 76 6c 34 30 41 58 56 2d 4d 
0x0070(112) : 52 6d 4a 6a 6a 4d 20 30 20 30 20 31 30 32 34 0d 
0x0080(128) : 0a 76 77 6f 30 50 30 42 34 4b 4e 72 69 6d 37 52 
0x0090(144) : 54 56 72 72 79 6e 7a 48 7a 33 42 6c 37 74 68 79 
0x00a0(160) : 6e 62 6b 6e 2d 6b 79 33 33 4a 76 6c 34 30 41 58 
0x00b0(176) : 56 2d 4d 52 6d 4a 6a 6a 4d 75 53 54 6c 38 50 57 
0x00c0(192) : 6a 37 48 69 72 45 6d 75 58 66 64 62 66 6e 36 38 
0x00d0(208) : 6d 53 5a 57 6c 47 45 35 38 67 59 75 6f 78 4f 57 
0x00e0(224) : 32 67 43 75 75 79 6d 50 62 4f 2d 45 39 35 4d 77 
0x00f0(240) : 59 77 51 48 41 65 4e 4a 4a 76 42 35 72 5a 62 74 
0x0100(256) : 44 6f 6c 35 6b 57 56 4b 75 55 59 31 5a 76 78 35 
0x0110(272) : 70 4d 4e 7a 2e 6b 47 48 64 52 4e 53 2d 79 4b 43 
0x0120(288) : 6b 33 49 54 5a 6e 6e 52 46 4a 54 6f 43 4f 75 2d 
0x0130(304) : 6b 46 7a 6a 7a 44 2e 61 66 4c 31 65 49 4c 71 30 
0x0140(320) : 4f 36 54 79 74 45 4e 36 59 71 76 6b 44 6e 6b 78 
0x0150(336) : 30 68 65 7a 75 64 58 58 79 59 39 45 74 2e 46 47 
0x0160(352) : 34 69 43 79 78 5a 32 54 4f 78 42 62 69 76 57 69 
0x0170(368) : 61 39 66 54 6d 42 2e 69 6a 38 78 62 36 41 72 41 
0x0180(384) : 73 31 36 6e 61 39 45 79 34 51 58 6e 4a 32 54 75 
0x0190(400) : 42 37 4c 78 49 4a 64 2d 52 59 61 58 69 50 69 5a 
0x01a0(416) : 51 6f 4b 2d 78 5a 78 30 7a 54 6e 47 56 45 38 67 
0x01b0(432) : 4c 54 62 64 6e 43 64 43 6c 42 6b 52 62 51 2e 2d 
0x01c0(448) : 43 4a 2e 38 73 77 38 70 4e 76 33 73 37 43 57 54 
0x01d0(464) : 66 35 34 51 48 68 64 30 74 4c 53 53 6c 51 52 78 
0x01e0(480) : 6a 51 33 5a 4b 42 4d 68 34 51 58 43 63 31 66 46 
0x01f0(496) : 36 6a 67 4e 50 48 4f 47 63 71 69 4c 45 37 47 79 
0x0200(512) : 58 4b 56 72 56 73 57 61 47 31 6d 73 32 50 35 38 
0x0210(528) : 36 6c 57 56 30 75 6c 63 69 52 78 77 5a 43 73 34 
0x0220(544) : 57 4d 77 2d 43 51 5a 53 53 4a 49 55 69 4e 64 70 
0x0230(560) : 37 37 49 37 2d 32 6b 68 54 66 62 30 72 53 35 4c 
0x0240(576) : 6f 2d 4c 2e 50 75 51 72 43 69 4b 75 33 78 68 41 
0x0250(592) : 32 2e 49 31 30 30 69 54 66 48 55 56 6a 5a 71 56 
0x0260(608) : 59 39 54 78 32 74 6e 45 5a 35 36 64 30 6f 6e 32 
0x0270(624) : 6d 33 33 6d 33 6c 44 6a 30 68 43 6b 45 30 44 6d 
0x0280(640) : 41 68 69 43 59 54 51 36 59 57 6a 59 49 55 61 32 
0x0290(656) : 59 64 6f 62 4d 30 49 4d 68 55 34 77 56 49 67 66 
0x02a0(672) : 7a 4d 72 56 70 46 62 4c 6c 49 74 32 6e 52 34 4a 
0x02b0(688) : 32 74 75 4f 74 42 6c 59 66 70 53 38 35 37 6e 32 
0x02c0(704) : 54 63 59 48 72 37 63 62 51 55 64 42 76 68 55 79 
0x02d0(720) : 59 4d 4b 50 58 33 79 42 74 4f 4a 79 56 35 2d 7a 
0x02e0(736) : 68 58 45 58 65 71 36 32 49 6a 44 43 4f 68 38 78 
0x02f0(752) : 32 53 4b 5a 57 47 6b 4e 66 32 4a 38 37 49 35 6f 
0x0300(768) : 70 4a 4a 53 38 50 55 51 36 69 63 56 4e 6b 51 50 
0x0310(784) : 42 6b 7a 68 2d 68 32 65 6a 4c 6d 71 65 73 64 52 
0x0320(800) : 39 77 74 48 4b 4d 69 51 32 49 76 50 31 4a 70 43 
0x0330(816) : 32 6d 74 31 52 76 66 39 45 50 7a 73 46 61 49 50 
0x0340(832) : 56 39 67 70 56 4d 44 58 66 37 78 67 51 6b 73 53 
0x0350(848) : 55 6a 54 76 63 36 32 71 57 30 68 6c 61 7a 38 33 
0x0360(864) : 36 70 73 63 39 34 37 6f 42 32 53 62 6d 49 32 45 
0x0370(880) : 2d 56 38 62 63 41 51 36 41 35 72 6c 32 2e 6f 38 
0x0380(896) : 6e 66 6b 77 6a 73 6a 75 75 39 54 66 53 56 74 52 
0x0390(912) : 2d 2d 31 62 41 52 68 4b 57 57 33 59 55 73 67 46 
0x03a0(928) : 56 50 41 43 46 74 34 37 30 58 6d 53 31 65 75 30 
0x03b0(944) : 64 76 62 6e 4b 47 36 71 6d 39 4d 46 2d 30 55 55 
0x03c0(960) : 50 65 67 65 56 6b 6d 57 47 57 79 48 38 71 48 6d 
0x03d0(976) : 6a 73 58 31 36 64 72 73 6e 42 35 6d 43 61 46 62 
0x03e0(992) : 43 76 45 69 65 2e 43 75 55 38 39 64 7a 51 4e 67 
0x03f0(1008) : 47 75 69 4d 57 58 43 48 6a 49 31 76 73 47 55 32 
0x0400(1024) : 41 69 6b 6f 67 77 67 39 33 70 6d 30 44 37 67 54 
0x0410(1040) : 2d 4d 70 56 75 2d 6d 62 48 6f 55 37 32 79 41 43 
0x0420(1056) : 66 75 2e 4a 70 65 53 73 52 43 73 65 4a 57 35 4a 
0x0430(1072) : 74 75 6f 6c 75 5a 4b 39 4c 6f 48 4e 6b 52 61 4e 
0x0440(1088) : 4a 59 68 36 42 37 79 63 4b 6f 46 64 4a 4b 77 41 
0x0450(1104) : 44 6a 76 35 47 44 45 62 2d 56 79 6a 77 57 35 45 
0x0460(1120) : 33 6d 4b 45 74 48 71 42 33 33 70 4d 4f 6a 57 62 
0x0470(1136) : 51 50 67 67 63 75 46 62 4f 43 4a 49 69 4f 57 6c 
0x0480(1152) : 38 0d 0a 
initial input and inout tuples:
	control = (
		offset = 0x0000(0)
		virtual_offset = 0x0000(0)
		section = 0x0(0)
		activeBank = 0x0(0)
		done = 0x0(0)
		error = 0x0(0)
	)
	CheckCache_fl = (
		forward_1 = 0x0(0)
	)
	hdr = (
		eth = (
		isValid = 0x1(1)
		dst = 0x000000000000(0)
		src = 0x000000000000(0)
		type = 0x0800(2048)
	)
		fec = (
		isValid = 0x0(0)
		traffic_class = 0x0(0)
		block_index = 0x00(0)
		packet_index = 0x00(0)
		original_type = 0x0000(0)
	)
		ipv4 = (
		isValid = 0x1(1)
		version = 0x4(4)
		ihl = 0x5(5)
		diffserv = 0x00(0)
		totallen = 0x0475(1141)
		identification = 0x76e4(30436)
		flags = 0x2(2)
		fragoffset = 0x0000(0)
		ttl = 0x40(64)
		protocol = 0x11(17)
		hdrchecksum = 0xc191(49553)
		srcAddr = 0x7f000001(2130706433)
		dstAddr = 0x7f000001(2130706433)
	)
		udp = (
		isValid = 0x1(1)
		sport = 0xa9d3(43475)
		dport = 0x2bcb(11211)
		len = 0x0461(1121)
		chksum = 0x0275(629)
	)
	)
	ioports = (
		ingress_port = 0x0(0)
		egress_port = 0x0(0)
	)
	local_state = (
		id = 0x0004(4)
	)
	Parser_extracts = (
		size = 0x00000150(336)
	)
	memcached_input = (
		stateful_valid = 0x1(1)
	)
clear internal and output-only tuples
	memcached_output = (
		forward = 0x0(0)
	)
Enter USER ENGINE FUNCTION
0
134235392
321293671125237777
13948069158919962368
468199414629473
177047786120806401
72184473615078160
1157442765409252983
8011991905291488078
8244240677250291314
8248745663986807618
7797829271878001259
7939119886418266742
7796909912098221389
5939485304481980464
2319389203729888269
753921307066773570
3768191766527555410
6077170583172184648
8805454728993728633
7954038012842309939
3695896651315036504
6209704477630032490
5581458935253586007
7653665709465365877
6369889096750216760
7877739504726394165
4064315549641363287
3631945796258721104
7083930514212867447
6446710762380807754
5365548803377750644
4931279093683934795
8454761943963957301
8092210392126408520
7228926471035243331
7724598412513799762
5064953567778927917
7730000408164445793
7371321001189863728
5707842458357157430
6445062744825555832
3488149488028375128
8744083121981244999
3776623951516152404
5726399916645177193
7005743208147857001
7653999929928544833
8300475435925980537
3769891593800275061
4771366409731728429
5933881016389232986
5867991498151852080
8814791623340013671
5500129228412380227
7800915506140098093
4848738768807999600
5653762952151652180
7364850289346110512
8380164624394310264
7660960904036633960
3769891409536050758
3921060011631464263
7165624258422851449
6362273947667617633
5130001792084489528
3921605403224665187
7589260776083518260
6290815290793089619
6001690084612400240
3978729297135430504
6081656307026441548
8011143073964052850
4857496639842576449
3615908026435791188
7370234619831677270
6429262818267393605
6500161441116417586
7868689518053573738
3488112039399801965
4713132748025647414
6437731124064379186
6441395835039140173
7517972840118314854
8812825761410343500
7802895589344162890
3635659783308209241
7381491290136342066
6080802089569051490
5860700726709736825
6434882251031542082
8380999316557606266
7518835823856399922
5290115768185796728
3626324976346819406
7364029946010350959
8091361401812047185
3920774172936720720
4786053616868274789
7659617400051164242
4140906236240292177
3623557461992697923
3633688229543568953
4994626622274488656
6213110893116212312
7365488100730696531
6154824708202574449
6282636294882998323
3922762145438381935
4769966637544190533
3266860574927049014
4698787595254918968
7955163952427788917
8446875374571648082
3255312403731212363
6293555463052289862
6219542842599289911
3483654515849524528
7239081676893533809
7870406787607844181
5793150180621249879
5140710850758264941
7670571558731281011
7944971436033132130
4861149166764442485
6140721195631332967
5149137529866830664
7658707026130195762
4713416611241355065
3706582547396257620
3264388821548887394
5219484188704063811
7382858061391942515
5927708413425825098
8391735992290790201
5507700370942615886
5357427813982370147
5435640671816611649
4929882713311429986
3266932077879571781
3705700830071517506
3689415997093730146
5859296808956937826
5711490431595796332
4038895435937480704
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<Inside MemCore<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<< 
The No. 6Packet
0
818
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<Inside MemCore<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<< 
===================================================================
Entering engine CheckCache_lvl_1
input packet (0 bytes)
initial input and inout tuples:
	CheckCache_fl = (
		forward_1 = 0x0(0)
	)
	hdr = (
		eth = (
		isValid = 0x1(1)
		dst = 0x000000000000(0)
		src = 0x000000000000(0)
		type = 0x0800(2048)
	)
		fec = (
		isValid = 0x0(0)
		traffic_class = 0x0(0)
		block_index = 0x00(0)
		packet_index = 0x00(0)
		original_type = 0x0000(0)
	)
		ipv4 = (
		isValid = 0x1(1)
		version = 0x4(4)
		ihl = 0x5(5)
		diffserv = 0x00(0)
		totallen = 0x0475(1141)
		identification = 0x76e4(30436)
		flags = 0x2(2)
		fragoffset = 0x0000(0)
		ttl = 0x40(64)
		protocol = 0x11(17)
		hdrchecksum = 0xc191(49553)
		srcAddr = 0x7f000001(2130706433)
		dstAddr = 0x7f000001(2130706433)
	)
		udp = (
		isValid = 0x1(1)
		sport = 0xa9d3(43475)
		dport = 0x2bcb(11211)
		len = 0x0461(1121)
		chksum = 0x0275(629)
	)
	)
	ioports = (
		ingress_port = 0x0(0)
		egress_port = 0x0(0)
	)
	local_state = (
		id = 0x0004(4)
	)
	memcached_output = (
		forward = 0x0(0)
	)
clear internal and output-only tuples
	control = (
		offset = 0x0000(0)
		virtual_offset = 0x0000(0)
		section = 0x0(0)
		activeBank = 0x0(0)
		done = 0x0(0)
		error = 0x0(0)
	)
processing section local_start in stage 1
-------------------------------------------------------------------
Section local_start starting


	method move_to_section = memcached_sec

updated tuples:
	control = (
		offset = 0x0000(0)
		virtual_offset = 0x0000(0)
		section = 0x2(2)
		activeBank = 0x0(0)
		done = 0x0(0)
		error = 0x0(0)
	)
	CheckCache_fl = (
		forward_1 = 0x0(0)
	)
	hdr = (
		eth = (
		isValid = 0x1(1)
		dst = 0x000000000000(0)
		src = 0x000000000000(0)
		type = 0x0800(2048)
	)
		fec = (
		isValid = 0x0(0)
		traffic_class = 0x0(0)
		block_index = 0x00(0)
		packet_index = 0x00(0)
		original_type = 0x0000(0)
	)
		ipv4 = (
		isValid = 0x1(1)
		version = 0x4(4)
		ihl = 0x5(5)
		diffserv = 0x00(0)
		totallen = 0x0475(1141)
		identification = 0x76e4(30436)
		flags = 0x2(2)
		fragoffset = 0x0000(0)
		ttl = 0x40(64)
		protocol = 0x11(17)
		hdrchecksum = 0xc191(49553)
		srcAddr = 0x7f000001(2130706433)
		dstAddr = 0x7f000001(2130706433)
	)
		udp = (
		isValid = 0x1(1)
		sport = 0xa9d3(43475)
		dport = 0x2bcb(11211)
		len = 0x0461(1121)
		chksum = 0x0275(629)
	)
	)
	ioports = (
		ingress_port = 0x0(0)
		egress_port = 0x0(0)
	)
	local_state = (
		id = 0x0004(4)
	)
	memcached_output = (
		forward = 0x0(0)
	)
Section local_start finished
-------------------------------------------------------------------
processing section memcached_sec in stage 2
-------------------------------------------------------------------
Section memcached_sec starting

	method update (tuples)
		CheckCache_fl.forward_1 = 0x0(0)


	method move_to_section = sink

updated tuples:
	control = (
		offset = 0x0000(0)
		virtual_offset = 0x0000(0)
		section = 0x3(3)
		activeBank = 0x0(0)
		done = 0x0(0)
		error = 0x0(0)
	)
	CheckCache_fl = (
		forward_1 = 0x0(0)
	)
	hdr = (
		eth = (
		isValid = 0x1(1)
		dst = 0x000000000000(0)
		src = 0x000000000000(0)
		type = 0x0800(2048)
	)
		fec = (
		isValid = 0x0(0)
		traffic_class = 0x0(0)
		block_index = 0x00(0)
		packet_index = 0x00(0)
		original_type = 0x0000(0)
	)
		ipv4 = (
		isValid = 0x1(1)
		version = 0x4(4)
		ihl = 0x5(5)
		diffserv = 0x00(0)
		totallen = 0x0475(1141)
		identification = 0x76e4(30436)
		flags = 0x2(2)
		fragoffset = 0x0000(0)
		ttl = 0x40(64)
		protocol = 0x11(17)
		hdrchecksum = 0xc191(49553)
		srcAddr = 0x7f000001(2130706433)
		dstAddr = 0x7f000001(2130706433)
	)
		udp = (
		isValid = 0x1(1)
		sport = 0xa9d3(43475)
		dport = 0x2bcb(11211)
		len = 0x0461(1121)
		chksum = 0x0275(629)
	)
	)
	ioports = (
		ingress_port = 0x0(0)
		egress_port = 0x0(0)
	)
	local_state = (
		id = 0x0004(4)
	)
	memcached_output = (
		forward = 0x0(0)
	)
Section memcached_sec finished
-------------------------------------------------------------------
processing section sink in stage 3
-------------------------------------------------------------------
Section sink starting


	method move_to_section = done(0)

updated tuples:
	control = (
		offset = 0x0000(0)
		virtual_offset = 0x0000(0)
		section = 0x0(0)
		activeBank = 0x0(0)
		done = 0x1(1)
		error = 0x0(0)
	)
	CheckCache_fl = (
		forward_1 = 0x0(0)
	)
	hdr = (
		eth = (
		isValid = 0x1(1)
		dst = 0x000000000000(0)
		src = 0x000000000000(0)
		type = 0x0800(2048)
	)
		fec = (
		isValid = 0x0(0)
		traffic_class = 0x0(0)
		block_index = 0x00(0)
		packet_index = 0x00(0)
		original_type = 0x0000(0)
	)
		ipv4 = (
		isValid = 0x1(1)
		version = 0x4(4)
		ihl = 0x5(5)
		diffserv = 0x00(0)
		totallen = 0x0475(1141)
		identification = 0x76e4(30436)
		flags = 0x2(2)
		fragoffset = 0x0000(0)
		ttl = 0x40(64)
		protocol = 0x11(17)
		hdrchecksum = 0xc191(49553)
		srcAddr = 0x7f000001(2130706433)
		dstAddr = 0x7f000001(2130706433)
	)
		udp = (
		isValid = 0x1(1)
		sport = 0xa9d3(43475)
		dport = 0x2bcb(11211)
		len = 0x0461(1121)
		chksum = 0x0275(629)
	)
	)
	ioports = (
		ingress_port = 0x0(0)
		egress_port = 0x0(0)
	)
	local_state = (
		id = 0x0004(4)
	)
	memcached_output = (
		forward = 0x0(0)
	)
Section sink finished
-------------------------------------------------------------------
final inout and output tuples:

Note: this engine's wrapper will clear the upper control tuple fields on output, except for the 'control.error' field.

	hdr = (
		eth = (
		isValid = 0x1(1)
		dst = 0x000000000000(0)
		src = 0x000000000000(0)
		type = 0x0800(2048)
	)
		fec = (
		isValid = 0x0(0)
		traffic_class = 0x0(0)
		block_index = 0x00(0)
		packet_index = 0x00(0)
		original_type = 0x0000(0)
	)
		ipv4 = (
		isValid = 0x1(1)
		version = 0x4(4)
		ihl = 0x5(5)
		diffserv = 0x00(0)
		totallen = 0x0475(1141)
		identification = 0x76e4(30436)
		flags = 0x2(2)
		fragoffset = 0x0000(0)
		ttl = 0x40(64)
		protocol = 0x11(17)
		hdrchecksum = 0xc191(49553)
		srcAddr = 0x7f000001(2130706433)
		dstAddr = 0x7f000001(2130706433)
	)
		udp = (
		isValid = 0x1(1)
		sport = 0xa9d3(43475)
		dport = 0x2bcb(11211)
		len = 0x0461(1121)
		chksum = 0x0275(629)
	)
	)
	ioports = (
		ingress_port = 0x0(0)
		egress_port = 0x0(0)
	)
Exiting engine CheckCache_lvl_1
===================================================================
===================================================================
Entering engine Deparser
input packet (1155 bytes)
 0x0000(0) : 00 00 00 00 00 00 00 00 00 00 00 00 08 00 45 00 
0x0010(16) : 04 75 76 e4 40 00 40 11 c1 91 7f 00 00 01 7f 00 
0x0020(32) : 00 01 a9 d3 2b cb 04 61 02 75 00 06 00 00 00 01 
0x0030(48) : 01 00 73 65 74 20 13 10 10 10 10 10 10 10 76 77 
0x0040(64) : 6f 30 50 30 42 34 4b 4e 72 69 6d 37 52 54 56 72 
0x0050(80) : 72 79 6e 7a 48 7a 33 42 6c 37 74 68 79 6e 62 6b 
0x0060(96) : 6e 2d 6b 79 33 33 4a 76 6c 34 30 41 58 56 2d 4d 
0x0070(112) : 52 6d 4a 6a 6a 4d 20 30 20 30 20 31 30 32 34 0d 
0x0080(128) : 0a 76 77 6f 30 50 30 42 34 4b 4e 72 69 6d 37 52 
0x0090(144) : 54 56 72 72 79 6e 7a 48 7a 33 42 6c 37 74 68 79 
0x00a0(160) : 6e 62 6b 6e 2d 6b 79 33 33 4a 76 6c 34 30 41 58 
0x00b0(176) : 56 2d 4d 52 6d 4a 6a 6a 4d 75 53 54 6c 38 50 57 
0x00c0(192) : 6a 37 48 69 72 45 6d 75 58 66 64 62 66 6e 36 38 
0x00d0(208) : 6d 53 5a 57 6c 47 45 35 38 67 59 75 6f 78 4f 57 
0x00e0(224) : 32 67 43 75 75 79 6d 50 62 4f 2d 45 39 35 4d 77 
0x00f0(240) : 59 77 51 48 41 65 4e 4a 4a 76 42 35 72 5a 62 74 
0x0100(256) : 44 6f 6c 35 6b 57 56 4b 75 55 59 31 5a 76 78 35 
0x0110(272) : 70 4d 4e 7a 2e 6b 47 48 64 52 4e 53 2d 79 4b 43 
0x0120(288) : 6b 33 49 54 5a 6e 6e 52 46 4a 54 6f 43 4f 75 2d 
0x0130(304) : 6b 46 7a 6a 7a 44 2e 61 66 4c 31 65 49 4c 71 30 
0x0140(320) : 4f 36 54 79 74 45 4e 36 59 71 76 6b 44 6e 6b 78 
0x0150(336) : 30 68 65 7a 75 64 58 58 79 59 39 45 74 2e 46 47 
0x0160(352) : 34 69 43 79 78 5a 32 54 4f 78 42 62 69 76 57 69 
0x0170(368) : 61 39 66 54 6d 42 2e 69 6a 38 78 62 36 41 72 41 
0x0180(384) : 73 31 36 6e 61 39 45 79 34 51 58 6e 4a 32 54 75 
0x0190(400) : 42 37 4c 78 49 4a 64 2d 52 59 61 58 69 50 69 5a 
0x01a0(416) : 51 6f 4b 2d 78 5a 78 30 7a 54 6e 47 56 45 38 67 
0x01b0(432) : 4c 54 62 64 6e 43 64 43 6c 42 6b 52 62 51 2e 2d 
0x01c0(448) : 43 4a 2e 38 73 77 38 70 4e 76 33 73 37 43 57 54 
0x01d0(464) : 66 35 34 51 48 68 64 30 74 4c 53 53 6c 51 52 78 
0x01e0(480) : 6a 51 33 5a 4b 42 4d 68 34 51 58 43 63 31 66 46 
0x01f0(496) : 36 6a 67 4e 50 48 4f 47 63 71 69 4c 45 37 47 79 
0x0200(512) : 58 4b 56 72 56 73 57 61 47 31 6d 73 32 50 35 38 
0x0210(528) : 36 6c 57 56 30 75 6c 63 69 52 78 77 5a 43 73 34 
0x0220(544) : 57 4d 77 2d 43 51 5a 53 53 4a 49 55 69 4e 64 70 
0x0230(560) : 37 37 49 37 2d 32 6b 68 54 66 62 30 72 53 35 4c 
0x0240(576) : 6f 2d 4c 2e 50 75 51 72 43 69 4b 75 33 78 68 41 
0x0250(592) : 32 2e 49 31 30 30 69 54 66 48 55 56 6a 5a 71 56 
0x0260(608) : 59 39 54 78 32 74 6e 45 5a 35 36 64 30 6f 6e 32 
0x0270(624) : 6d 33 33 6d 33 6c 44 6a 30 68 43 6b 45 30 44 6d 
0x0280(640) : 41 68 69 43 59 54 51 36 59 57 6a 59 49 55 61 32 
0x0290(656) : 59 64 6f 62 4d 30 49 4d 68 55 34 77 56 49 67 66 
0x02a0(672) : 7a 4d 72 56 70 46 62 4c 6c 49 74 32 6e 52 34 4a 
0x02b0(688) : 32 74 75 4f 74 42 6c 59 66 70 53 38 35 37 6e 32 
0x02c0(704) : 54 63 59 48 72 37 63 62 51 55 64 42 76 68 55 79 
0x02d0(720) : 59 4d 4b 50 58 33 79 42 74 4f 4a 79 56 35 2d 7a 
0x02e0(736) : 68 58 45 58 65 71 36 32 49 6a 44 43 4f 68 38 78 
0x02f0(752) : 32 53 4b 5a 57 47 6b 4e 66 32 4a 38 37 49 35 6f 
0x0300(768) : 70 4a 4a 53 38 50 55 51 36 69 63 56 4e 6b 51 50 
0x0310(784) : 42 6b 7a 68 2d 68 32 65 6a 4c 6d 71 65 73 64 52 
0x0320(800) : 39 77 74 48 4b 4d 69 51 32 49 76 50 31 4a 70 43 
0x0330(816) : 32 6d 74 31 52 76 66 39 45 50 7a 73 46 61 49 50 
0x0340(832) : 56 39 67 70 56 4d 44 58 66 37 78 67 51 6b 73 53 
0x0350(848) : 55 6a 54 76 63 36 32 71 57 30 68 6c 61 7a 38 33 
0x0360(864) : 36 70 73 63 39 34 37 6f 42 32 53 62 6d 49 32 45 
0x0370(880) : 2d 56 38 62 63 41 51 36 41 35 72 6c 32 2e 6f 38 
0x0380(896) : 6e 66 6b 77 6a 73 6a 75 75 39 54 66 53 56 74 52 
0x0390(912) : 2d 2d 31 62 41 52 68 4b 57 57 33 59 55 73 67 46 
0x03a0(928) : 56 50 41 43 46 74 34 37 30 58 6d 53 31 65 75 30 
0x03b0(944) : 64 76 62 6e 4b 47 36 71 6d 39 4d 46 2d 30 55 55 
0x03c0(960) : 50 65 67 65 56 6b 6d 57 47 57 79 48 38 71 48 6d 
0x03d0(976) : 6a 73 58 31 36 64 72 73 6e 42 35 6d 43 61 46 62 
0x03e0(992) : 43 76 45 69 65 2e 43 75 55 38 39 64 7a 51 4e 67 
0x03f0(1008) : 47 75 69 4d 57 58 43 48 6a 49 31 76 73 47 55 32 
0x0400(1024) : 41 69 6b 6f 67 77 67 39 33 70 6d 30 44 37 67 54 
0x0410(1040) : 2d 4d 70 56 75 2d 6d 62 48 6f 55 37 32 79 41 43 
0x0420(1056) : 66 75 2e 4a 70 65 53 73 52 43 73 65 4a 57 35 4a 
0x0430(1072) : 74 75 6f 6c 75 5a 4b 39 4c 6f 48 4e 6b 52 61 4e 
0x0440(1088) : 4a 59 68 36 42 37 79 63 4b 6f 46 64 4a 4b 77 41 
0x0450(1104) : 44 6a 76 35 47 44 45 62 2d 56 79 6a 77 57 35 45 
0x0460(1120) : 33 6d 4b 45 74 48 71 42 33 33 70 4d 4f 6a 57 62 
0x0470(1136) : 51 50 67 67 63 75 46 62 4f 43 4a 49 69 4f 57 6c 
0x0480(1152) : 38 0d 0a 
initial input and inout tuples:
	control = (
		offset = 0x0000(0)
		virtual_offset = 0x0000(0)
		section = 0x0(0)
		activeBank = 0x0(0)
		done = 0x0(0)
		error = 0x0(0)
	)
	hdr = (
		eth = (
		isValid = 0x1(1)
		dst = 0x000000000000(0)
		src = 0x000000000000(0)
		type = 0x0800(2048)
	)
		fec = (
		isValid = 0x0(0)
		traffic_class = 0x0(0)
		block_index = 0x00(0)
		packet_index = 0x00(0)
		original_type = 0x0000(0)
	)
		ipv4 = (
		isValid = 0x1(1)
		version = 0x4(4)
		ihl = 0x5(5)
		diffserv = 0x00(0)
		totallen = 0x0475(1141)
		identification = 0x76e4(30436)
		flags = 0x2(2)
		fragoffset = 0x0000(0)
		ttl = 0x40(64)
		protocol = 0x11(17)
		hdrchecksum = 0xc191(49553)
		srcAddr = 0x7f000001(2130706433)
		dstAddr = 0x7f000001(2130706433)
	)
		udp = (
		isValid = 0x1(1)
		sport = 0xa9d3(43475)
		dport = 0x2bcb(11211)
		len = 0x0461(1121)
		chksum = 0x0275(629)
	)
	)
	Deparser_extracts = (
		size = 0x00000150(336)
	)
clear internal and output-only tuples
processing section extract_headers_sec in stage 1
-------------------------------------------------------------------
Section extract_headers_sec starting


	method remove
	removing 42 bytes at byte 0:
 0x0000(0) : 00 00 00 00 00 00 00 00 00 00 00 00 08 00 45 00 
0x0010(16) : 04 75 76 e4 40 00 40 11 c1 91 7f 00 00 01 7f 00 
0x0020(32) : 00 01 a9 d3 2b cb 04 61 02 75 
	method move_to_section = act_sec

updated tuples:
	control = (
		offset = 0x0000(0)
		virtual_offset = 0x0150(336)
		section = 0x1(1)
		activeBank = 0x0(0)
		done = 0x0(0)
		error = 0x0(0)
	)
	hdr = (
		eth = (
		isValid = 0x1(1)
		dst = 0x000000000000(0)
		src = 0x000000000000(0)
		type = 0x0800(2048)
	)
		fec = (
		isValid = 0x0(0)
		traffic_class = 0x0(0)
		block_index = 0x00(0)
		packet_index = 0x00(0)
		original_type = 0x0000(0)
	)
		ipv4 = (
		isValid = 0x1(1)
		version = 0x4(4)
		ihl = 0x5(5)
		diffserv = 0x00(0)
		totallen = 0x0475(1141)
		identification = 0x76e4(30436)
		flags = 0x2(2)
		fragoffset = 0x0000(0)
		ttl = 0x40(64)
		protocol = 0x11(17)
		hdrchecksum = 0xc191(49553)
		srcAddr = 0x7f000001(2130706433)
		dstAddr = 0x7f000001(2130706433)
	)
		udp = (
		isValid = 0x1(1)
		sport = 0xa9d3(43475)
		dport = 0x2bcb(11211)
		len = 0x0461(1121)
		chksum = 0x0275(629)
	)
	)
	Deparser_extracts = (
		size = 0x00000150(336)
	)
Section extract_headers_sec finished
-------------------------------------------------------------------
processing section act_sec in stage 2
-------------------------------------------------------------------
Section act_sec starting


	method move_to_section = emit_3

updated tuples:
	control = (
		offset = 0x0000(0)
		virtual_offset = 0x0150(336)
		section = 0x5(5)
		activeBank = 0x0(0)
		done = 0x0(0)
		error = 0x0(0)
	)
	hdr = (
		eth = (
		isValid = 0x1(1)
		dst = 0x000000000000(0)
		src = 0x000000000000(0)
		type = 0x0800(2048)
	)
		fec = (
		isValid = 0x0(0)
		traffic_class = 0x0(0)
		block_index = 0x00(0)
		packet_index = 0x00(0)
		original_type = 0x0000(0)
	)
		ipv4 = (
		isValid = 0x1(1)
		version = 0x4(4)
		ihl = 0x5(5)
		diffserv = 0x00(0)
		totallen = 0x0475(1141)
		identification = 0x76e4(30436)
		flags = 0x2(2)
		fragoffset = 0x0000(0)
		ttl = 0x40(64)
		protocol = 0x11(17)
		hdrchecksum = 0xc191(49553)
		srcAddr = 0x7f000001(2130706433)
		dstAddr = 0x7f000001(2130706433)
	)
		udp = (
		isValid = 0x1(1)
		sport = 0xa9d3(43475)
		dport = 0x2bcb(11211)
		len = 0x0461(1121)
		chksum = 0x0275(629)
	)
	)
	Deparser_extracts = (
		size = 0x00000150(336)
	)
Section act_sec finished
-------------------------------------------------------------------
processing section emit_3 in stage 3
-------------------------------------------------------------------
Section emit_3 starting

	method update (tuples)


	method update (packet)
		 dst = 0x000000000000(0)
		 src = 0x000000000000(0)
		 type = 0x0800(2048)

	method insert
	inserting 14 bytes at byte 0:
 0x0000(0) : 00 00 00 00 00 00 00 00 00 00 00 00 08 00 
	method move_to_section = emit_2

updated tuples:
	control = (
		offset = 0x0070(112)
		virtual_offset = 0x0150(336)
		section = 0x4(4)
		activeBank = 0x0(0)
		done = 0x0(0)
		error = 0x0(0)
	)
	hdr = (
		eth = (
		isValid = 0x1(1)
		dst = 0x000000000000(0)
		src = 0x000000000000(0)
		type = 0x0800(2048)
	)
		fec = (
		isValid = 0x0(0)
		traffic_class = 0x0(0)
		block_index = 0x00(0)
		packet_index = 0x00(0)
		original_type = 0x0000(0)
	)
		ipv4 = (
		isValid = 0x1(1)
		version = 0x4(4)
		ihl = 0x5(5)
		diffserv = 0x00(0)
		totallen = 0x0475(1141)
		identification = 0x76e4(30436)
		flags = 0x2(2)
		fragoffset = 0x0000(0)
		ttl = 0x40(64)
		protocol = 0x11(17)
		hdrchecksum = 0xc191(49553)
		srcAddr = 0x7f000001(2130706433)
		dstAddr = 0x7f000001(2130706433)
	)
		udp = (
		isValid = 0x1(1)
		sport = 0xa9d3(43475)
		dport = 0x2bcb(11211)
		len = 0x0461(1121)
		chksum = 0x0275(629)
	)
	)
	Deparser_extracts = (
		size = 0x00000150(336)
	)
Section emit_3 finished
-------------------------------------------------------------------
processing section emit_2 in stage 4
-------------------------------------------------------------------
Section emit_2 starting

	method update (tuples)


	method update (packet)
		 traffic_class = 0x0(0)
		 block_index = 0x00(0)
		 packet_index = 0x00(0)
		 original_type = 0x0000(0)

	method insert
	inserting 0 bytes at byte 14:
 0x0000(0) :                                           
	method move_to_section = emit_1

updated tuples:
	control = (
		offset = 0x0070(112)
		virtual_offset = 0x0150(336)
		section = 0x3(3)
		activeBank = 0x0(0)
		done = 0x0(0)
		error = 0x0(0)
	)
	hdr = (
		eth = (
		isValid = 0x1(1)
		dst = 0x000000000000(0)
		src = 0x000000000000(0)
		type = 0x0800(2048)
	)
		fec = (
		isValid = 0x0(0)
		traffic_class = 0x0(0)
		block_index = 0x00(0)
		packet_index = 0x00(0)
		original_type = 0x0000(0)
	)
		ipv4 = (
		isValid = 0x1(1)
		version = 0x4(4)
		ihl = 0x5(5)
		diffserv = 0x00(0)
		totallen = 0x0475(1141)
		identification = 0x76e4(30436)
		flags = 0x2(2)
		fragoffset = 0x0000(0)
		ttl = 0x40(64)
		protocol = 0x11(17)
		hdrchecksum = 0xc191(49553)
		srcAddr = 0x7f000001(2130706433)
		dstAddr = 0x7f000001(2130706433)
	)
		udp = (
		isValid = 0x1(1)
		sport = 0xa9d3(43475)
		dport = 0x2bcb(11211)
		len = 0x0461(1121)
		chksum = 0x0275(629)
	)
	)
	Deparser_extracts = (
		size = 0x00000150(336)
	)
Section emit_2 finished
-------------------------------------------------------------------
processing section emit_1 in stage 5
-------------------------------------------------------------------
Section emit_1 starting

	method update (tuples)


	method update (packet)
		 version = 0x4(4)
		 ihl = 0x5(5)
		 diffserv = 0x00(0)
		 totallen = 0x0475(1141)
		 identification = 0x76e4(30436)
		 flags = 0x2(2)
		 fragoffset = 0x0000(0)
		 ttl = 0x40(64)
		 protocol = 0x11(17)
		 hdrchecksum = 0xc191(49553)
		 srcAddr = 0x7f000001(2130706433)
		 dstAddr = 0x7f000001(2130706433)

	method insert
	inserting 20 bytes at byte 14:
 0x0000(0) :                                           45 00 
0x0010(16) : 04 75 76 e4 40 00 40 11 c1 91 7f 00 00 01 7f 00 
0x0020(32) : 00 01 
	method move_to_section = emit_0

updated tuples:
	control = (
		offset = 0x0110(272)
		virtual_offset = 0x0150(336)
		section = 0x2(2)
		activeBank = 0x0(0)
		done = 0x0(0)
		error = 0x0(0)
	)
	hdr = (
		eth = (
		isValid = 0x1(1)
		dst = 0x000000000000(0)
		src = 0x000000000000(0)
		type = 0x0800(2048)
	)
		fec = (
		isValid = 0x0(0)
		traffic_class = 0x0(0)
		block_index = 0x00(0)
		packet_index = 0x00(0)
		original_type = 0x0000(0)
	)
		ipv4 = (
		isValid = 0x1(1)
		version = 0x4(4)
		ihl = 0x5(5)
		diffserv = 0x00(0)
		totallen = 0x0475(1141)
		identification = 0x76e4(30436)
		flags = 0x2(2)
		fragoffset = 0x0000(0)
		ttl = 0x40(64)
		protocol = 0x11(17)
		hdrchecksum = 0xc191(49553)
		srcAddr = 0x7f000001(2130706433)
		dstAddr = 0x7f000001(2130706433)
	)
		udp = (
		isValid = 0x1(1)
		sport = 0xa9d3(43475)
		dport = 0x2bcb(11211)
		len = 0x0461(1121)
		chksum = 0x0275(629)
	)
	)
	Deparser_extracts = (
		size = 0x00000150(336)
	)
Section emit_1 finished
-------------------------------------------------------------------
processing section emit_0 in stage 6
-------------------------------------------------------------------
Section emit_0 starting

	method update (tuples)


	method update (packet)
		 sport = 0xa9d3(43475)
		 dport = 0x2bcb(11211)
		 len = 0x0461(1121)
		 chksum = 0x0275(629)

	method insert
	inserting 8 bytes at byte 34:
0x0020(32) :       a9 d3 2b cb 04 61 02 75 
	method move_to_section = done(0)

updated tuples:
	control = (
		offset = 0x0150(336)
		virtual_offset = 0x0150(336)
		section = 0x0(0)
		activeBank = 0x0(0)
		done = 0x1(1)
		error = 0x0(0)
	)
	hdr = (
		eth = (
		isValid = 0x1(1)
		dst = 0x000000000000(0)
		src = 0x000000000000(0)
		type = 0x0800(2048)
	)
		fec = (
		isValid = 0x0(0)
		traffic_class = 0x0(0)
		block_index = 0x00(0)
		packet_index = 0x00(0)
		original_type = 0x0000(0)
	)
		ipv4 = (
		isValid = 0x1(1)
		version = 0x4(4)
		ihl = 0x5(5)
		diffserv = 0x00(0)
		totallen = 0x0475(1141)
		identification = 0x76e4(30436)
		flags = 0x2(2)
		fragoffset = 0x0000(0)
		ttl = 0x40(64)
		protocol = 0x11(17)
		hdrchecksum = 0xc191(49553)
		srcAddr = 0x7f000001(2130706433)
		dstAddr = 0x7f000001(2130706433)
	)
		udp = (
		isValid = 0x1(1)
		sport = 0xa9d3(43475)
		dport = 0x2bcb(11211)
		len = 0x0461(1121)
		chksum = 0x0275(629)
	)
	)
	Deparser_extracts = (
		size = 0x00000150(336)
	)
Section emit_0 finished
-------------------------------------------------------------------
final inout and output tuples:

Note: this engine's wrapper will clear the upper control tuple fields on output, except for the 'control.error' field.

	control = (
		offset = 0x0000(0)
		virtual_offset = 0x0000(0)
		section = 0x0(0)
		activeBank = 0x0(0)
		done = 0x0(0)
		error = 0x0(0)
	)
output packet (1155 bytes)
 0x0000(0) : 00 00 00 00 00 00 00 00 00 00 00 00 08 00 45 00 
0x0010(16) : 04 75 76 e4 40 00 40 11 c1 91 7f 00 00 01 7f 00 
0x0020(32) : 00 01 a9 d3 2b cb 04 61 02 75 00 06 00 00 00 01 
0x0030(48) : 01 00 73 65 74 20 13 10 10 10 10 10 10 10 76 77 
0x0040(64) : 6f 30 50 30 42 34 4b 4e 72 69 6d 37 52 54 56 72 
0x0050(80) : 72 79 6e 7a 48 7a 33 42 6c 37 74 68 79 6e 62 6b 
0x0060(96) : 6e 2d 6b 79 33 33 4a 76 6c 34 30 41 58 56 2d 4d 
0x0070(112) : 52 6d 4a 6a 6a 4d 20 30 20 30 20 31 30 32 34 0d 
0x0080(128) : 0a 76 77 6f 30 50 30 42 34 4b 4e 72 69 6d 37 52 
0x0090(144) : 54 56 72 72 79 6e 7a 48 7a 33 42 6c 37 74 68 79 
0x00a0(160) : 6e 62 6b 6e 2d 6b 79 33 33 4a 76 6c 34 30 41 58 
0x00b0(176) : 56 2d 4d 52 6d 4a 6a 6a 4d 75 53 54 6c 38 50 57 
0x00c0(192) : 6a 37 48 69 72 45 6d 75 58 66 64 62 66 6e 36 38 
0x00d0(208) : 6d 53 5a 57 6c 47 45 35 38 67 59 75 6f 78 4f 57 
0x00e0(224) : 32 67 43 75 75 79 6d 50 62 4f 2d 45 39 35 4d 77 
0x00f0(240) : 59 77 51 48 41 65 4e 4a 4a 76 42 35 72 5a 62 74 
0x0100(256) : 44 6f 6c 35 6b 57 56 4b 75 55 59 31 5a 76 78 35 
0x0110(272) : 70 4d 4e 7a 2e 6b 47 48 64 52 4e 53 2d 79 4b 43 
0x0120(288) : 6b 33 49 54 5a 6e 6e 52 46 4a 54 6f 43 4f 75 2d 
0x0130(304) : 6b 46 7a 6a 7a 44 2e 61 66 4c 31 65 49 4c 71 30 
0x0140(320) : 4f 36 54 79 74 45 4e 36 59 71 76 6b 44 6e 6b 78 
0x0150(336) : 30 68 65 7a 75 64 58 58 79 59 39 45 74 2e 46 47 
0x0160(352) : 34 69 43 79 78 5a 32 54 4f 78 42 62 69 76 57 69 
0x0170(368) : 61 39 66 54 6d 42 2e 69 6a 38 78 62 36 41 72 41 
0x0180(384) : 73 31 36 6e 61 39 45 79 34 51 58 6e 4a 32 54 75 
0x0190(400) : 42 37 4c 78 49 4a 64 2d 52 59 61 58 69 50 69 5a 
0x01a0(416) : 51 6f 4b 2d 78 5a 78 30 7a 54 6e 47 56 45 38 67 
0x01b0(432) : 4c 54 62 64 6e 43 64 43 6c 42 6b 52 62 51 2e 2d 
0x01c0(448) : 43 4a 2e 38 73 77 38 70 4e 76 33 73 37 43 57 54 
0x01d0(464) : 66 35 34 51 48 68 64 30 74 4c 53 53 6c 51 52 78 
0x01e0(480) : 6a 51 33 5a 4b 42 4d 68 34 51 58 43 63 31 66 46 
0x01f0(496) : 36 6a 67 4e 50 48 4f 47 63 71 69 4c 45 37 47 79 
0x0200(512) : 58 4b 56 72 56 73 57 61 47 31 6d 73 32 50 35 38 
0x0210(528) : 36 6c 57 56 30 75 6c 63 69 52 78 77 5a 43 73 34 
0x0220(544) : 57 4d 77 2d 43 51 5a 53 53 4a 49 55 69 4e 64 70 
0x0230(560) : 37 37 49 37 2d 32 6b 68 54 66 62 30 72 53 35 4c 
0x0240(576) : 6f 2d 4c 2e 50 75 51 72 43 69 4b 75 33 78 68 41 
0x0250(592) : 32 2e 49 31 30 30 69 54 66 48 55 56 6a 5a 71 56 
0x0260(608) : 59 39 54 78 32 74 6e 45 5a 35 36 64 30 6f 6e 32 
0x0270(624) : 6d 33 33 6d 33 6c 44 6a 30 68 43 6b 45 30 44 6d 
0x0280(640) : 41 68 69 43 59 54 51 36 59 57 6a 59 49 55 61 32 
0x0290(656) : 59 64 6f 62 4d 30 49 4d 68 55 34 77 56 49 67 66 
0x02a0(672) : 7a 4d 72 56 70 46 62 4c 6c 49 74 32 6e 52 34 4a 
0x02b0(688) : 32 74 75 4f 74 42 6c 59 66 70 53 38 35 37 6e 32 
0x02c0(704) : 54 63 59 48 72 37 63 62 51 55 64 42 76 68 55 79 
0x02d0(720) : 59 4d 4b 50 58 33 79 42 74 4f 4a 79 56 35 2d 7a 
0x02e0(736) : 68 58 45 58 65 71 36 32 49 6a 44 43 4f 68 38 78 
0x02f0(752) : 32 53 4b 5a 57 47 6b 4e 66 32 4a 38 37 49 35 6f 
0x0300(768) : 70 4a 4a 53 38 50 55 51 36 69 63 56 4e 6b 51 50 
0x0310(784) : 42 6b 7a 68 2d 68 32 65 6a 4c 6d 71 65 73 64 52 
0x0320(800) : 39 77 74 48 4b 4d 69 51 32 49 76 50 31 4a 70 43 
0x0330(816) : 32 6d 74 31 52 76 66 39 45 50 7a 73 46 61 49 50 
0x0340(832) : 56 39 67 70 56 4d 44 58 66 37 78 67 51 6b 73 53 
0x0350(848) : 55 6a 54 76 63 36 32 71 57 30 68 6c 61 7a 38 33 
0x0360(864) : 36 70 73 63 39 34 37 6f 42 32 53 62 6d 49 32 45 
0x0370(880) : 2d 56 38 62 63 41 51 36 41 35 72 6c 32 2e 6f 38 
0x0380(896) : 6e 66 6b 77 6a 73 6a 75 75 39 54 66 53 56 74 52 
0x0390(912) : 2d 2d 31 62 41 52 68 4b 57 57 33 59 55 73 67 46 
0x03a0(928) : 56 50 41 43 46 74 34 37 30 58 6d 53 31 65 75 30 
0x03b0(944) : 64 76 62 6e 4b 47 36 71 6d 39 4d 46 2d 30 55 55 
0x03c0(960) : 50 65 67 65 56 6b 6d 57 47 57 79 48 38 71 48 6d 
0x03d0(976) : 6a 73 58 31 36 64 72 73 6e 42 35 6d 43 61 46 62 
0x03e0(992) : 43 76 45 69 65 2e 43 75 55 38 39 64 7a 51 4e 67 
0x03f0(1008) : 47 75 69 4d 57 58 43 48 6a 49 31 76 73 47 55 32 
0x0400(1024) : 41 69 6b 6f 67 77 67 39 33 70 6d 30 44 37 67 54 
0x0410(1040) : 2d 4d 70 56 75 2d 6d 62 48 6f 55 37 32 79 41 43 
0x0420(1056) : 66 75 2e 4a 70 65 53 73 52 43 73 65 4a 57 35 4a 
0x0430(1072) : 74 75 6f 6c 75 5a 4b 39 4c 6f 48 4e 6b 52 61 4e 
0x0440(1088) : 4a 59 68 36 42 37 79 63 4b 6f 46 64 4a 4b 77 41 
0x0450(1104) : 44 6a 76 35 47 44 45 62 2d 56 79 6a 77 57 35 45 
0x0460(1120) : 33 6d 4b 45 74 48 71 42 33 33 70 4d 4f 6a 57 62 
0x0470(1136) : 51 50 67 67 63 75 46 62 4f 43 4a 49 69 4f 57 6c 
0x0480(1152) : 38 0d 0a 
Exiting engine Deparser
===================================================================
final inout and output tuples:
	ioports = (
		ingress_port = 0x0(0)
		egress_port = 0x0(0)
	)
output packet (1155 bytes)
 0x0000(0) : 00 00 00 00 00 00 00 00 00 00 00 00 08 00 45 00 
0x0010(16) : 04 75 76 e4 40 00 40 11 c1 91 7f 00 00 01 7f 00 
0x0020(32) : 00 01 a9 d3 2b cb 04 61 02 75 00 06 00 00 00 01 
0x0030(48) : 01 00 73 65 74 20 13 10 10 10 10 10 10 10 76 77 
0x0040(64) : 6f 30 50 30 42 34 4b 4e 72 69 6d 37 52 54 56 72 
0x0050(80) : 72 79 6e 7a 48 7a 33 42 6c 37 74 68 79 6e 62 6b 
0x0060(96) : 6e 2d 6b 79 33 33 4a 76 6c 34 30 41 58 56 2d 4d 
0x0070(112) : 52 6d 4a 6a 6a 4d 20 30 20 30 20 31 30 32 34 0d 
0x0080(128) : 0a 76 77 6f 30 50 30 42 34 4b 4e 72 69 6d 37 52 
0x0090(144) : 54 56 72 72 79 6e 7a 48 7a 33 42 6c 37 74 68 79 
0x00a0(160) : 6e 62 6b 6e 2d 6b 79 33 33 4a 76 6c 34 30 41 58 
0x00b0(176) : 56 2d 4d 52 6d 4a 6a 6a 4d 75 53 54 6c 38 50 57 
0x00c0(192) : 6a 37 48 69 72 45 6d 75 58 66 64 62 66 6e 36 38 
0x00d0(208) : 6d 53 5a 57 6c 47 45 35 38 67 59 75 6f 78 4f 57 
0x00e0(224) : 32 67 43 75 75 79 6d 50 62 4f 2d 45 39 35 4d 77 
0x00f0(240) : 59 77 51 48 41 65 4e 4a 4a 76 42 35 72 5a 62 74 
0x0100(256) : 44 6f 6c 35 6b 57 56 4b 75 55 59 31 5a 76 78 35 
0x0110(272) : 70 4d 4e 7a 2e 6b 47 48 64 52 4e 53 2d 79 4b 43 
0x0120(288) : 6b 33 49 54 5a 6e 6e 52 46 4a 54 6f 43 4f 75 2d 
0x0130(304) : 6b 46 7a 6a 7a 44 2e 61 66 4c 31 65 49 4c 71 30 
0x0140(320) : 4f 36 54 79 74 45 4e 36 59 71 76 6b 44 6e 6b 78 
0x0150(336) : 30 68 65 7a 75 64 58 58 79 59 39 45 74 2e 46 47 
0x0160(352) : 34 69 43 79 78 5a 32 54 4f 78 42 62 69 76 57 69 
0x0170(368) : 61 39 66 54 6d 42 2e 69 6a 38 78 62 36 41 72 41 
0x0180(384) : 73 31 36 6e 61 39 45 79 34 51 58 6e 4a 32 54 75 
0x0190(400) : 42 37 4c 78 49 4a 64 2d 52 59 61 58 69 50 69 5a 
0x01a0(416) : 51 6f 4b 2d 78 5a 78 30 7a 54 6e 47 56 45 38 67 
0x01b0(432) : 4c 54 62 64 6e 43 64 43 6c 42 6b 52 62 51 2e 2d 
0x01c0(448) : 43 4a 2e 38 73 77 38 70 4e 76 33 73 37 43 57 54 
0x01d0(464) : 66 35 34 51 48 68 64 30 74 4c 53 53 6c 51 52 78 
0x01e0(480) : 6a 51 33 5a 4b 42 4d 68 34 51 58 43 63 31 66 46 
0x01f0(496) : 36 6a 67 4e 50 48 4f 47 63 71 69 4c 45 37 47 79 
0x0200(512) : 58 4b 56 72 56 73 57 61 47 31 6d 73 32 50 35 38 
0x0210(528) : 36 6c 57 56 30 75 6c 63 69 52 78 77 5a 43 73 34 
0x0220(544) : 57 4d 77 2d 43 51 5a 53 53 4a 49 55 69 4e 64 70 
0x0230(560) : 37 37 49 37 2d 32 6b 68 54 66 62 30 72 53 35 4c 
0x0240(576) : 6f 2d 4c 2e 50 75 51 72 43 69 4b 75 33 78 68 41 
0x0250(592) : 32 2e 49 31 30 30 69 54 66 48 55 56 6a 5a 71 56 
0x0260(608) : 59 39 54 78 32 74 6e 45 5a 35 36 64 30 6f 6e 32 
0x0270(624) : 6d 33 33 6d 33 6c 44 6a 30 68 43 6b 45 30 44 6d 
0x0280(640) : 41 68 69 43 59 54 51 36 59 57 6a 59 49 55 61 32 
0x0290(656) : 59 64 6f 62 4d 30 49 4d 68 55 34 77 56 49 67 66 
0x02a0(672) : 7a 4d 72 56 70 46 62 4c 6c 49 74 32 6e 52 34 4a 
0x02b0(688) : 32 74 75 4f 74 42 6c 59 66 70 53 38 35 37 6e 32 
0x02c0(704) : 54 63 59 48 72 37 63 62 51 55 64 42 76 68 55 79 
0x02d0(720) : 59 4d 4b 50 58 33 79 42 74 4f 4a 79 56 35 2d 7a 
0x02e0(736) : 68 58 45 58 65 71 36 32 49 6a 44 43 4f 68 38 78 
0x02f0(752) : 32 53 4b 5a 57 47 6b 4e 66 32 4a 38 37 49 35 6f 
0x0300(768) : 70 4a 4a 53 38 50 55 51 36 69 63 56 4e 6b 51 50 
0x0310(784) : 42 6b 7a 68 2d 68 32 65 6a 4c 6d 71 65 73 64 52 
0x0320(800) : 39 77 74 48 4b 4d 69 51 32 49 76 50 31 4a 70 43 
0x0330(816) : 32 6d 74 31 52 76 66 39 45 50 7a 73 46 61 49 50 
0x0340(832) : 56 39 67 70 56 4d 44 58 66 37 78 67 51 6b 73 53 
0x0350(848) : 55 6a 54 76 63 36 32 71 57 30 68 6c 61 7a 38 33 
0x0360(864) : 36 70 73 63 39 34 37 6f 42 32 53 62 6d 49 32 45 
0x0370(880) : 2d 56 38 62 63 41 51 36 41 35 72 6c 32 2e 6f 38 
0x0380(896) : 6e 66 6b 77 6a 73 6a 75 75 39 54 66 53 56 74 52 
0x0390(912) : 2d 2d 31 62 41 52 68 4b 57 57 33 59 55 73 67 46 
0x03a0(928) : 56 50 41 43 46 74 34 37 30 58 6d 53 31 65 75 30 
0x03b0(944) : 64 76 62 6e 4b 47 36 71 6d 39 4d 46 2d 30 55 55 
0x03c0(960) : 50 65 67 65 56 6b 6d 57 47 57 79 48 38 71 48 6d 
0x03d0(976) : 6a 73 58 31 36 64 72 73 6e 42 35 6d 43 61 46 62 
0x03e0(992) : 43 76 45 69 65 2e 43 75 55 38 39 64 7a 51 4e 67 
0x03f0(1008) : 47 75 69 4d 57 58 43 48 6a 49 31 76 73 47 55 32 
0x0400(1024) : 41 69 6b 6f 67 77 67 39 33 70 6d 30 44 37 67 54 
0x0410(1040) : 2d 4d 70 56 75 2d 6d 62 48 6f 55 37 32 79 41 43 
0x0420(1056) : 66 75 2e 4a 70 65 53 73 52 43 73 65 4a 57 35 4a 
0x0430(1072) : 74 75 6f 6c 75 5a 4b 39 4c 6f 48 4e 6b 52 61 4e 
0x0440(1088) : 4a 59 68 36 42 37 79 63 4b 6f 46 64 4a 4b 77 41 
0x0450(1104) : 44 6a 76 35 47 44 45 62 2d 56 79 6a 77 57 35 45 
0x0460(1120) : 33 6d 4b 45 74 48 71 42 33 33 70 4d 4f 6a 57 62 
0x0470(1136) : 51 50 67 67 63 75 46 62 4f 43 4a 49 69 4f 57 6c 
0x0480(1152) : 38 0d 0a 
Exiting system XilinxSwitch
===================================================================
Evaluating packet #8(120 bytes)
 0x0000(0) : 00 00 00 00 00 00 00 00 00 00 00 00 08 00 45 00 
0x0010(16) : 00 6a 76 e6 40 00 40 11 c5 9a 7f 00 00 01 7f 00 
0x0020(32) : 00 01 a9 d3 2b cb 00 56 fe 69 00 07 00 00 00 01 
0x0030(48) : 01 00 67 65 74 20 11 10 10 10 10 10 10 10 49 4f 
0x0040(64) : 6a 53 2e 45 6d 4b 45 34 6d 4d 36 7a 6c 30 65 61 
0x0050(80) : 64 63 72 67 65 6e 34 68 77 6a 49 30 73 61 50 5a 
0x0060(96) : 30 4e 6f 6d 68 30 72 52 4e 78 50 36 79 31 67 5a 
0x0070(112) : 64 56 45 46 48 49 0d 0a 
===================================================================
Entering system XilinxSwitch
input packet (120 bytes)
 0x0000(0) : 00 00 00 00 00 00 00 00 00 00 00 00 08 00 45 00 
0x0010(16) : 00 6a 76 e6 40 00 40 11 c5 9a 7f 00 00 01 7f 00 
0x0020(32) : 00 01 a9 d3 2b cb 00 56 fe 69 00 07 00 00 00 01 
0x0030(48) : 01 00 67 65 74 20 11 10 10 10 10 10 10 10 49 4f 
0x0040(64) : 6a 53 2e 45 6d 4b 45 34 6d 4d 36 7a 6c 30 65 61 
0x0050(80) : 64 63 72 67 65 6e 34 68 77 6a 49 30 73 61 50 5a 
0x0060(96) : 30 4e 6f 6d 68 30 72 52 4e 78 50 36 79 31 67 5a 
0x0070(112) : 64 56 45 46 48 49 0d 0a 
initial input and inout tuples:
	ioports = (
		ingress_port = 0x0(0)
		egress_port = 0x0(0)
	)
clear internal and output-only tuples
===================================================================
Entering engine Parser
input packet (120 bytes)
 0x0000(0) : 00 00 00 00 00 00 00 00 00 00 00 00 08 00 45 00 
0x0010(16) : 00 6a 76 e6 40 00 40 11 c5 9a 7f 00 00 01 7f 00 
0x0020(32) : 00 01 a9 d3 2b cb 00 56 fe 69 00 07 00 00 00 01 
0x0030(48) : 01 00 67 65 74 20 11 10 10 10 10 10 10 10 49 4f 
0x0040(64) : 6a 53 2e 45 6d 4b 45 34 6d 4d 36 7a 6c 30 65 61 
0x0050(80) : 64 63 72 67 65 6e 34 68 77 6a 49 30 73 61 50 5a 
0x0060(96) : 30 4e 6f 6d 68 30 72 52 4e 78 50 36 79 31 67 5a 
0x0070(112) : 64 56 45 46 48 49 0d 0a 
initial input and inout tuples:
	control = (
		offset = 0x0000(0)
		virtual_offset = 0x0000(0)
		section = 0x0(0)
		activeBank = 0x0(0)
		done = 0x0(0)
		error = 0x0(0)
	)
clear internal and output-only tuples
	hdr = (
		eth = (
		isValid = 0x0(0)
		dst = 0x000000000000(0)
		src = 0x000000000000(0)
		type = 0x0000(0)
	)
		fec = (
		isValid = 0x0(0)
		traffic_class = 0x0(0)
		block_index = 0x00(0)
		packet_index = 0x00(0)
		original_type = 0x0000(0)
	)
		ipv4 = (
		isValid = 0x0(0)
		version = 0x0(0)
		ihl = 0x0(0)
		diffserv = 0x00(0)
		totallen = 0x0000(0)
		identification = 0x0000(0)
		flags = 0x0(0)
		fragoffset = 0x0000(0)
		ttl = 0x00(0)
		protocol = 0x00(0)
		hdrchecksum = 0x0000(0)
		srcAddr = 0x00000000(0)
		dstAddr = 0x00000000(0)
	)
		udp = (
		isValid = 0x0(0)
		sport = 0x0000(0)
		dport = 0x0000(0)
		len = 0x0000(0)
		chksum = 0x0000(0)
	)
	)
	Parser_extracts = (
		size = 0x00000000(0)
	)
processing section start in stage 1
-------------------------------------------------------------------
Section start starting

	extracting 112 bits at offset 0x0000(0)
		dst_0 = 0x000000000000(0)
		src_0 = 0x000000000000(0)
		type_0 = 0x0800(2048)

	method update (tuples)
		hdr.eth.isValid = 0x1(1)
		hdr.eth.dst = 0x000000000000(0)
		hdr.eth.src = 0x000000000000(0)
		hdr.eth.type = 0x0800(2048)
		Parser_extracts.size = 0x00000070(112)


	method move_to_section = parse_ipv4

updated tuples:
	control = (
		offset = 0x0070(112)
		virtual_offset = 0x0070(112)
		section = 0x2(2)
		activeBank = 0x0(0)
		done = 0x0(0)
		error = 0x0(0)
	)
	hdr = (
		eth = (
		isValid = 0x1(1)
		dst = 0x000000000000(0)
		src = 0x000000000000(0)
		type = 0x0800(2048)
	)
		fec = (
		isValid = 0x0(0)
		traffic_class = 0x0(0)
		block_index = 0x00(0)
		packet_index = 0x00(0)
		original_type = 0x0000(0)
	)
		ipv4 = (
		isValid = 0x0(0)
		version = 0x0(0)
		ihl = 0x0(0)
		diffserv = 0x00(0)
		totallen = 0x0000(0)
		identification = 0x0000(0)
		flags = 0x0(0)
		fragoffset = 0x0000(0)
		ttl = 0x00(0)
		protocol = 0x00(0)
		hdrchecksum = 0x0000(0)
		srcAddr = 0x00000000(0)
		dstAddr = 0x00000000(0)
	)
		udp = (
		isValid = 0x0(0)
		sport = 0x0000(0)
		dport = 0x0000(0)
		len = 0x0000(0)
		chksum = 0x0000(0)
	)
	)
	Parser_extracts = (
		size = 0x00000070(112)
	)
Section start finished
-------------------------------------------------------------------
processing section parse_ipv4 in stage 2
-------------------------------------------------------------------
Section parse_ipv4 starting

	extracting 160 bits at offset 0x0070(112)
		version_0 = 0x4(4)
		ihl_0 = 0x5(5)
		diffserv_0 = 0x00(0)
		totallen_0 = 0x006a(106)
		identification_0 = 0x76e6(30438)
		flags_0 = 0x2(2)
		fragoffset_0 = 0x0000(0)
		ttl_0 = 0x40(64)
		protocol_0 = 0x11(17)
		hdrchecksum_0 = 0xc59a(50586)
		srcAddr_0 = 0x7f000001(2130706433)
		dstAddr_0 = 0x7f000001(2130706433)

	method update (tuples)
		hdr.ipv4.isValid = 0x1(1)
		hdr.ipv4.version = 0x4(4)
		hdr.ipv4.ihl = 0x5(5)
		hdr.ipv4.diffserv = 0x00(0)
		hdr.ipv4.totallen = 0x006a(106)
		hdr.ipv4.identification = 0x76e6(30438)
		hdr.ipv4.flags = 0x2(2)
		hdr.ipv4.fragoffset = 0x0000(0)
		hdr.ipv4.ttl = 0x40(64)
		hdr.ipv4.protocol = 0x11(17)
		hdr.ipv4.hdrchecksum = 0xc59a(50586)
		hdr.ipv4.srcAddr = 0x7f000001(2130706433)
		hdr.ipv4.dstAddr = 0x7f000001(2130706433)
		Parser_extracts.size = 0x00000110(272)


	method move_to_section = parse_udp

updated tuples:
	control = (
		offset = 0x0110(272)
		virtual_offset = 0x0110(272)
		section = 0x3(3)
		activeBank = 0x0(0)
		done = 0x0(0)
		error = 0x0(0)
	)
	hdr = (
		eth = (
		isValid = 0x1(1)
		dst = 0x000000000000(0)
		src = 0x000000000000(0)
		type = 0x0800(2048)
	)
		fec = (
		isValid = 0x0(0)
		traffic_class = 0x0(0)
		block_index = 0x00(0)
		packet_index = 0x00(0)
		original_type = 0x0000(0)
	)
		ipv4 = (
		isValid = 0x1(1)
		version = 0x4(4)
		ihl = 0x5(5)
		diffserv = 0x00(0)
		totallen = 0x006a(106)
		identification = 0x76e6(30438)
		flags = 0x2(2)
		fragoffset = 0x0000(0)
		ttl = 0x40(64)
		protocol = 0x11(17)
		hdrchecksum = 0xc59a(50586)
		srcAddr = 0x7f000001(2130706433)
		dstAddr = 0x7f000001(2130706433)
	)
		udp = (
		isValid = 0x0(0)
		sport = 0x0000(0)
		dport = 0x0000(0)
		len = 0x0000(0)
		chksum = 0x0000(0)
	)
	)
	Parser_extracts = (
		size = 0x00000110(272)
	)
Section parse_ipv4 finished
-------------------------------------------------------------------
processing section parse_udp in stage 3
-------------------------------------------------------------------
Section parse_udp starting

	extracting 64 bits at offset 0x0110(272)
		sport_0 = 0xa9d3(43475)
		dport_0 = 0x2bcb(11211)
		len_0 = 0x0056(86)
		chksum_0 = 0xfe69(65129)

	method update (tuples)
		hdr.udp.isValid = 0x1(1)
		hdr.udp.sport = 0xa9d3(43475)
		hdr.udp.dport = 0x2bcb(11211)
		hdr.udp.len = 0x0056(86)
		hdr.udp.chksum = 0xfe69(65129)
		Parser_extracts.size = 0x00000150(336)


	method move_to_section = accept

updated tuples:
	control = (
		offset = 0x0150(336)
		virtual_offset = 0x0150(336)
		section = 0x4(4)
		activeBank = 0x0(0)
		done = 0x0(0)
		error = 0x0(0)
	)
	hdr = (
		eth = (
		isValid = 0x1(1)
		dst = 0x000000000000(0)
		src = 0x000000000000(0)
		type = 0x0800(2048)
	)
		fec = (
		isValid = 0x0(0)
		traffic_class = 0x0(0)
		block_index = 0x00(0)
		packet_index = 0x00(0)
		original_type = 0x0000(0)
	)
		ipv4 = (
		isValid = 0x1(1)
		version = 0x4(4)
		ihl = 0x5(5)
		diffserv = 0x00(0)
		totallen = 0x006a(106)
		identification = 0x76e6(30438)
		flags = 0x2(2)
		fragoffset = 0x0000(0)
		ttl = 0x40(64)
		protocol = 0x11(17)
		hdrchecksum = 0xc59a(50586)
		srcAddr = 0x7f000001(2130706433)
		dstAddr = 0x7f000001(2130706433)
	)
		udp = (
		isValid = 0x1(1)
		sport = 0xa9d3(43475)
		dport = 0x2bcb(11211)
		len = 0x0056(86)
		chksum = 0xfe69(65129)
	)
	)
	Parser_extracts = (
		size = 0x00000150(336)
	)
Section parse_udp finished
-------------------------------------------------------------------
processing section accept in stage 4
-------------------------------------------------------------------
Section accept starting


	method move_to_section = done(0)

updated tuples:
	control = (
		offset = 0x0150(336)
		virtual_offset = 0x0150(336)
		section = 0x0(0)
		activeBank = 0x0(0)
		done = 0x1(1)
		error = 0x0(0)
	)
	hdr = (
		eth = (
		isValid = 0x1(1)
		dst = 0x000000000000(0)
		src = 0x000000000000(0)
		type = 0x0800(2048)
	)
		fec = (
		isValid = 0x0(0)
		traffic_class = 0x0(0)
		block_index = 0x00(0)
		packet_index = 0x00(0)
		original_type = 0x0000(0)
	)
		ipv4 = (
		isValid = 0x1(1)
		version = 0x4(4)
		ihl = 0x5(5)
		diffserv = 0x00(0)
		totallen = 0x006a(106)
		identification = 0x76e6(30438)
		flags = 0x2(2)
		fragoffset = 0x0000(0)
		ttl = 0x40(64)
		protocol = 0x11(17)
		hdrchecksum = 0xc59a(50586)
		srcAddr = 0x7f000001(2130706433)
		dstAddr = 0x7f000001(2130706433)
	)
		udp = (
		isValid = 0x1(1)
		sport = 0xa9d3(43475)
		dport = 0x2bcb(11211)
		len = 0x0056(86)
		chksum = 0xfe69(65129)
	)
	)
	Parser_extracts = (
		size = 0x00000150(336)
	)
Section accept finished
-------------------------------------------------------------------
final inout and output tuples:

Note: this engine's wrapper will clear the upper control tuple fields on output, except for the 'control.error' field.

	control = (
		offset = 0x0000(0)
		virtual_offset = 0x0000(0)
		section = 0x0(0)
		activeBank = 0x0(0)
		done = 0x0(0)
		error = 0x0(0)
	)
	hdr = (
		eth = (
		isValid = 0x1(1)
		dst = 0x000000000000(0)
		src = 0x000000000000(0)
		type = 0x0800(2048)
	)
		fec = (
		isValid = 0x0(0)
		traffic_class = 0x0(0)
		block_index = 0x00(0)
		packet_index = 0x00(0)
		original_type = 0x0000(0)
	)
		ipv4 = (
		isValid = 0x1(1)
		version = 0x4(4)
		ihl = 0x5(5)
		diffserv = 0x00(0)
		totallen = 0x006a(106)
		identification = 0x76e6(30438)
		flags = 0x2(2)
		fragoffset = 0x0000(0)
		ttl = 0x40(64)
		protocol = 0x11(17)
		hdrchecksum = 0xc59a(50586)
		srcAddr = 0x7f000001(2130706433)
		dstAddr = 0x7f000001(2130706433)
	)
		udp = (
		isValid = 0x1(1)
		sport = 0xa9d3(43475)
		dport = 0x2bcb(11211)
		len = 0x0056(86)
		chksum = 0xfe69(65129)
	)
	)
	Parser_extracts = (
		size = 0x00000150(336)
	)
Exiting engine Parser
===================================================================
===================================================================
Entering engine CheckCache_lvl
input packet (0 bytes)
initial input and inout tuples:
	hdr = (
		eth = (
		isValid = 0x1(1)
		dst = 0x000000000000(0)
		src = 0x000000000000(0)
		type = 0x0800(2048)
	)
		fec = (
		isValid = 0x0(0)
		traffic_class = 0x0(0)
		block_index = 0x00(0)
		packet_index = 0x00(0)
		original_type = 0x0000(0)
	)
		ipv4 = (
		isValid = 0x1(1)
		version = 0x4(4)
		ihl = 0x5(5)
		diffserv = 0x00(0)
		totallen = 0x006a(106)
		identification = 0x76e6(30438)
		flags = 0x2(2)
		fragoffset = 0x0000(0)
		ttl = 0x40(64)
		protocol = 0x11(17)
		hdrchecksum = 0xc59a(50586)
		srcAddr = 0x7f000001(2130706433)
		dstAddr = 0x7f000001(2130706433)
	)
		udp = (
		isValid = 0x1(1)
		sport = 0xa9d3(43475)
		dport = 0x2bcb(11211)
		len = 0x0056(86)
		chksum = 0xfe69(65129)
	)
	)
	ioports = (
		ingress_port = 0x0(0)
		egress_port = 0x0(0)
	)
clear internal and output-only tuples
	control = (
		offset = 0x0000(0)
		virtual_offset = 0x0000(0)
		section = 0x0(0)
		activeBank = 0x0(0)
		done = 0x0(0)
		error = 0x0(0)
	)
	CheckCache_fl = (
		forward_1 = 0x0(0)
	)
	local_state = (
		id = 0x0000(0)
	)
processing section setup in stage 1
-------------------------------------------------------------------
Section setup starting


	method move_to_section = done(0)

updated tuples:
	control = (
		offset = 0x0000(0)
		virtual_offset = 0x0000(0)
		section = 0x0(0)
		activeBank = 0x0(0)
		done = 0x1(1)
		error = 0x0(0)
	)
	CheckCache_fl = (
		forward_1 = 0x0(0)
	)
	hdr = (
		eth = (
		isValid = 0x1(1)
		dst = 0x000000000000(0)
		src = 0x000000000000(0)
		type = 0x0800(2048)
	)
		fec = (
		isValid = 0x0(0)
		traffic_class = 0x0(0)
		block_index = 0x00(0)
		packet_index = 0x00(0)
		original_type = 0x0000(0)
	)
		ipv4 = (
		isValid = 0x1(1)
		version = 0x4(4)
		ihl = 0x5(5)
		diffserv = 0x00(0)
		totallen = 0x006a(106)
		identification = 0x76e6(30438)
		flags = 0x2(2)
		fragoffset = 0x0000(0)
		ttl = 0x40(64)
		protocol = 0x11(17)
		hdrchecksum = 0xc59a(50586)
		srcAddr = 0x7f000001(2130706433)
		dstAddr = 0x7f000001(2130706433)
	)
		udp = (
		isValid = 0x1(1)
		sport = 0xa9d3(43475)
		dport = 0x2bcb(11211)
		len = 0x0056(86)
		chksum = 0xfe69(65129)
	)
	)
	ioports = (
		ingress_port = 0x0(0)
		egress_port = 0x0(0)
	)
	local_state = (
		id = 0x0000(0)
	)
Section setup finished
-------------------------------------------------------------------
final inout and output tuples:

Note: this engine's wrapper will clear the upper control tuple fields on output, except for the 'control.error' field.

	CheckCache_fl = (
		forward_1 = 0x0(0)
	)
	hdr = (
		eth = (
		isValid = 0x1(1)
		dst = 0x000000000000(0)
		src = 0x000000000000(0)
		type = 0x0800(2048)
	)
		fec = (
		isValid = 0x0(0)
		traffic_class = 0x0(0)
		block_index = 0x00(0)
		packet_index = 0x00(0)
		original_type = 0x0000(0)
	)
		ipv4 = (
		isValid = 0x1(1)
		version = 0x4(4)
		ihl = 0x5(5)
		diffserv = 0x00(0)
		totallen = 0x006a(106)
		identification = 0x76e6(30438)
		flags = 0x2(2)
		fragoffset = 0x0000(0)
		ttl = 0x40(64)
		protocol = 0x11(17)
		hdrchecksum = 0xc59a(50586)
		srcAddr = 0x7f000001(2130706433)
		dstAddr = 0x7f000001(2130706433)
	)
		udp = (
		isValid = 0x1(1)
		sport = 0xa9d3(43475)
		dport = 0x2bcb(11211)
		len = 0x0056(86)
		chksum = 0xfe69(65129)
	)
	)
	ioports = (
		ingress_port = 0x0(0)
		egress_port = 0x0(0)
	)
	local_state = (
		id = 0x0000(0)
	)
Exiting engine CheckCache_lvl
===================================================================
===================================================================
Entering engine CheckCache_lvl_0
input packet (0 bytes)
initial input and inout tuples:
	CheckCache_fl = (
		forward_1 = 0x0(0)
	)
	hdr = (
		eth = (
		isValid = 0x1(1)
		dst = 0x000000000000(0)
		src = 0x000000000000(0)
		type = 0x0800(2048)
	)
		fec = (
		isValid = 0x0(0)
		traffic_class = 0x0(0)
		block_index = 0x00(0)
		packet_index = 0x00(0)
		original_type = 0x0000(0)
	)
		ipv4 = (
		isValid = 0x1(1)
		version = 0x4(4)
		ihl = 0x5(5)
		diffserv = 0x00(0)
		totallen = 0x006a(106)
		identification = 0x76e6(30438)
		flags = 0x2(2)
		fragoffset = 0x0000(0)
		ttl = 0x40(64)
		protocol = 0x11(17)
		hdrchecksum = 0xc59a(50586)
		srcAddr = 0x7f000001(2130706433)
		dstAddr = 0x7f000001(2130706433)
	)
		udp = (
		isValid = 0x1(1)
		sport = 0xa9d3(43475)
		dport = 0x2bcb(11211)
		len = 0x0056(86)
		chksum = 0xfe69(65129)
	)
	)
	ioports = (
		ingress_port = 0x0(0)
		egress_port = 0x0(0)
	)
	local_state = (
		id = 0x0000(0)
	)
clear internal and output-only tuples
	control = (
		offset = 0x0000(0)
		virtual_offset = 0x0000(0)
		section = 0x0(0)
		activeBank = 0x0(0)
		done = 0x0(0)
		error = 0x0(0)
	)
	memcached_input = (
		stateful_valid = 0x0(0)
	)
processing section condition_sec_0 in stage 1
-------------------------------------------------------------------
Section condition_sec_0 starting

	method update (tuples)
		local_state.id = 0x0005(5)


	method move_to_section = condition_sec

updated tuples:
	control = (
		offset = 0x0000(0)
		virtual_offset = 0x0000(0)
		section = 0x2(2)
		activeBank = 0x0(0)
		done = 0x0(0)
		error = 0x0(0)
	)
	CheckCache_fl = (
		forward_1 = 0x0(0)
	)
	hdr = (
		eth = (
		isValid = 0x1(1)
		dst = 0x000000000000(0)
		src = 0x000000000000(0)
		type = 0x0800(2048)
	)
		fec = (
		isValid = 0x0(0)
		traffic_class = 0x0(0)
		block_index = 0x00(0)
		packet_index = 0x00(0)
		original_type = 0x0000(0)
	)
		ipv4 = (
		isValid = 0x1(1)
		version = 0x4(4)
		ihl = 0x5(5)
		diffserv = 0x00(0)
		totallen = 0x006a(106)
		identification = 0x76e6(30438)
		flags = 0x2(2)
		fragoffset = 0x0000(0)
		ttl = 0x40(64)
		protocol = 0x11(17)
		hdrchecksum = 0xc59a(50586)
		srcAddr = 0x7f000001(2130706433)
		dstAddr = 0x7f000001(2130706433)
	)
		udp = (
		isValid = 0x1(1)
		sport = 0xa9d3(43475)
		dport = 0x2bcb(11211)
		len = 0x0056(86)
		chksum = 0xfe69(65129)
	)
	)
	ioports = (
		ingress_port = 0x0(0)
		egress_port = 0x0(0)
	)
	local_state = (
		id = 0x0005(5)
	)
	memcached_input = (
		stateful_valid = 0x0(0)
	)
Section condition_sec_0 finished
-------------------------------------------------------------------
processing section condition_sec in stage 2
-------------------------------------------------------------------
Section condition_sec starting

	method update (tuples)
		local_state.id = 0x0005(5)


	method move_to_section = act_0_sec

updated tuples:
	control = (
		offset = 0x0000(0)
		virtual_offset = 0x0000(0)
		section = 0x1(1)
		activeBank = 0x0(0)
		done = 0x0(0)
		error = 0x0(0)
	)
	CheckCache_fl = (
		forward_1 = 0x0(0)
	)
	hdr = (
		eth = (
		isValid = 0x1(1)
		dst = 0x000000000000(0)
		src = 0x000000000000(0)
		type = 0x0800(2048)
	)
		fec = (
		isValid = 0x0(0)
		traffic_class = 0x0(0)
		block_index = 0x00(0)
		packet_index = 0x00(0)
		original_type = 0x0000(0)
	)
		ipv4 = (
		isValid = 0x1(1)
		version = 0x4(4)
		ihl = 0x5(5)
		diffserv = 0x00(0)
		totallen = 0x006a(106)
		identification = 0x76e6(30438)
		flags = 0x2(2)
		fragoffset = 0x0000(0)
		ttl = 0x40(64)
		protocol = 0x11(17)
		hdrchecksum = 0xc59a(50586)
		srcAddr = 0x7f000001(2130706433)
		dstAddr = 0x7f000001(2130706433)
	)
		udp = (
		isValid = 0x1(1)
		sport = 0xa9d3(43475)
		dport = 0x2bcb(11211)
		len = 0x0056(86)
		chksum = 0xfe69(65129)
	)
	)
	ioports = (
		ingress_port = 0x0(0)
		egress_port = 0x0(0)
	)
	local_state = (
		id = 0x0005(5)
	)
	memcached_input = (
		stateful_valid = 0x0(0)
	)
Section condition_sec finished
-------------------------------------------------------------------
processing section act_0_sec in stage 3
-------------------------------------------------------------------
Section act_0_sec starting

	method update (tuples)
		memcached_input.stateful_valid = 0x1(1)
		local_state.id = 0x0004(4)


	method move_to_section = local_end

updated tuples:
	control = (
		offset = 0x0000(0)
		virtual_offset = 0x0000(0)
		section = 0x4(4)
		activeBank = 0x0(0)
		done = 0x0(0)
		error = 0x0(0)
	)
	CheckCache_fl = (
		forward_1 = 0x0(0)
	)
	hdr = (
		eth = (
		isValid = 0x1(1)
		dst = 0x000000000000(0)
		src = 0x000000000000(0)
		type = 0x0800(2048)
	)
		fec = (
		isValid = 0x0(0)
		traffic_class = 0x0(0)
		block_index = 0x00(0)
		packet_index = 0x00(0)
		original_type = 0x0000(0)
	)
		ipv4 = (
		isValid = 0x1(1)
		version = 0x4(4)
		ihl = 0x5(5)
		diffserv = 0x00(0)
		totallen = 0x006a(106)
		identification = 0x76e6(30438)
		flags = 0x2(2)
		fragoffset = 0x0000(0)
		ttl = 0x40(64)
		protocol = 0x11(17)
		hdrchecksum = 0xc59a(50586)
		srcAddr = 0x7f000001(2130706433)
		dstAddr = 0x7f000001(2130706433)
	)
		udp = (
		isValid = 0x1(1)
		sport = 0xa9d3(43475)
		dport = 0x2bcb(11211)
		len = 0x0056(86)
		chksum = 0xfe69(65129)
	)
	)
	ioports = (
		ingress_port = 0x0(0)
		egress_port = 0x0(0)
	)
	local_state = (
		id = 0x0004(4)
	)
	memcached_input = (
		stateful_valid = 0x1(1)
	)
Section act_0_sec finished
-------------------------------------------------------------------
processing section local_end in stage 4
-------------------------------------------------------------------
Section local_end starting


	method move_to_section = done(0)

updated tuples:
	control = (
		offset = 0x0000(0)
		virtual_offset = 0x0000(0)
		section = 0x0(0)
		activeBank = 0x0(0)
		done = 0x1(1)
		error = 0x0(0)
	)
	CheckCache_fl = (
		forward_1 = 0x0(0)
	)
	hdr = (
		eth = (
		isValid = 0x1(1)
		dst = 0x000000000000(0)
		src = 0x000000000000(0)
		type = 0x0800(2048)
	)
		fec = (
		isValid = 0x0(0)
		traffic_class = 0x0(0)
		block_index = 0x00(0)
		packet_index = 0x00(0)
		original_type = 0x0000(0)
	)
		ipv4 = (
		isValid = 0x1(1)
		version = 0x4(4)
		ihl = 0x5(5)
		diffserv = 0x00(0)
		totallen = 0x006a(106)
		identification = 0x76e6(30438)
		flags = 0x2(2)
		fragoffset = 0x0000(0)
		ttl = 0x40(64)
		protocol = 0x11(17)
		hdrchecksum = 0xc59a(50586)
		srcAddr = 0x7f000001(2130706433)
		dstAddr = 0x7f000001(2130706433)
	)
		udp = (
		isValid = 0x1(1)
		sport = 0xa9d3(43475)
		dport = 0x2bcb(11211)
		len = 0x0056(86)
		chksum = 0xfe69(65129)
	)
	)
	ioports = (
		ingress_port = 0x0(0)
		egress_port = 0x0(0)
	)
	local_state = (
		id = 0x0004(4)
	)
	memcached_input = (
		stateful_valid = 0x1(1)
	)
Section local_end finished
-------------------------------------------------------------------
final inout and output tuples:

Note: this engine's wrapper will clear the upper control tuple fields on output, except for the 'control.error' field.

	CheckCache_fl = (
		forward_1 = 0x0(0)
	)
	hdr = (
		eth = (
		isValid = 0x1(1)
		dst = 0x000000000000(0)
		src = 0x000000000000(0)
		type = 0x0800(2048)
	)
		fec = (
		isValid = 0x0(0)
		traffic_class = 0x0(0)
		block_index = 0x00(0)
		packet_index = 0x00(0)
		original_type = 0x0000(0)
	)
		ipv4 = (
		isValid = 0x1(1)
		version = 0x4(4)
		ihl = 0x5(5)
		diffserv = 0x00(0)
		totallen = 0x006a(106)
		identification = 0x76e6(30438)
		flags = 0x2(2)
		fragoffset = 0x0000(0)
		ttl = 0x40(64)
		protocol = 0x11(17)
		hdrchecksum = 0xc59a(50586)
		srcAddr = 0x7f000001(2130706433)
		dstAddr = 0x7f000001(2130706433)
	)
		udp = (
		isValid = 0x1(1)
		sport = 0xa9d3(43475)
		dport = 0x2bcb(11211)
		len = 0x0056(86)
		chksum = 0xfe69(65129)
	)
	)
	ioports = (
		ingress_port = 0x0(0)
		egress_port = 0x0(0)
	)
	local_state = (
		id = 0x0004(4)
	)
	memcached_input = (
		stateful_valid = 0x1(1)
	)
Exiting engine CheckCache_lvl_0
===================================================================
===================================================================
Entering engine memcached_0
input packet (120 bytes)
 0x0000(0) : 00 00 00 00 00 00 00 00 00 00 00 00 08 00 45 00 
0x0010(16) : 00 6a 76 e6 40 00 40 11 c5 9a 7f 00 00 01 7f 00 
0x0020(32) : 00 01 a9 d3 2b cb 00 56 fe 69 00 07 00 00 00 01 
0x0030(48) : 01 00 67 65 74 20 11 10 10 10 10 10 10 10 49 4f 
0x0040(64) : 6a 53 2e 45 6d 4b 45 34 6d 4d 36 7a 6c 30 65 61 
0x0050(80) : 64 63 72 67 65 6e 34 68 77 6a 49 30 73 61 50 5a 
0x0060(96) : 30 4e 6f 6d 68 30 72 52 4e 78 50 36 79 31 67 5a 
0x0070(112) : 64 56 45 46 48 49 0d 0a 
initial input and inout tuples:
	control = (
		offset = 0x0000(0)
		virtual_offset = 0x0000(0)
		section = 0x0(0)
		activeBank = 0x0(0)
		done = 0x0(0)
		error = 0x0(0)
	)
	CheckCache_fl = (
		forward_1 = 0x0(0)
	)
	hdr = (
		eth = (
		isValid = 0x1(1)
		dst = 0x000000000000(0)
		src = 0x000000000000(0)
		type = 0x0800(2048)
	)
		fec = (
		isValid = 0x0(0)
		traffic_class = 0x0(0)
		block_index = 0x00(0)
		packet_index = 0x00(0)
		original_type = 0x0000(0)
	)
		ipv4 = (
		isValid = 0x1(1)
		version = 0x4(4)
		ihl = 0x5(5)
		diffserv = 0x00(0)
		totallen = 0x006a(106)
		identification = 0x76e6(30438)
		flags = 0x2(2)
		fragoffset = 0x0000(0)
		ttl = 0x40(64)
		protocol = 0x11(17)
		hdrchecksum = 0xc59a(50586)
		srcAddr = 0x7f000001(2130706433)
		dstAddr = 0x7f000001(2130706433)
	)
		udp = (
		isValid = 0x1(1)
		sport = 0xa9d3(43475)
		dport = 0x2bcb(11211)
		len = 0x0056(86)
		chksum = 0xfe69(65129)
	)
	)
	ioports = (
		ingress_port = 0x0(0)
		egress_port = 0x0(0)
	)
	local_state = (
		id = 0x0004(4)
	)
	Parser_extracts = (
		size = 0x00000150(336)
	)
	memcached_input = (
		stateful_valid = 0x1(1)
	)
clear internal and output-only tuples
	memcached_output = (
		forward = 0x0(0)
	)
Enter USER ENGINE FUNCTION
0
134235392
29967078819643409
14238832809862070016
468199414628438
18332183788253085697
72171279475544336
1157442765409241423
7661518266808616244
7876011222769886561
7233751214896067688
8604770510487769178
3480842077694095954
5654357527055394650
7230042419952684298
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<Inside MemCore<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<< 
The No. 7Packet
1
576
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<Inside MemCore<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<< 
===================================================================
Entering engine CheckCache_lvl_1
input packet (0 bytes)
initial input and inout tuples:
	CheckCache_fl = (
		forward_1 = 0x0(0)
	)
	hdr = (
		eth = (
		isValid = 0x1(1)
		dst = 0x000000000000(0)
		src = 0x000000000000(0)
		type = 0x0800(2048)
	)
		fec = (
		isValid = 0x0(0)
		traffic_class = 0x0(0)
		block_index = 0x00(0)
		packet_index = 0x00(0)
		original_type = 0x0000(0)
	)
		ipv4 = (
		isValid = 0x1(1)
		version = 0x4(4)
		ihl = 0x5(5)
		diffserv = 0x00(0)
		totallen = 0x047a(1146)
		identification = 0x76e6(30438)
		flags = 0x2(2)
		fragoffset = 0x0000(0)
		ttl = 0x40(64)
		protocol = 0x11(17)
		hdrchecksum = 0xc59a(50586)
		srcAddr = 0x7f000001(2130706433)
		dstAddr = 0x7f000001(2130706433)
	)
		udp = (
		isValid = 0x1(1)
		sport = 0x2bcb(11211)
		dport = 0xa9d3(43475)
		len = 0x0466(1126)
		chksum = 0xfe69(65129)
	)
	)
	ioports = (
		ingress_port = 0x0(0)
		egress_port = 0x0(0)
	)
	local_state = (
		id = 0x0004(4)
	)
	memcached_output = (
		forward = 0x0(0)
	)
clear internal and output-only tuples
	control = (
		offset = 0x0000(0)
		virtual_offset = 0x0000(0)
		section = 0x0(0)
		activeBank = 0x0(0)
		done = 0x0(0)
		error = 0x0(0)
	)
processing section local_start in stage 1
-------------------------------------------------------------------
Section local_start starting


	method move_to_section = memcached_sec

updated tuples:
	control = (
		offset = 0x0000(0)
		virtual_offset = 0x0000(0)
		section = 0x2(2)
		activeBank = 0x0(0)
		done = 0x0(0)
		error = 0x0(0)
	)
	CheckCache_fl = (
		forward_1 = 0x0(0)
	)
	hdr = (
		eth = (
		isValid = 0x1(1)
		dst = 0x000000000000(0)
		src = 0x000000000000(0)
		type = 0x0800(2048)
	)
		fec = (
		isValid = 0x0(0)
		traffic_class = 0x0(0)
		block_index = 0x00(0)
		packet_index = 0x00(0)
		original_type = 0x0000(0)
	)
		ipv4 = (
		isValid = 0x1(1)
		version = 0x4(4)
		ihl = 0x5(5)
		diffserv = 0x00(0)
		totallen = 0x047a(1146)
		identification = 0x76e6(30438)
		flags = 0x2(2)
		fragoffset = 0x0000(0)
		ttl = 0x40(64)
		protocol = 0x11(17)
		hdrchecksum = 0xc59a(50586)
		srcAddr = 0x7f000001(2130706433)
		dstAddr = 0x7f000001(2130706433)
	)
		udp = (
		isValid = 0x1(1)
		sport = 0x2bcb(11211)
		dport = 0xa9d3(43475)
		len = 0x0466(1126)
		chksum = 0xfe69(65129)
	)
	)
	ioports = (
		ingress_port = 0x0(0)
		egress_port = 0x0(0)
	)
	local_state = (
		id = 0x0004(4)
	)
	memcached_output = (
		forward = 0x0(0)
	)
Section local_start finished
-------------------------------------------------------------------
processing section memcached_sec in stage 2
-------------------------------------------------------------------
Section memcached_sec starting

	method update (tuples)
		CheckCache_fl.forward_1 = 0x0(0)


	method move_to_section = sink

updated tuples:
	control = (
		offset = 0x0000(0)
		virtual_offset = 0x0000(0)
		section = 0x3(3)
		activeBank = 0x0(0)
		done = 0x0(0)
		error = 0x0(0)
	)
	CheckCache_fl = (
		forward_1 = 0x0(0)
	)
	hdr = (
		eth = (
		isValid = 0x1(1)
		dst = 0x000000000000(0)
		src = 0x000000000000(0)
		type = 0x0800(2048)
	)
		fec = (
		isValid = 0x0(0)
		traffic_class = 0x0(0)
		block_index = 0x00(0)
		packet_index = 0x00(0)
		original_type = 0x0000(0)
	)
		ipv4 = (
		isValid = 0x1(1)
		version = 0x4(4)
		ihl = 0x5(5)
		diffserv = 0x00(0)
		totallen = 0x047a(1146)
		identification = 0x76e6(30438)
		flags = 0x2(2)
		fragoffset = 0x0000(0)
		ttl = 0x40(64)
		protocol = 0x11(17)
		hdrchecksum = 0xc59a(50586)
		srcAddr = 0x7f000001(2130706433)
		dstAddr = 0x7f000001(2130706433)
	)
		udp = (
		isValid = 0x1(1)
		sport = 0x2bcb(11211)
		dport = 0xa9d3(43475)
		len = 0x0466(1126)
		chksum = 0xfe69(65129)
	)
	)
	ioports = (
		ingress_port = 0x0(0)
		egress_port = 0x0(0)
	)
	local_state = (
		id = 0x0004(4)
	)
	memcached_output = (
		forward = 0x0(0)
	)
Section memcached_sec finished
-------------------------------------------------------------------
processing section sink in stage 3
-------------------------------------------------------------------
Section sink starting


	method move_to_section = done(0)

updated tuples:
	control = (
		offset = 0x0000(0)
		virtual_offset = 0x0000(0)
		section = 0x0(0)
		activeBank = 0x0(0)
		done = 0x1(1)
		error = 0x0(0)
	)
	CheckCache_fl = (
		forward_1 = 0x0(0)
	)
	hdr = (
		eth = (
		isValid = 0x1(1)
		dst = 0x000000000000(0)
		src = 0x000000000000(0)
		type = 0x0800(2048)
	)
		fec = (
		isValid = 0x0(0)
		traffic_class = 0x0(0)
		block_index = 0x00(0)
		packet_index = 0x00(0)
		original_type = 0x0000(0)
	)
		ipv4 = (
		isValid = 0x1(1)
		version = 0x4(4)
		ihl = 0x5(5)
		diffserv = 0x00(0)
		totallen = 0x047a(1146)
		identification = 0x76e6(30438)
		flags = 0x2(2)
		fragoffset = 0x0000(0)
		ttl = 0x40(64)
		protocol = 0x11(17)
		hdrchecksum = 0xc59a(50586)
		srcAddr = 0x7f000001(2130706433)
		dstAddr = 0x7f000001(2130706433)
	)
		udp = (
		isValid = 0x1(1)
		sport = 0x2bcb(11211)
		dport = 0xa9d3(43475)
		len = 0x0466(1126)
		chksum = 0xfe69(65129)
	)
	)
	ioports = (
		ingress_port = 0x0(0)
		egress_port = 0x0(0)
	)
	local_state = (
		id = 0x0004(4)
	)
	memcached_output = (
		forward = 0x0(0)
	)
Section sink finished
-------------------------------------------------------------------
final inout and output tuples:

Note: this engine's wrapper will clear the upper control tuple fields on output, except for the 'control.error' field.

	hdr = (
		eth = (
		isValid = 0x1(1)
		dst = 0x000000000000(0)
		src = 0x000000000000(0)
		type = 0x0800(2048)
	)
		fec = (
		isValid = 0x0(0)
		traffic_class = 0x0(0)
		block_index = 0x00(0)
		packet_index = 0x00(0)
		original_type = 0x0000(0)
	)
		ipv4 = (
		isValid = 0x1(1)
		version = 0x4(4)
		ihl = 0x5(5)
		diffserv = 0x00(0)
		totallen = 0x047a(1146)
		identification = 0x76e6(30438)
		flags = 0x2(2)
		fragoffset = 0x0000(0)
		ttl = 0x40(64)
		protocol = 0x11(17)
		hdrchecksum = 0xc59a(50586)
		srcAddr = 0x7f000001(2130706433)
		dstAddr = 0x7f000001(2130706433)
	)
		udp = (
		isValid = 0x1(1)
		sport = 0x2bcb(11211)
		dport = 0xa9d3(43475)
		len = 0x0466(1126)
		chksum = 0xfe69(65129)
	)
	)
	ioports = (
		ingress_port = 0x0(0)
		egress_port = 0x0(0)
	)
Exiting engine CheckCache_lvl_1
===================================================================
===================================================================
Entering engine Deparser
input packet (1160 bytes)
 0x0000(0) : 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 
0x0010(16) : 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 
0x0020(32) : 00 00 00 00 00 00 00 00 00 00 00 07 00 00 00 01 
0x0030(48) : 00 00 56 41 4c 55 45 20 11 10 10 10 10 10 10 10 
0x0040(64) : 49 4f 6a 53 2e 45 6d 4b 45 34 6d 4d 36 7a 6c 30 
0x0050(80) : 65 61 64 63 72 67 65 6e 34 68 77 6a 49 30 73 61 
0x0060(96) : 50 5a 30 4e 6f 6d 68 30 72 52 4e 78 50 36 79 31 
0x0070(112) : 67 5a 64 56 45 46 48 49 20 30 20 31 30 32 34 0d 
0x0080(128) : 0a 49 4f 6a 53 2e 45 6d 4b 45 34 6d 4d 36 7a 6c 
0x0090(144) : 30 65 61 64 63 72 67 65 6e 34 68 77 6a 49 30 73 
0x00a0(160) : 61 50 5a 30 4e 6f 6d 68 30 72 52 4e 78 50 36 79 
0x00b0(176) : 31 67 5a 64 56 45 46 48 49 78 42 2d 44 42 72 6e 
0x00c0(192) : 61 50 6f 78 42 59 64 42 4e 32 59 4a 52 66 46 53 
0x00d0(208) : 4a 6f 33 70 30 4a 34 49 45 46 49 52 51 37 43 2d 
0x00e0(224) : 57 2e 77 68 58 58 74 75 61 50 42 2d 32 51 53 4d 
0x00f0(240) : 44 56 39 44 6f 44 57 30 53 6f 52 73 76 65 72 51 
0x0100(256) : 63 6d 35 37 48 79 30 72 4d 42 72 4f 63 48 6b 70 
0x0110(272) : 6d 74 30 5a 34 57 5a 57 49 2d 4e 43 64 43 63 44 
0x0120(288) : 79 68 4c 45 65 4c 33 2e 57 75 4d 36 39 35 76 77 
0x0130(304) : 79 77 54 31 51 30 58 6a 2d 75 76 63 35 56 71 31 
0x0140(320) : 41 39 46 6f 55 4a 6d 2e 42 37 35 4c 43 2e 46 38 
0x0150(336) : 75 69 39 4a 69 68 30 69 5a 76 49 65 4f 36 67 59 
0x0160(352) : 46 76 4c 6a 43 35 69 4f 43 6e 6a 4f 6c 79 58 65 
0x0170(368) : 65 67 78 4b 4c 78 30 76 71 4a 58 43 50 42 6b 66 
0x0180(384) : 35 33 4d 48 39 32 66 4c 70 4d 6b 5a 49 46 42 77 
0x0190(400) : 76 36 46 46 31 46 38 72 59 66 31 79 72 6c 62 77 
0x01a0(416) : 70 78 42 79 2e 72 48 6e 42 2d 4b 55 45 56 4f 38 
0x01b0(432) : 62 64 4e 63 74 56 52 50 38 53 4c 7a 43 77 74 2d 
0x01c0(448) : 73 33 78 71 75 43 62 33 43 77 58 51 50 77 59 2d 
0x01d0(464) : 58 76 62 4f 4f 31 6f 58 54 37 55 66 32 4d 65 75 
0x01e0(480) : 50 5a 69 48 6d 48 4b 79 42 73 4d 62 6d 76 61 48 
0x01f0(496) : 6f 39 67 42 41 53 69 65 5a 41 48 62 57 77 54 76 
0x0200(512) : 54 39 41 44 52 56 39 63 4c 57 42 35 50 6c 4d 42 
0x0210(528) : 76 30 4d 33 53 32 68 30 44 7a 62 6a 74 33 64 4b 
0x0220(544) : 43 6e 59 64 47 68 45 62 42 50 67 61 39 31 6d 32 
0x0230(560) : 31 36 35 55 39 6e 55 4d 6b 33 33 62 36 67 76 4a 
0x0240(576) : 53 52 77 69 37 38 49 49 59 79 74 68 7a 64 6a 2d 
0x0250(592) : 6a 6f 54 73 5a 78 43 48 2e 47 73 35 77 6d 4f 4d 
0x0260(608) : 42 49 33 49 52 4c 62 7a 48 53 65 46 33 4c 45 6d 
0x0270(624) : 37 68 64 68 63 70 79 61 33 70 66 2e 5a 31 4b 6b 
0x0280(640) : 4b 4e 31 6c 69 63 69 2e 32 4b 44 35 66 52 72 6d 
0x0290(656) : 36 53 52 69 47 4f 47 4a 42 77 48 6b 78 63 53 46 
0x02a0(672) : 7a 54 2e 67 33 67 65 35 2e 72 41 64 47 30 4f 4d 
0x02b0(688) : 53 70 32 69 42 49 30 4d 43 48 34 38 74 58 4e 72 
0x02c0(704) : 2e 4d 56 32 30 37 37 2d 79 49 63 43 49 2e 59 6b 
0x02d0(720) : 6f 61 52 7a 73 52 4b 33 69 4f 42 61 76 59 50 75 
0x02e0(736) : 75 75 77 76 2d 31 75 78 4a 55 37 62 54 66 4b 46 
0x02f0(752) : 44 6c 43 33 41 57 36 73 76 48 51 6f 71 70 67 69 
0x0300(768) : 68 61 62 67 63 54 62 76 79 69 56 50 4c 70 65 59 
0x0310(784) : 59 71 63 69 4c 69 59 45 2e 7a 30 6f 6d 68 55 53 
0x0320(800) : 46 34 36 72 58 69 6c 54 4f 45 73 6b 31 55 47 5a 
0x0330(816) : 4a 73 46 65 5a 6e 73 58 6b 73 4a 56 58 6e 78 6e 
0x0340(832) : 72 31 63 4e 6a 4c 71 36 5a 68 71 61 39 34 37 53 
0x0350(848) : 78 4d 34 55 38 77 2d 73 6e 49 4c 49 33 47 33 76 
0x0360(864) : 49 67 47 2d 2d 34 35 5a 6c 76 37 76 2e 46 4c 76 
0x0370(880) : 62 51 4e 6a 4b 4d 61 35 65 76 4f 68 41 52 61 53 
0x0380(896) : 35 71 52 35 76 58 65 65 51 6c 58 4f 2e 74 48 61 
0x0390(912) : 48 65 48 62 2e 72 68 63 6c 33 49 76 55 73 4c 61 
0x03a0(928) : 68 6d 66 61 48 48 43 69 30 6b 34 2d 62 4d 5a 73 
0x03b0(944) : 2e 71 52 7a 67 36 5a 50 39 72 49 65 69 64 43 4e 
0x03c0(960) : 4e 72 78 66 36 37 4c 36 72 50 35 51 6c 65 47 6b 
0x03d0(976) : 54 69 68 37 6f 45 57 79 34 6f 61 6d 50 6d 37 6d 
0x03e0(992) : 62 32 50 68 39 6b 6e 2d 38 74 50 74 56 67 62 79 
0x03f0(1008) : 4d 47 33 38 56 5a 34 5a 4c 65 4a 6b 4f 51 56 7a 
0x0400(1024) : 53 75 65 62 64 51 61 6c 48 2e 63 6d 65 43 6a 2e 
0x0410(1040) : 53 6d 36 78 4b 42 55 66 70 6e 4f 43 42 74 39 64 
0x0420(1056) : 6c 6f 44 4d 43 6e 35 54 6c 69 44 4e 75 77 4c 4b 
0x0430(1072) : 68 53 47 2d 64 6b 65 51 57 30 63 68 74 6d 4a 64 
0x0440(1088) : 59 57 7a 6b 48 33 42 31 6c 4f 4f 64 4a 6b 78 2e 
0x0450(1104) : 41 42 7a 6e 77 62 42 51 63 6f 35 54 59 4f 34 34 
0x0460(1120) : 75 32 6f 41 35 7a 42 71 4c 5a 52 65 48 4d 63 52 
0x0470(1136) : 59 5a 43 53 39 4f 73 6c 41 78 43 69 4b 48 6d 43 
0x0480(1152) : 4a 0d 0a 45 4e 44 0d 0a 
initial input and inout tuples:
	control = (
		offset = 0x0000(0)
		virtual_offset = 0x0000(0)
		section = 0x0(0)
		activeBank = 0x0(0)
		done = 0x0(0)
		error = 0x0(0)
	)
	hdr = (
		eth = (
		isValid = 0x1(1)
		dst = 0x000000000000(0)
		src = 0x000000000000(0)
		type = 0x0800(2048)
	)
		fec = (
		isValid = 0x0(0)
		traffic_class = 0x0(0)
		block_index = 0x00(0)
		packet_index = 0x00(0)
		original_type = 0x0000(0)
	)
		ipv4 = (
		isValid = 0x1(1)
		version = 0x4(4)
		ihl = 0x5(5)
		diffserv = 0x00(0)
		totallen = 0x047a(1146)
		identification = 0x76e6(30438)
		flags = 0x2(2)
		fragoffset = 0x0000(0)
		ttl = 0x40(64)
		protocol = 0x11(17)
		hdrchecksum = 0xc59a(50586)
		srcAddr = 0x7f000001(2130706433)
		dstAddr = 0x7f000001(2130706433)
	)
		udp = (
		isValid = 0x1(1)
		sport = 0x2bcb(11211)
		dport = 0xa9d3(43475)
		len = 0x0466(1126)
		chksum = 0xfe69(65129)
	)
	)
	Deparser_extracts = (
		size = 0x00000150(336)
	)
clear internal and output-only tuples
processing section extract_headers_sec in stage 1
-------------------------------------------------------------------
Section extract_headers_sec starting


	method remove
	removing 42 bytes at byte 0:
 0x0000(0) : 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 
0x0010(16) : 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 
0x0020(32) : 00 00 00 00 00 00 00 00 00 00 
	method move_to_section = act_sec

updated tuples:
	control = (
		offset = 0x0000(0)
		virtual_offset = 0x0150(336)
		section = 0x1(1)
		activeBank = 0x0(0)
		done = 0x0(0)
		error = 0x0(0)
	)
	hdr = (
		eth = (
		isValid = 0x1(1)
		dst = 0x000000000000(0)
		src = 0x000000000000(0)
		type = 0x0800(2048)
	)
		fec = (
		isValid = 0x0(0)
		traffic_class = 0x0(0)
		block_index = 0x00(0)
		packet_index = 0x00(0)
		original_type = 0x0000(0)
	)
		ipv4 = (
		isValid = 0x1(1)
		version = 0x4(4)
		ihl = 0x5(5)
		diffserv = 0x00(0)
		totallen = 0x047a(1146)
		identification = 0x76e6(30438)
		flags = 0x2(2)
		fragoffset = 0x0000(0)
		ttl = 0x40(64)
		protocol = 0x11(17)
		hdrchecksum = 0xc59a(50586)
		srcAddr = 0x7f000001(2130706433)
		dstAddr = 0x7f000001(2130706433)
	)
		udp = (
		isValid = 0x1(1)
		sport = 0x2bcb(11211)
		dport = 0xa9d3(43475)
		len = 0x0466(1126)
		chksum = 0xfe69(65129)
	)
	)
	Deparser_extracts = (
		size = 0x00000150(336)
	)
Section extract_headers_sec finished
-------------------------------------------------------------------
processing section act_sec in stage 2
-------------------------------------------------------------------
Section act_sec starting


	method move_to_section = emit_3

updated tuples:
	control = (
		offset = 0x0000(0)
		virtual_offset = 0x0150(336)
		section = 0x5(5)
		activeBank = 0x0(0)
		done = 0x0(0)
		error = 0x0(0)
	)
	hdr = (
		eth = (
		isValid = 0x1(1)
		dst = 0x000000000000(0)
		src = 0x000000000000(0)
		type = 0x0800(2048)
	)
		fec = (
		isValid = 0x0(0)
		traffic_class = 0x0(0)
		block_index = 0x00(0)
		packet_index = 0x00(0)
		original_type = 0x0000(0)
	)
		ipv4 = (
		isValid = 0x1(1)
		version = 0x4(4)
		ihl = 0x5(5)
		diffserv = 0x00(0)
		totallen = 0x047a(1146)
		identification = 0x76e6(30438)
		flags = 0x2(2)
		fragoffset = 0x0000(0)
		ttl = 0x40(64)
		protocol = 0x11(17)
		hdrchecksum = 0xc59a(50586)
		srcAddr = 0x7f000001(2130706433)
		dstAddr = 0x7f000001(2130706433)
	)
		udp = (
		isValid = 0x1(1)
		sport = 0x2bcb(11211)
		dport = 0xa9d3(43475)
		len = 0x0466(1126)
		chksum = 0xfe69(65129)
	)
	)
	Deparser_extracts = (
		size = 0x00000150(336)
	)
Section act_sec finished
-------------------------------------------------------------------
processing section emit_3 in stage 3
-------------------------------------------------------------------
Section emit_3 starting

	method update (tuples)


	method update (packet)
		 dst = 0x000000000000(0)
		 src = 0x000000000000(0)
		 type = 0x0800(2048)

	method insert
	inserting 14 bytes at byte 0:
 0x0000(0) : 00 00 00 00 00 00 00 00 00 00 00 00 08 00 
	method move_to_section = emit_2

updated tuples:
	control = (
		offset = 0x0070(112)
		virtual_offset = 0x0150(336)
		section = 0x4(4)
		activeBank = 0x0(0)
		done = 0x0(0)
		error = 0x0(0)
	)
	hdr = (
		eth = (
		isValid = 0x1(1)
		dst = 0x000000000000(0)
		src = 0x000000000000(0)
		type = 0x0800(2048)
	)
		fec = (
		isValid = 0x0(0)
		traffic_class = 0x0(0)
		block_index = 0x00(0)
		packet_index = 0x00(0)
		original_type = 0x0000(0)
	)
		ipv4 = (
		isValid = 0x1(1)
		version = 0x4(4)
		ihl = 0x5(5)
		diffserv = 0x00(0)
		totallen = 0x047a(1146)
		identification = 0x76e6(30438)
		flags = 0x2(2)
		fragoffset = 0x0000(0)
		ttl = 0x40(64)
		protocol = 0x11(17)
		hdrchecksum = 0xc59a(50586)
		srcAddr = 0x7f000001(2130706433)
		dstAddr = 0x7f000001(2130706433)
	)
		udp = (
		isValid = 0x1(1)
		sport = 0x2bcb(11211)
		dport = 0xa9d3(43475)
		len = 0x0466(1126)
		chksum = 0xfe69(65129)
	)
	)
	Deparser_extracts = (
		size = 0x00000150(336)
	)
Section emit_3 finished
-------------------------------------------------------------------
processing section emit_2 in stage 4
-------------------------------------------------------------------
Section emit_2 starting

	method update (tuples)


	method update (packet)
		 traffic_class = 0x0(0)
		 block_index = 0x00(0)
		 packet_index = 0x00(0)
		 original_type = 0x0000(0)

	method insert
	inserting 0 bytes at byte 14:
 0x0000(0) :                                           
	method move_to_section = emit_1

updated tuples:
	control = (
		offset = 0x0070(112)
		virtual_offset = 0x0150(336)
		section = 0x3(3)
		activeBank = 0x0(0)
		done = 0x0(0)
		error = 0x0(0)
	)
	hdr = (
		eth = (
		isValid = 0x1(1)
		dst = 0x000000000000(0)
		src = 0x000000000000(0)
		type = 0x0800(2048)
	)
		fec = (
		isValid = 0x0(0)
		traffic_class = 0x0(0)
		block_index = 0x00(0)
		packet_index = 0x00(0)
		original_type = 0x0000(0)
	)
		ipv4 = (
		isValid = 0x1(1)
		version = 0x4(4)
		ihl = 0x5(5)
		diffserv = 0x00(0)
		totallen = 0x047a(1146)
		identification = 0x76e6(30438)
		flags = 0x2(2)
		fragoffset = 0x0000(0)
		ttl = 0x40(64)
		protocol = 0x11(17)
		hdrchecksum = 0xc59a(50586)
		srcAddr = 0x7f000001(2130706433)
		dstAddr = 0x7f000001(2130706433)
	)
		udp = (
		isValid = 0x1(1)
		sport = 0x2bcb(11211)
		dport = 0xa9d3(43475)
		len = 0x0466(1126)
		chksum = 0xfe69(65129)
	)
	)
	Deparser_extracts = (
		size = 0x00000150(336)
	)
Section emit_2 finished
-------------------------------------------------------------------
processing section emit_1 in stage 5
-------------------------------------------------------------------
Section emit_1 starting

	method update (tuples)


	method update (packet)
		 version = 0x4(4)
		 ihl = 0x5(5)
		 diffserv = 0x00(0)
		 totallen = 0x047a(1146)
		 identification = 0x76e6(30438)
		 flags = 0x2(2)
		 fragoffset = 0x0000(0)
		 ttl = 0x40(64)
		 protocol = 0x11(17)
		 hdrchecksum = 0xc59a(50586)
		 srcAddr = 0x7f000001(2130706433)
		 dstAddr = 0x7f000001(2130706433)

	method insert
	inserting 20 bytes at byte 14:
 0x0000(0) :                                           45 00 
0x0010(16) : 04 7a 76 e6 40 00 40 11 c5 9a 7f 00 00 01 7f 00 
0x0020(32) : 00 01 
	method move_to_section = emit_0

updated tuples:
	control = (
		offset = 0x0110(272)
		virtual_offset = 0x0150(336)
		section = 0x2(2)
		activeBank = 0x0(0)
		done = 0x0(0)
		error = 0x0(0)
	)
	hdr = (
		eth = (
		isValid = 0x1(1)
		dst = 0x000000000000(0)
		src = 0x000000000000(0)
		type = 0x0800(2048)
	)
		fec = (
		isValid = 0x0(0)
		traffic_class = 0x0(0)
		block_index = 0x00(0)
		packet_index = 0x00(0)
		original_type = 0x0000(0)
	)
		ipv4 = (
		isValid = 0x1(1)
		version = 0x4(4)
		ihl = 0x5(5)
		diffserv = 0x00(0)
		totallen = 0x047a(1146)
		identification = 0x76e6(30438)
		flags = 0x2(2)
		fragoffset = 0x0000(0)
		ttl = 0x40(64)
		protocol = 0x11(17)
		hdrchecksum = 0xc59a(50586)
		srcAddr = 0x7f000001(2130706433)
		dstAddr = 0x7f000001(2130706433)
	)
		udp = (
		isValid = 0x1(1)
		sport = 0x2bcb(11211)
		dport = 0xa9d3(43475)
		len = 0x0466(1126)
		chksum = 0xfe69(65129)
	)
	)
	Deparser_extracts = (
		size = 0x00000150(336)
	)
Section emit_1 finished
-------------------------------------------------------------------
processing section emit_0 in stage 6
-------------------------------------------------------------------
Section emit_0 starting

	method update (tuples)


	method update (packet)
		 sport = 0x2bcb(11211)
		 dport = 0xa9d3(43475)
		 len = 0x0466(1126)
		 chksum = 0xfe69(65129)

	method insert
	inserting 8 bytes at byte 34:
0x0020(32) :       2b cb a9 d3 04 66 fe 69 
	method move_to_section = done(0)

updated tuples:
	control = (
		offset = 0x0150(336)
		virtual_offset = 0x0150(336)
		section = 0x0(0)
		activeBank = 0x0(0)
		done = 0x1(1)
		error = 0x0(0)
	)
	hdr = (
		eth = (
		isValid = 0x1(1)
		dst = 0x000000000000(0)
		src = 0x000000000000(0)
		type = 0x0800(2048)
	)
		fec = (
		isValid = 0x0(0)
		traffic_class = 0x0(0)
		block_index = 0x00(0)
		packet_index = 0x00(0)
		original_type = 0x0000(0)
	)
		ipv4 = (
		isValid = 0x1(1)
		version = 0x4(4)
		ihl = 0x5(5)
		diffserv = 0x00(0)
		totallen = 0x047a(1146)
		identification = 0x76e6(30438)
		flags = 0x2(2)
		fragoffset = 0x0000(0)
		ttl = 0x40(64)
		protocol = 0x11(17)
		hdrchecksum = 0xc59a(50586)
		srcAddr = 0x7f000001(2130706433)
		dstAddr = 0x7f000001(2130706433)
	)
		udp = (
		isValid = 0x1(1)
		sport = 0x2bcb(11211)
		dport = 0xa9d3(43475)
		len = 0x0466(1126)
		chksum = 0xfe69(65129)
	)
	)
	Deparser_extracts = (
		size = 0x00000150(336)
	)
Section emit_0 finished
-------------------------------------------------------------------
final inout and output tuples:

Note: this engine's wrapper will clear the upper control tuple fields on output, except for the 'control.error' field.

	control = (
		offset = 0x0000(0)
		virtual_offset = 0x0000(0)
		section = 0x0(0)
		activeBank = 0x0(0)
		done = 0x0(0)
		error = 0x0(0)
	)
output packet (1160 bytes)
 0x0000(0) : 00 00 00 00 00 00 00 00 00 00 00 00 08 00 45 00 
0x0010(16) : 04 7a 76 e6 40 00 40 11 c5 9a 7f 00 00 01 7f 00 
0x0020(32) : 00 01 2b cb a9 d3 04 66 fe 69 00 07 00 00 00 01 
0x0030(48) : 00 00 56 41 4c 55 45 20 11 10 10 10 10 10 10 10 
0x0040(64) : 49 4f 6a 53 2e 45 6d 4b 45 34 6d 4d 36 7a 6c 30 
0x0050(80) : 65 61 64 63 72 67 65 6e 34 68 77 6a 49 30 73 61 
0x0060(96) : 50 5a 30 4e 6f 6d 68 30 72 52 4e 78 50 36 79 31 
0x0070(112) : 67 5a 64 56 45 46 48 49 20 30 20 31 30 32 34 0d 
0x0080(128) : 0a 49 4f 6a 53 2e 45 6d 4b 45 34 6d 4d 36 7a 6c 
0x0090(144) : 30 65 61 64 63 72 67 65 6e 34 68 77 6a 49 30 73 
0x00a0(160) : 61 50 5a 30 4e 6f 6d 68 30 72 52 4e 78 50 36 79 
0x00b0(176) : 31 67 5a 64 56 45 46 48 49 78 42 2d 44 42 72 6e 
0x00c0(192) : 61 50 6f 78 42 59 64 42 4e 32 59 4a 52 66 46 53 
0x00d0(208) : 4a 6f 33 70 30 4a 34 49 45 46 49 52 51 37 43 2d 
0x00e0(224) : 57 2e 77 68 58 58 74 75 61 50 42 2d 32 51 53 4d 
0x00f0(240) : 44 56 39 44 6f 44 57 30 53 6f 52 73 76 65 72 51 
0x0100(256) : 63 6d 35 37 48 79 30 72 4d 42 72 4f 63 48 6b 70 
0x0110(272) : 6d 74 30 5a 34 57 5a 57 49 2d 4e 43 64 43 63 44 
0x0120(288) : 79 68 4c 45 65 4c 33 2e 57 75 4d 36 39 35 76 77 
0x0130(304) : 79 77 54 31 51 30 58 6a 2d 75 76 63 35 56 71 31 
0x0140(320) : 41 39 46 6f 55 4a 6d 2e 42 37 35 4c 43 2e 46 38 
0x0150(336) : 75 69 39 4a 69 68 30 69 5a 76 49 65 4f 36 67 59 
0x0160(352) : 46 76 4c 6a 43 35 69 4f 43 6e 6a 4f 6c 79 58 65 
0x0170(368) : 65 67 78 4b 4c 78 30 76 71 4a 58 43 50 42 6b 66 
0x0180(384) : 35 33 4d 48 39 32 66 4c 70 4d 6b 5a 49 46 42 77 
0x0190(400) : 76 36 46 46 31 46 38 72 59 66 31 79 72 6c 62 77 
0x01a0(416) : 70 78 42 79 2e 72 48 6e 42 2d 4b 55 45 56 4f 38 
0x01b0(432) : 62 64 4e 63 74 56 52 50 38 53 4c 7a 43 77 74 2d 
0x01c0(448) : 73 33 78 71 75 43 62 33 43 77 58 51 50 77 59 2d 
0x01d0(464) : 58 76 62 4f 4f 31 6f 58 54 37 55 66 32 4d 65 75 
0x01e0(480) : 50 5a 69 48 6d 48 4b 79 42 73 4d 62 6d 76 61 48 
0x01f0(496) : 6f 39 67 42 41 53 69 65 5a 41 48 62 57 77 54 76 
0x0200(512) : 54 39 41 44 52 56 39 63 4c 57 42 35 50 6c 4d 42 
0x0210(528) : 76 30 4d 33 53 32 68 30 44 7a 62 6a 74 33 64 4b 
0x0220(544) : 43 6e 59 64 47 68 45 62 42 50 67 61 39 31 6d 32 
0x0230(560) : 31 36 35 55 39 6e 55 4d 6b 33 33 62 36 67 76 4a 
0x0240(576) : 53 52 77 69 37 38 49 49 59 79 74 68 7a 64 6a 2d 
0x0250(592) : 6a 6f 54 73 5a 78 43 48 2e 47 73 35 77 6d 4f 4d 
0x0260(608) : 42 49 33 49 52 4c 62 7a 48 53 65 46 33 4c 45 6d 
0x0270(624) : 37 68 64 68 63 70 79 61 33 70 66 2e 5a 31 4b 6b 
0x0280(640) : 4b 4e 31 6c 69 63 69 2e 32 4b 44 35 66 52 72 6d 
0x0290(656) : 36 53 52 69 47 4f 47 4a 42 77 48 6b 78 63 53 46 
0x02a0(672) : 7a 54 2e 67 33 67 65 35 2e 72 41 64 47 30 4f 4d 
0x02b0(688) : 53 70 32 69 42 49 30 4d 43 48 34 38 74 58 4e 72 
0x02c0(704) : 2e 4d 56 32 30 37 37 2d 79 49 63 43 49 2e 59 6b 
0x02d0(720) : 6f 61 52 7a 73 52 4b 33 69 4f 42 61 76 59 50 75 
0x02e0(736) : 75 75 77 76 2d 31 75 78 4a 55 37 62 54 66 4b 46 
0x02f0(752) : 44 6c 43 33 41 57 36 73 76 48 51 6f 71 70 67 69 
0x0300(768) : 68 61 62 67 63 54 62 76 79 69 56 50 4c 70 65 59 
0x0310(784) : 59 71 63 69 4c 69 59 45 2e 7a 30 6f 6d 68 55 53 
0x0320(800) : 46 34 36 72 58 69 6c 54 4f 45 73 6b 31 55 47 5a 
0x0330(816) : 4a 73 46 65 5a 6e 73 58 6b 73 4a 56 58 6e 78 6e 
0x0340(832) : 72 31 63 4e 6a 4c 71 36 5a 68 71 61 39 34 37 53 
0x0350(848) : 78 4d 34 55 38 77 2d 73 6e 49 4c 49 33 47 33 76 
0x0360(864) : 49 67 47 2d 2d 34 35 5a 6c 76 37 76 2e 46 4c 76 
0x0370(880) : 62 51 4e 6a 4b 4d 61 35 65 76 4f 68 41 52 61 53 
0x0380(896) : 35 71 52 35 76 58 65 65 51 6c 58 4f 2e 74 48 61 
0x0390(912) : 48 65 48 62 2e 72 68 63 6c 33 49 76 55 73 4c 61 
0x03a0(928) : 68 6d 66 61 48 48 43 69 30 6b 34 2d 62 4d 5a 73 
0x03b0(944) : 2e 71 52 7a 67 36 5a 50 39 72 49 65 69 64 43 4e 
0x03c0(960) : 4e 72 78 66 36 37 4c 36 72 50 35 51 6c 65 47 6b 
0x03d0(976) : 54 69 68 37 6f 45 57 79 34 6f 61 6d 50 6d 37 6d 
0x03e0(992) : 62 32 50 68 39 6b 6e 2d 38 74 50 74 56 67 62 79 
0x03f0(1008) : 4d 47 33 38 56 5a 34 5a 4c 65 4a 6b 4f 51 56 7a 
0x0400(1024) : 53 75 65 62 64 51 61 6c 48 2e 63 6d 65 43 6a 2e 
0x0410(1040) : 53 6d 36 78 4b 42 55 66 70 6e 4f 43 42 74 39 64 
0x0420(1056) : 6c 6f 44 4d 43 6e 35 54 6c 69 44 4e 75 77 4c 4b 
0x0430(1072) : 68 53 47 2d 64 6b 65 51 57 30 63 68 74 6d 4a 64 
0x0440(1088) : 59 57 7a 6b 48 33 42 31 6c 4f 4f 64 4a 6b 78 2e 
0x0450(1104) : 41 42 7a 6e 77 62 42 51 63 6f 35 54 59 4f 34 34 
0x0460(1120) : 75 32 6f 41 35 7a 42 71 4c 5a 52 65 48 4d 63 52 
0x0470(1136) : 59 5a 43 53 39 4f 73 6c 41 78 43 69 4b 48 6d 43 
0x0480(1152) : 4a 0d 0a 45 4e 44 0d 0a 
Exiting engine Deparser
===================================================================
final inout and output tuples:
	ioports = (
		ingress_port = 0x0(0)
		egress_port = 0x0(0)
	)
output packet (1160 bytes)
 0x0000(0) : 00 00 00 00 00 00 00 00 00 00 00 00 08 00 45 00 
0x0010(16) : 04 7a 76 e6 40 00 40 11 c5 9a 7f 00 00 01 7f 00 
0x0020(32) : 00 01 2b cb a9 d3 04 66 fe 69 00 07 00 00 00 01 
0x0030(48) : 00 00 56 41 4c 55 45 20 11 10 10 10 10 10 10 10 
0x0040(64) : 49 4f 6a 53 2e 45 6d 4b 45 34 6d 4d 36 7a 6c 30 
0x0050(80) : 65 61 64 63 72 67 65 6e 34 68 77 6a 49 30 73 61 
0x0060(96) : 50 5a 30 4e 6f 6d 68 30 72 52 4e 78 50 36 79 31 
0x0070(112) : 67 5a 64 56 45 46 48 49 20 30 20 31 30 32 34 0d 
0x0080(128) : 0a 49 4f 6a 53 2e 45 6d 4b 45 34 6d 4d 36 7a 6c 
0x0090(144) : 30 65 61 64 63 72 67 65 6e 34 68 77 6a 49 30 73 
0x00a0(160) : 61 50 5a 30 4e 6f 6d 68 30 72 52 4e 78 50 36 79 
0x00b0(176) : 31 67 5a 64 56 45 46 48 49 78 42 2d 44 42 72 6e 
0x00c0(192) : 61 50 6f 78 42 59 64 42 4e 32 59 4a 52 66 46 53 
0x00d0(208) : 4a 6f 33 70 30 4a 34 49 45 46 49 52 51 37 43 2d 
0x00e0(224) : 57 2e 77 68 58 58 74 75 61 50 42 2d 32 51 53 4d 
0x00f0(240) : 44 56 39 44 6f 44 57 30 53 6f 52 73 76 65 72 51 
0x0100(256) : 63 6d 35 37 48 79 30 72 4d 42 72 4f 63 48 6b 70 
0x0110(272) : 6d 74 30 5a 34 57 5a 57 49 2d 4e 43 64 43 63 44 
0x0120(288) : 79 68 4c 45 65 4c 33 2e 57 75 4d 36 39 35 76 77 
0x0130(304) : 79 77 54 31 51 30 58 6a 2d 75 76 63 35 56 71 31 
0x0140(320) : 41 39 46 6f 55 4a 6d 2e 42 37 35 4c 43 2e 46 38 
0x0150(336) : 75 69 39 4a 69 68 30 69 5a 76 49 65 4f 36 67 59 
0x0160(352) : 46 76 4c 6a 43 35 69 4f 43 6e 6a 4f 6c 79 58 65 
0x0170(368) : 65 67 78 4b 4c 78 30 76 71 4a 58 43 50 42 6b 66 
0x0180(384) : 35 33 4d 48 39 32 66 4c 70 4d 6b 5a 49 46 42 77 
0x0190(400) : 76 36 46 46 31 46 38 72 59 66 31 79 72 6c 62 77 
0x01a0(416) : 70 78 42 79 2e 72 48 6e 42 2d 4b 55 45 56 4f 38 
0x01b0(432) : 62 64 4e 63 74 56 52 50 38 53 4c 7a 43 77 74 2d 
0x01c0(448) : 73 33 78 71 75 43 62 33 43 77 58 51 50 77 59 2d 
0x01d0(464) : 58 76 62 4f 4f 31 6f 58 54 37 55 66 32 4d 65 75 
0x01e0(480) : 50 5a 69 48 6d 48 4b 79 42 73 4d 62 6d 76 61 48 
0x01f0(496) : 6f 39 67 42 41 53 69 65 5a 41 48 62 57 77 54 76 
0x0200(512) : 54 39 41 44 52 56 39 63 4c 57 42 35 50 6c 4d 42 
0x0210(528) : 76 30 4d 33 53 32 68 30 44 7a 62 6a 74 33 64 4b 
0x0220(544) : 43 6e 59 64 47 68 45 62 42 50 67 61 39 31 6d 32 
0x0230(560) : 31 36 35 55 39 6e 55 4d 6b 33 33 62 36 67 76 4a 
0x0240(576) : 53 52 77 69 37 38 49 49 59 79 74 68 7a 64 6a 2d 
0x0250(592) : 6a 6f 54 73 5a 78 43 48 2e 47 73 35 77 6d 4f 4d 
0x0260(608) : 42 49 33 49 52 4c 62 7a 48 53 65 46 33 4c 45 6d 
0x0270(624) : 37 68 64 68 63 70 79 61 33 70 66 2e 5a 31 4b 6b 
0x0280(640) : 4b 4e 31 6c 69 63 69 2e 32 4b 44 35 66 52 72 6d 
0x0290(656) : 36 53 52 69 47 4f 47 4a 42 77 48 6b 78 63 53 46 
0x02a0(672) : 7a 54 2e 67 33 67 65 35 2e 72 41 64 47 30 4f 4d 
0x02b0(688) : 53 70 32 69 42 49 30 4d 43 48 34 38 74 58 4e 72 
0x02c0(704) : 2e 4d 56 32 30 37 37 2d 79 49 63 43 49 2e 59 6b 
0x02d0(720) : 6f 61 52 7a 73 52 4b 33 69 4f 42 61 76 59 50 75 
0x02e0(736) : 75 75 77 76 2d 31 75 78 4a 55 37 62 54 66 4b 46 
0x02f0(752) : 44 6c 43 33 41 57 36 73 76 48 51 6f 71 70 67 69 
0x0300(768) : 68 61 62 67 63 54 62 76 79 69 56 50 4c 70 65 59 
0x0310(784) : 59 71 63 69 4c 69 59 45 2e 7a 30 6f 6d 68 55 53 
0x0320(800) : 46 34 36 72 58 69 6c 54 4f 45 73 6b 31 55 47 5a 
0x0330(816) : 4a 73 46 65 5a 6e 73 58 6b 73 4a 56 58 6e 78 6e 
0x0340(832) : 72 31 63 4e 6a 4c 71 36 5a 68 71 61 39 34 37 53 
0x0350(848) : 78 4d 34 55 38 77 2d 73 6e 49 4c 49 33 47 33 76 
0x0360(864) : 49 67 47 2d 2d 34 35 5a 6c 76 37 76 2e 46 4c 76 
0x0370(880) : 62 51 4e 6a 4b 4d 61 35 65 76 4f 68 41 52 61 53 
0x0380(896) : 35 71 52 35 76 58 65 65 51 6c 58 4f 2e 74 48 61 
0x0390(912) : 48 65 48 62 2e 72 68 63 6c 33 49 76 55 73 4c 61 
0x03a0(928) : 68 6d 66 61 48 48 43 69 30 6b 34 2d 62 4d 5a 73 
0x03b0(944) : 2e 71 52 7a 67 36 5a 50 39 72 49 65 69 64 43 4e 
0x03c0(960) : 4e 72 78 66 36 37 4c 36 72 50 35 51 6c 65 47 6b 
0x03d0(976) : 54 69 68 37 6f 45 57 79 34 6f 61 6d 50 6d 37 6d 
0x03e0(992) : 62 32 50 68 39 6b 6e 2d 38 74 50 74 56 67 62 79 
0x03f0(1008) : 4d 47 33 38 56 5a 34 5a 4c 65 4a 6b 4f 51 56 7a 
0x0400(1024) : 53 75 65 62 64 51 61 6c 48 2e 63 6d 65 43 6a 2e 
0x0410(1040) : 53 6d 36 78 4b 42 55 66 70 6e 4f 43 42 74 39 64 
0x0420(1056) : 6c 6f 44 4d 43 6e 35 54 6c 69 44 4e 75 77 4c 4b 
0x0430(1072) : 68 53 47 2d 64 6b 65 51 57 30 63 68 74 6d 4a 64 
0x0440(1088) : 59 57 7a 6b 48 33 42 31 6c 4f 4f 64 4a 6b 78 2e 
0x0450(1104) : 41 42 7a 6e 77 62 42 51 63 6f 35 54 59 4f 34 34 
0x0460(1120) : 75 32 6f 41 35 7a 42 71 4c 5a 52 65 48 4d 63 52 
0x0470(1136) : 59 5a 43 53 39 4f 73 6c 41 78 43 69 4b 48 6d 43 
0x0480(1152) : 4a 0d 0a 45 4e 44 0d 0a 
Exiting system XilinxSwitch
===================================================================
Evaluating packet #9(1155 bytes)
 0x0000(0) : 00 00 00 00 00 00 00 00 00 00 00 00 08 00 45 00 
0x0010(16) : 04 75 76 e8 40 00 40 11 c1 8d 7f 00 00 01 7f 00 
0x0020(32) : 00 01 a9 d3 2b cb 04 61 02 75 00 08 00 00 00 01 
0x0030(48) : 01 00 73 65 74 20 14 10 10 10 10 10 10 10 6d 4d 
0x0040(64) : 77 34 32 37 5a 41 32 52 36 61 39 48 69 59 6d 47 
0x0050(80) : 4c 31 61 4d 57 67 77 79 31 55 55 37 30 45 54 77 
0x0060(96) : 4a 56 31 73 67 33 48 6d 65 51 31 4b 79 6e 61 48 
0x0070(112) : 6f 38 64 4a 70 58 20 30 20 30 20 31 30 32 34 0d 
0x0080(128) : 0a 6d 4d 77 34 32 37 5a 41 32 52 36 61 39 48 69 
0x0090(144) : 59 6d 47 4c 31 61 4d 57 67 77 79 31 55 55 37 30 
0x00a0(160) : 45 54 77 4a 56 31 73 67 33 48 6d 65 51 31 4b 79 
0x00b0(176) : 6e 61 48 6f 38 64 4a 70 58 46 71 2d 6a 78 2d 78 
0x00c0(192) : 4f 76 45 74 78 34 58 2e 4c 48 63 6c 49 77 68 33 
0x00d0(208) : 56 79 73 64 5a 39 51 34 4f 45 33 35 39 32 30 58 
0x00e0(224) : 79 46 50 74 4a 77 72 66 43 53 4f 55 4d 34 59 72 
0x00f0(240) : 30 4f 54 61 58 74 65 76 36 69 2e 46 6b 2e 6e 67 
0x0100(256) : 44 41 58 58 34 4e 41 47 70 59 6c 39 63 48 2d 64 
0x0110(272) : 66 53 42 41 4a 70 33 50 56 31 66 45 2d 51 75 44 
0x0120(288) : 61 51 6b 65 6e 75 76 61 51 65 6a 31 76 69 65 59 
0x0130(304) : 38 70 69 53 63 6c 72 36 6d 55 4b 6c 75 43 79 53 
0x0140(320) : 63 67 35 4e 59 2e 78 7a 63 66 2e 56 4c 63 31 55 
0x0150(336) : 50 6a 77 2d 53 6c 35 43 45 50 78 36 63 75 5a 43 
0x0160(352) : 59 65 61 35 63 56 32 43 38 30 68 55 63 69 79 2d 
0x0170(368) : 50 73 2e 72 62 34 31 70 54 79 77 33 71 54 47 4e 
0x0180(384) : 35 71 53 68 4a 55 74 53 55 59 77 34 45 73 33 64 
0x0190(400) : 69 31 53 48 35 54 35 5a 50 2d 63 45 53 73 62 58 
0x01a0(416) : 67 31 43 2e 56 33 51 7a 62 4b 31 70 41 34 51 73 
0x01b0(432) : 35 73 37 42 4a 43 6b 69 42 4b 77 64 42 56 38 72 
0x01c0(448) : 57 4b 70 2d 4e 44 79 79 58 7a 6c 68 31 39 58 37 
0x01d0(464) : 2d 66 49 49 72 30 2d 31 4b 76 65 56 50 6e 4c 76 
0x01e0(480) : 35 38 76 54 4d 72 50 74 70 39 5a 71 49 34 78 49 
0x01f0(496) : 6a 44 61 5a 44 5a 61 59 54 43 31 73 7a 4d 6c 33 
0x0200(512) : 56 65 57 72 55 76 69 48 32 46 35 4c 4b 31 64 31 
0x0210(528) : 45 42 61 53 6c 38 2e 43 4c 2d 32 49 4d 6e 4c 72 
0x0220(544) : 51 72 67 75 6c 4d 39 6e 63 45 36 77 46 6a 78 55 
0x0230(560) : 76 57 77 65 65 75 71 7a 74 73 47 44 64 62 32 31 
0x0240(576) : 52 69 76 41 33 32 78 66 48 32 5a 57 6c 55 2e 65 
0x0250(592) : 2e 75 47 64 6d 34 61 65 77 71 72 59 51 75 5a 72 
0x0260(608) : 61 54 2d 64 56 77 47 6d 79 70 48 69 49 46 4b 47 
0x0270(624) : 38 62 74 75 66 53 57 61 47 4d 36 67 45 66 56 6f 
0x0280(640) : 36 55 51 63 50 67 4d 4c 55 64 31 6d 74 4d 30 2d 
0x0290(656) : 78 75 74 61 4b 4f 38 61 6b 45 46 79 75 6b 6b 2e 
0x02a0(672) : 44 38 61 63 70 78 78 48 59 7a 31 50 4a 31 4f 45 
0x02b0(688) : 76 47 6f 44 65 78 6f 4d 39 31 49 31 6c 30 30 79 
0x02c0(704) : 39 61 59 79 56 55 44 32 52 45 52 6b 46 71 79 39 
0x02d0(720) : 34 6b 4d 69 66 38 32 70 39 4b 71 76 4b 71 72 54 
0x02e0(736) : 50 4f 50 75 73 63 77 48 71 4d 2d 34 41 78 44 45 
0x02f0(752) : 66 5a 77 4a 69 79 36 72 47 77 6b 61 6c 61 32 38 
0x0300(768) : 79 52 30 6f 32 78 33 73 48 32 77 52 7a 37 66 63 
0x0310(784) : 68 5a 76 4e 56 2d 43 6c 77 78 4a 66 56 4c 6e 52 
0x0320(800) : 6e 6e 44 70 69 47 66 7a 49 61 4f 46 68 31 72 4d 
0x0330(816) : 61 6c 6a 33 6b 77 6f 65 72 36 48 4b 52 32 6c 43 
0x0340(832) : 71 79 2d 57 43 66 55 55 44 73 6a 75 75 59 46 53 
0x0350(848) : 48 79 57 30 73 49 65 68 4f 77 2d 71 79 6b 30 6d 
0x0360(864) : 67 30 48 73 66 6c 4b 73 62 31 6b 54 61 7a 77 72 
0x0370(880) : 77 51 72 6d 69 55 53 35 4f 52 76 4b 41 76 35 71 
0x0380(896) : 76 4d 68 59 35 2d 4f 67 31 37 38 62 34 32 51 2e 
0x0390(912) : 53 47 6c 38 6b 42 44 36 63 36 51 6d 30 56 62 76 
0x03a0(928) : 72 47 53 77 46 71 62 47 78 6a 72 30 6c 47 2e 42 
0x03b0(944) : 57 6a 4a 45 75 58 4b 56 64 6b 46 64 45 71 58 33 
0x03c0(960) : 34 7a 2e 4b 6e 5a 61 6a 47 51 6a 2d 67 68 41 41 
0x03d0(976) : 50 54 4f 48 2e 69 6d 63 51 30 44 65 71 6b 69 76 
0x03e0(992) : 68 67 44 54 44 6e 41 54 42 74 53 72 59 63 2d 78 
0x03f0(1008) : 33 4e 44 32 33 7a 65 55 7a 72 36 6f 61 6f 68 46 
0x0400(1024) : 53 75 69 66 66 73 36 72 6a 59 67 47 38 67 42 43 
0x0410(1040) : 31 4f 45 35 4d 73 5a 4a 68 66 35 46 53 6d 56 75 
0x0420(1056) : 65 42 59 49 32 65 37 6c 42 6e 2d 4a 52 42 56 54 
0x0430(1072) : 5a 6a 59 76 5a 35 44 46 6b 49 55 41 33 7a 33 68 
0x0440(1088) : 39 62 7a 42 44 34 77 4f 73 77 69 48 35 42 6b 65 
0x0450(1104) : 76 47 59 53 4c 6c 68 34 31 41 45 34 37 48 6d 47 
0x0460(1120) : 73 6a 52 34 6f 4d 53 65 47 38 76 4c 4b 65 7a 44 
0x0470(1136) : 75 56 66 45 45 4c 49 47 56 57 4b 63 6f 34 74 65 
0x0480(1152) : 6f 0d 0a 
===================================================================
Entering system XilinxSwitch
input packet (1155 bytes)
 0x0000(0) : 00 00 00 00 00 00 00 00 00 00 00 00 08 00 45 00 
0x0010(16) : 04 75 76 e8 40 00 40 11 c1 8d 7f 00 00 01 7f 00 
0x0020(32) : 00 01 a9 d3 2b cb 04 61 02 75 00 08 00 00 00 01 
0x0030(48) : 01 00 73 65 74 20 14 10 10 10 10 10 10 10 6d 4d 
0x0040(64) : 77 34 32 37 5a 41 32 52 36 61 39 48 69 59 6d 47 
0x0050(80) : 4c 31 61 4d 57 67 77 79 31 55 55 37 30 45 54 77 
0x0060(96) : 4a 56 31 73 67 33 48 6d 65 51 31 4b 79 6e 61 48 
0x0070(112) : 6f 38 64 4a 70 58 20 30 20 30 20 31 30 32 34 0d 
0x0080(128) : 0a 6d 4d 77 34 32 37 5a 41 32 52 36 61 39 48 69 
0x0090(144) : 59 6d 47 4c 31 61 4d 57 67 77 79 31 55 55 37 30 
0x00a0(160) : 45 54 77 4a 56 31 73 67 33 48 6d 65 51 31 4b 79 
0x00b0(176) : 6e 61 48 6f 38 64 4a 70 58 46 71 2d 6a 78 2d 78 
0x00c0(192) : 4f 76 45 74 78 34 58 2e 4c 48 63 6c 49 77 68 33 
0x00d0(208) : 56 79 73 64 5a 39 51 34 4f 45 33 35 39 32 30 58 
0x00e0(224) : 79 46 50 74 4a 77 72 66 43 53 4f 55 4d 34 59 72 
0x00f0(240) : 30 4f 54 61 58 74 65 76 36 69 2e 46 6b 2e 6e 67 
0x0100(256) : 44 41 58 58 34 4e 41 47 70 59 6c 39 63 48 2d 64 
0x0110(272) : 66 53 42 41 4a 70 33 50 56 31 66 45 2d 51 75 44 
0x0120(288) : 61 51 6b 65 6e 75 76 61 51 65 6a 31 76 69 65 59 
0x0130(304) : 38 70 69 53 63 6c 72 36 6d 55 4b 6c 75 43 79 53 
0x0140(320) : 63 67 35 4e 59 2e 78 7a 63 66 2e 56 4c 63 31 55 
0x0150(336) : 50 6a 77 2d 53 6c 35 43 45 50 78 36 63 75 5a 43 
0x0160(352) : 59 65 61 35 63 56 32 43 38 30 68 55 63 69 79 2d 
0x0170(368) : 50 73 2e 72 62 34 31 70 54 79 77 33 71 54 47 4e 
0x0180(384) : 35 71 53 68 4a 55 74 53 55 59 77 34 45 73 33 64 
0x0190(400) : 69 31 53 48 35 54 35 5a 50 2d 63 45 53 73 62 58 
0x01a0(416) : 67 31 43 2e 56 33 51 7a 62 4b 31 70 41 34 51 73 
0x01b0(432) : 35 73 37 42 4a 43 6b 69 42 4b 77 64 42 56 38 72 
0x01c0(448) : 57 4b 70 2d 4e 44 79 79 58 7a 6c 68 31 39 58 37 
0x01d0(464) : 2d 66 49 49 72 30 2d 31 4b 76 65 56 50 6e 4c 76 
0x01e0(480) : 35 38 76 54 4d 72 50 74 70 39 5a 71 49 34 78 49 
0x01f0(496) : 6a 44 61 5a 44 5a 61 59 54 43 31 73 7a 4d 6c 33 
0x0200(512) : 56 65 57 72 55 76 69 48 32 46 35 4c 4b 31 64 31 
0x0210(528) : 45 42 61 53 6c 38 2e 43 4c 2d 32 49 4d 6e 4c 72 
0x0220(544) : 51 72 67 75 6c 4d 39 6e 63 45 36 77 46 6a 78 55 
0x0230(560) : 76 57 77 65 65 75 71 7a 74 73 47 44 64 62 32 31 
0x0240(576) : 52 69 76 41 33 32 78 66 48 32 5a 57 6c 55 2e 65 
0x0250(592) : 2e 75 47 64 6d 34 61 65 77 71 72 59 51 75 5a 72 
0x0260(608) : 61 54 2d 64 56 77 47 6d 79 70 48 69 49 46 4b 47 
0x0270(624) : 38 62 74 75 66 53 57 61 47 4d 36 67 45 66 56 6f 
0x0280(640) : 36 55 51 63 50 67 4d 4c 55 64 31 6d 74 4d 30 2d 
0x0290(656) : 78 75 74 61 4b 4f 38 61 6b 45 46 79 75 6b 6b 2e 
0x02a0(672) : 44 38 61 63 70 78 78 48 59 7a 31 50 4a 31 4f 45 
0x02b0(688) : 76 47 6f 44 65 78 6f 4d 39 31 49 31 6c 30 30 79 
0x02c0(704) : 39 61 59 79 56 55 44 32 52 45 52 6b 46 71 79 39 
0x02d0(720) : 34 6b 4d 69 66 38 32 70 39 4b 71 76 4b 71 72 54 
0x02e0(736) : 50 4f 50 75 73 63 77 48 71 4d 2d 34 41 78 44 45 
0x02f0(752) : 66 5a 77 4a 69 79 36 72 47 77 6b 61 6c 61 32 38 
0x0300(768) : 79 52 30 6f 32 78 33 73 48 32 77 52 7a 37 66 63 
0x0310(784) : 68 5a 76 4e 56 2d 43 6c 77 78 4a 66 56 4c 6e 52 
0x0320(800) : 6e 6e 44 70 69 47 66 7a 49 61 4f 46 68 31 72 4d 
0x0330(816) : 61 6c 6a 33 6b 77 6f 65 72 36 48 4b 52 32 6c 43 
0x0340(832) : 71 79 2d 57 43 66 55 55 44 73 6a 75 75 59 46 53 
0x0350(848) : 48 79 57 30 73 49 65 68 4f 77 2d 71 79 6b 30 6d 
0x0360(864) : 67 30 48 73 66 6c 4b 73 62 31 6b 54 61 7a 77 72 
0x0370(880) : 77 51 72 6d 69 55 53 35 4f 52 76 4b 41 76 35 71 
0x0380(896) : 76 4d 68 59 35 2d 4f 67 31 37 38 62 34 32 51 2e 
0x0390(912) : 53 47 6c 38 6b 42 44 36 63 36 51 6d 30 56 62 76 
0x03a0(928) : 72 47 53 77 46 71 62 47 78 6a 72 30 6c 47 2e 42 
0x03b0(944) : 57 6a 4a 45 75 58 4b 56 64 6b 46 64 45 71 58 33 
0x03c0(960) : 34 7a 2e 4b 6e 5a 61 6a 47 51 6a 2d 67 68 41 41 
0x03d0(976) : 50 54 4f 48 2e 69 6d 63 51 30 44 65 71 6b 69 76 
0x03e0(992) : 68 67 44 54 44 6e 41 54 42 74 53 72 59 63 2d 78 
0x03f0(1008) : 33 4e 44 32 33 7a 65 55 7a 72 36 6f 61 6f 68 46 
0x0400(1024) : 53 75 69 66 66 73 36 72 6a 59 67 47 38 67 42 43 
0x0410(1040) : 31 4f 45 35 4d 73 5a 4a 68 66 35 46 53 6d 56 75 
0x0420(1056) : 65 42 59 49 32 65 37 6c 42 6e 2d 4a 52 42 56 54 
0x0430(1072) : 5a 6a 59 76 5a 35 44 46 6b 49 55 41 33 7a 33 68 
0x0440(1088) : 39 62 7a 42 44 34 77 4f 73 77 69 48 35 42 6b 65 
0x0450(1104) : 76 47 59 53 4c 6c 68 34 31 41 45 34 37 48 6d 47 
0x0460(1120) : 73 6a 52 34 6f 4d 53 65 47 38 76 4c 4b 65 7a 44 
0x0470(1136) : 75 56 66 45 45 4c 49 47 56 57 4b 63 6f 34 74 65 
0x0480(1152) : 6f 0d 0a 
initial input and inout tuples:
	ioports = (
		ingress_port = 0x0(0)
		egress_port = 0x0(0)
	)
clear internal and output-only tuples
===================================================================
Entering engine Parser
input packet (1155 bytes)
 0x0000(0) : 00 00 00 00 00 00 00 00 00 00 00 00 08 00 45 00 
0x0010(16) : 04 75 76 e8 40 00 40 11 c1 8d 7f 00 00 01 7f 00 
0x0020(32) : 00 01 a9 d3 2b cb 04 61 02 75 00 08 00 00 00 01 
0x0030(48) : 01 00 73 65 74 20 14 10 10 10 10 10 10 10 6d 4d 
0x0040(64) : 77 34 32 37 5a 41 32 52 36 61 39 48 69 59 6d 47 
0x0050(80) : 4c 31 61 4d 57 67 77 79 31 55 55 37 30 45 54 77 
0x0060(96) : 4a 56 31 73 67 33 48 6d 65 51 31 4b 79 6e 61 48 
0x0070(112) : 6f 38 64 4a 70 58 20 30 20 30 20 31 30 32 34 0d 
0x0080(128) : 0a 6d 4d 77 34 32 37 5a 41 32 52 36 61 39 48 69 
0x0090(144) : 59 6d 47 4c 31 61 4d 57 67 77 79 31 55 55 37 30 
0x00a0(160) : 45 54 77 4a 56 31 73 67 33 48 6d 65 51 31 4b 79 
0x00b0(176) : 6e 61 48 6f 38 64 4a 70 58 46 71 2d 6a 78 2d 78 
0x00c0(192) : 4f 76 45 74 78 34 58 2e 4c 48 63 6c 49 77 68 33 
0x00d0(208) : 56 79 73 64 5a 39 51 34 4f 45 33 35 39 32 30 58 
0x00e0(224) : 79 46 50 74 4a 77 72 66 43 53 4f 55 4d 34 59 72 
0x00f0(240) : 30 4f 54 61 58 74 65 76 36 69 2e 46 6b 2e 6e 67 
0x0100(256) : 44 41 58 58 34 4e 41 47 70 59 6c 39 63 48 2d 64 
0x0110(272) : 66 53 42 41 4a 70 33 50 56 31 66 45 2d 51 75 44 
0x0120(288) : 61 51 6b 65 6e 75 76 61 51 65 6a 31 76 69 65 59 
0x0130(304) : 38 70 69 53 63 6c 72 36 6d 55 4b 6c 75 43 79 53 
0x0140(320) : 63 67 35 4e 59 2e 78 7a 63 66 2e 56 4c 63 31 55 
0x0150(336) : 50 6a 77 2d 53 6c 35 43 45 50 78 36 63 75 5a 43 
0x0160(352) : 59 65 61 35 63 56 32 43 38 30 68 55 63 69 79 2d 
0x0170(368) : 50 73 2e 72 62 34 31 70 54 79 77 33 71 54 47 4e 
0x0180(384) : 35 71 53 68 4a 55 74 53 55 59 77 34 45 73 33 64 
0x0190(400) : 69 31 53 48 35 54 35 5a 50 2d 63 45 53 73 62 58 
0x01a0(416) : 67 31 43 2e 56 33 51 7a 62 4b 31 70 41 34 51 73 
0x01b0(432) : 35 73 37 42 4a 43 6b 69 42 4b 77 64 42 56 38 72 
0x01c0(448) : 57 4b 70 2d 4e 44 79 79 58 7a 6c 68 31 39 58 37 
0x01d0(464) : 2d 66 49 49 72 30 2d 31 4b 76 65 56 50 6e 4c 76 
0x01e0(480) : 35 38 76 54 4d 72 50 74 70 39 5a 71 49 34 78 49 
0x01f0(496) : 6a 44 61 5a 44 5a 61 59 54 43 31 73 7a 4d 6c 33 
0x0200(512) : 56 65 57 72 55 76 69 48 32 46 35 4c 4b 31 64 31 
0x0210(528) : 45 42 61 53 6c 38 2e 43 4c 2d 32 49 4d 6e 4c 72 
0x0220(544) : 51 72 67 75 6c 4d 39 6e 63 45 36 77 46 6a 78 55 
0x0230(560) : 76 57 77 65 65 75 71 7a 74 73 47 44 64 62 32 31 
0x0240(576) : 52 69 76 41 33 32 78 66 48 32 5a 57 6c 55 2e 65 
0x0250(592) : 2e 75 47 64 6d 34 61 65 77 71 72 59 51 75 5a 72 
0x0260(608) : 61 54 2d 64 56 77 47 6d 79 70 48 69 49 46 4b 47 
0x0270(624) : 38 62 74 75 66 53 57 61 47 4d 36 67 45 66 56 6f 
0x0280(640) : 36 55 51 63 50 67 4d 4c 55 64 31 6d 74 4d 30 2d 
0x0290(656) : 78 75 74 61 4b 4f 38 61 6b 45 46 79 75 6b 6b 2e 
0x02a0(672) : 44 38 61 63 70 78 78 48 59 7a 31 50 4a 31 4f 45 
0x02b0(688) : 76 47 6f 44 65 78 6f 4d 39 31 49 31 6c 30 30 79 
0x02c0(704) : 39 61 59 79 56 55 44 32 52 45 52 6b 46 71 79 39 
0x02d0(720) : 34 6b 4d 69 66 38 32 70 39 4b 71 76 4b 71 72 54 
0x02e0(736) : 50 4f 50 75 73 63 77 48 71 4d 2d 34 41 78 44 45 
0x02f0(752) : 66 5a 77 4a 69 79 36 72 47 77 6b 61 6c 61 32 38 
0x0300(768) : 79 52 30 6f 32 78 33 73 48 32 77 52 7a 37 66 63 
0x0310(784) : 68 5a 76 4e 56 2d 43 6c 77 78 4a 66 56 4c 6e 52 
0x0320(800) : 6e 6e 44 70 69 47 66 7a 49 61 4f 46 68 31 72 4d 
0x0330(816) : 61 6c 6a 33 6b 77 6f 65 72 36 48 4b 52 32 6c 43 
0x0340(832) : 71 79 2d 57 43 66 55 55 44 73 6a 75 75 59 46 53 
0x0350(848) : 48 79 57 30 73 49 65 68 4f 77 2d 71 79 6b 30 6d 
0x0360(864) : 67 30 48 73 66 6c 4b 73 62 31 6b 54 61 7a 77 72 
0x0370(880) : 77 51 72 6d 69 55 53 35 4f 52 76 4b 41 76 35 71 
0x0380(896) : 76 4d 68 59 35 2d 4f 67 31 37 38 62 34 32 51 2e 
0x0390(912) : 53 47 6c 38 6b 42 44 36 63 36 51 6d 30 56 62 76 
0x03a0(928) : 72 47 53 77 46 71 62 47 78 6a 72 30 6c 47 2e 42 
0x03b0(944) : 57 6a 4a 45 75 58 4b 56 64 6b 46 64 45 71 58 33 
0x03c0(960) : 34 7a 2e 4b 6e 5a 61 6a 47 51 6a 2d 67 68 41 41 
0x03d0(976) : 50 54 4f 48 2e 69 6d 63 51 30 44 65 71 6b 69 76 
0x03e0(992) : 68 67 44 54 44 6e 41 54 42 74 53 72 59 63 2d 78 
0x03f0(1008) : 33 4e 44 32 33 7a 65 55 7a 72 36 6f 61 6f 68 46 
0x0400(1024) : 53 75 69 66 66 73 36 72 6a 59 67 47 38 67 42 43 
0x0410(1040) : 31 4f 45 35 4d 73 5a 4a 68 66 35 46 53 6d 56 75 
0x0420(1056) : 65 42 59 49 32 65 37 6c 42 6e 2d 4a 52 42 56 54 
0x0430(1072) : 5a 6a 59 76 5a 35 44 46 6b 49 55 41 33 7a 33 68 
0x0440(1088) : 39 62 7a 42 44 34 77 4f 73 77 69 48 35 42 6b 65 
0x0450(1104) : 76 47 59 53 4c 6c 68 34 31 41 45 34 37 48 6d 47 
0x0460(1120) : 73 6a 52 34 6f 4d 53 65 47 38 76 4c 4b 65 7a 44 
0x0470(1136) : 75 56 66 45 45 4c 49 47 56 57 4b 63 6f 34 74 65 
0x0480(1152) : 6f 0d 0a 
initial input and inout tuples:
	control = (
		offset = 0x0000(0)
		virtual_offset = 0x0000(0)
		section = 0x0(0)
		activeBank = 0x0(0)
		done = 0x0(0)
		error = 0x0(0)
	)
clear internal and output-only tuples
	hdr = (
		eth = (
		isValid = 0x0(0)
		dst = 0x000000000000(0)
		src = 0x000000000000(0)
		type = 0x0000(0)
	)
		fec = (
		isValid = 0x0(0)
		traffic_class = 0x0(0)
		block_index = 0x00(0)
		packet_index = 0x00(0)
		original_type = 0x0000(0)
	)
		ipv4 = (
		isValid = 0x0(0)
		version = 0x0(0)
		ihl = 0x0(0)
		diffserv = 0x00(0)
		totallen = 0x0000(0)
		identification = 0x0000(0)
		flags = 0x0(0)
		fragoffset = 0x0000(0)
		ttl = 0x00(0)
		protocol = 0x00(0)
		hdrchecksum = 0x0000(0)
		srcAddr = 0x00000000(0)
		dstAddr = 0x00000000(0)
	)
		udp = (
		isValid = 0x0(0)
		sport = 0x0000(0)
		dport = 0x0000(0)
		len = 0x0000(0)
		chksum = 0x0000(0)
	)
	)
	Parser_extracts = (
		size = 0x00000000(0)
	)
processing section start in stage 1
-------------------------------------------------------------------
Section start starting

	extracting 112 bits at offset 0x0000(0)
		dst_0 = 0x000000000000(0)
		src_0 = 0x000000000000(0)
		type_0 = 0x0800(2048)

	method update (tuples)
		hdr.eth.isValid = 0x1(1)
		hdr.eth.dst = 0x000000000000(0)
		hdr.eth.src = 0x000000000000(0)
		hdr.eth.type = 0x0800(2048)
		Parser_extracts.size = 0x00000070(112)


	method move_to_section = parse_ipv4

updated tuples:
	control = (
		offset = 0x0070(112)
		virtual_offset = 0x0070(112)
		section = 0x2(2)
		activeBank = 0x0(0)
		done = 0x0(0)
		error = 0x0(0)
	)
	hdr = (
		eth = (
		isValid = 0x1(1)
		dst = 0x000000000000(0)
		src = 0x000000000000(0)
		type = 0x0800(2048)
	)
		fec = (
		isValid = 0x0(0)
		traffic_class = 0x0(0)
		block_index = 0x00(0)
		packet_index = 0x00(0)
		original_type = 0x0000(0)
	)
		ipv4 = (
		isValid = 0x0(0)
		version = 0x0(0)
		ihl = 0x0(0)
		diffserv = 0x00(0)
		totallen = 0x0000(0)
		identification = 0x0000(0)
		flags = 0x0(0)
		fragoffset = 0x0000(0)
		ttl = 0x00(0)
		protocol = 0x00(0)
		hdrchecksum = 0x0000(0)
		srcAddr = 0x00000000(0)
		dstAddr = 0x00000000(0)
	)
		udp = (
		isValid = 0x0(0)
		sport = 0x0000(0)
		dport = 0x0000(0)
		len = 0x0000(0)
		chksum = 0x0000(0)
	)
	)
	Parser_extracts = (
		size = 0x00000070(112)
	)
Section start finished
-------------------------------------------------------------------
processing section parse_ipv4 in stage 2
-------------------------------------------------------------------
Section parse_ipv4 starting

	extracting 160 bits at offset 0x0070(112)
		version_0 = 0x4(4)
		ihl_0 = 0x5(5)
		diffserv_0 = 0x00(0)
		totallen_0 = 0x0475(1141)
		identification_0 = 0x76e8(30440)
		flags_0 = 0x2(2)
		fragoffset_0 = 0x0000(0)
		ttl_0 = 0x40(64)
		protocol_0 = 0x11(17)
		hdrchecksum_0 = 0xc18d(49549)
		srcAddr_0 = 0x7f000001(2130706433)
		dstAddr_0 = 0x7f000001(2130706433)

	method update (tuples)
		hdr.ipv4.isValid = 0x1(1)
		hdr.ipv4.version = 0x4(4)
		hdr.ipv4.ihl = 0x5(5)
		hdr.ipv4.diffserv = 0x00(0)
		hdr.ipv4.totallen = 0x0475(1141)
		hdr.ipv4.identification = 0x76e8(30440)
		hdr.ipv4.flags = 0x2(2)
		hdr.ipv4.fragoffset = 0x0000(0)
		hdr.ipv4.ttl = 0x40(64)
		hdr.ipv4.protocol = 0x11(17)
		hdr.ipv4.hdrchecksum = 0xc18d(49549)
		hdr.ipv4.srcAddr = 0x7f000001(2130706433)
		hdr.ipv4.dstAddr = 0x7f000001(2130706433)
		Parser_extracts.size = 0x00000110(272)


	method move_to_section = parse_udp

updated tuples:
	control = (
		offset = 0x0110(272)
		virtual_offset = 0x0110(272)
		section = 0x3(3)
		activeBank = 0x0(0)
		done = 0x0(0)
		error = 0x0(0)
	)
	hdr = (
		eth = (
		isValid = 0x1(1)
		dst = 0x000000000000(0)
		src = 0x000000000000(0)
		type = 0x0800(2048)
	)
		fec = (
		isValid = 0x0(0)
		traffic_class = 0x0(0)
		block_index = 0x00(0)
		packet_index = 0x00(0)
		original_type = 0x0000(0)
	)
		ipv4 = (
		isValid = 0x1(1)
		version = 0x4(4)
		ihl = 0x5(5)
		diffserv = 0x00(0)
		totallen = 0x0475(1141)
		identification = 0x76e8(30440)
		flags = 0x2(2)
		fragoffset = 0x0000(0)
		ttl = 0x40(64)
		protocol = 0x11(17)
		hdrchecksum = 0xc18d(49549)
		srcAddr = 0x7f000001(2130706433)
		dstAddr = 0x7f000001(2130706433)
	)
		udp = (
		isValid = 0x0(0)
		sport = 0x0000(0)
		dport = 0x0000(0)
		len = 0x0000(0)
		chksum = 0x0000(0)
	)
	)
	Parser_extracts = (
		size = 0x00000110(272)
	)
Section parse_ipv4 finished
-------------------------------------------------------------------
processing section parse_udp in stage 3
-------------------------------------------------------------------
Section parse_udp starting

	extracting 64 bits at offset 0x0110(272)
		sport_0 = 0xa9d3(43475)
		dport_0 = 0x2bcb(11211)
		len_0 = 0x0461(1121)
		chksum_0 = 0x0275(629)

	method update (tuples)
		hdr.udp.isValid = 0x1(1)
		hdr.udp.sport = 0xa9d3(43475)
		hdr.udp.dport = 0x2bcb(11211)
		hdr.udp.len = 0x0461(1121)
		hdr.udp.chksum = 0x0275(629)
		Parser_extracts.size = 0x00000150(336)


	method move_to_section = accept

updated tuples:
	control = (
		offset = 0x0150(336)
		virtual_offset = 0x0150(336)
		section = 0x4(4)
		activeBank = 0x0(0)
		done = 0x0(0)
		error = 0x0(0)
	)
	hdr = (
		eth = (
		isValid = 0x1(1)
		dst = 0x000000000000(0)
		src = 0x000000000000(0)
		type = 0x0800(2048)
	)
		fec = (
		isValid = 0x0(0)
		traffic_class = 0x0(0)
		block_index = 0x00(0)
		packet_index = 0x00(0)
		original_type = 0x0000(0)
	)
		ipv4 = (
		isValid = 0x1(1)
		version = 0x4(4)
		ihl = 0x5(5)
		diffserv = 0x00(0)
		totallen = 0x0475(1141)
		identification = 0x76e8(30440)
		flags = 0x2(2)
		fragoffset = 0x0000(0)
		ttl = 0x40(64)
		protocol = 0x11(17)
		hdrchecksum = 0xc18d(49549)
		srcAddr = 0x7f000001(2130706433)
		dstAddr = 0x7f000001(2130706433)
	)
		udp = (
		isValid = 0x1(1)
		sport = 0xa9d3(43475)
		dport = 0x2bcb(11211)
		len = 0x0461(1121)
		chksum = 0x0275(629)
	)
	)
	Parser_extracts = (
		size = 0x00000150(336)
	)
Section parse_udp finished
-------------------------------------------------------------------
processing section accept in stage 4
-------------------------------------------------------------------
Section accept starting


	method move_to_section = done(0)

updated tuples:
	control = (
		offset = 0x0150(336)
		virtual_offset = 0x0150(336)
		section = 0x0(0)
		activeBank = 0x0(0)
		done = 0x1(1)
		error = 0x0(0)
	)
	hdr = (
		eth = (
		isValid = 0x1(1)
		dst = 0x000000000000(0)
		src = 0x000000000000(0)
		type = 0x0800(2048)
	)
		fec = (
		isValid = 0x0(0)
		traffic_class = 0x0(0)
		block_index = 0x00(0)
		packet_index = 0x00(0)
		original_type = 0x0000(0)
	)
		ipv4 = (
		isValid = 0x1(1)
		version = 0x4(4)
		ihl = 0x5(5)
		diffserv = 0x00(0)
		totallen = 0x0475(1141)
		identification = 0x76e8(30440)
		flags = 0x2(2)
		fragoffset = 0x0000(0)
		ttl = 0x40(64)
		protocol = 0x11(17)
		hdrchecksum = 0xc18d(49549)
		srcAddr = 0x7f000001(2130706433)
		dstAddr = 0x7f000001(2130706433)
	)
		udp = (
		isValid = 0x1(1)
		sport = 0xa9d3(43475)
		dport = 0x2bcb(11211)
		len = 0x0461(1121)
		chksum = 0x0275(629)
	)
	)
	Parser_extracts = (
		size = 0x00000150(336)
	)
Section accept finished
-------------------------------------------------------------------
final inout and output tuples:

Note: this engine's wrapper will clear the upper control tuple fields on output, except for the 'control.error' field.

	control = (
		offset = 0x0000(0)
		virtual_offset = 0x0000(0)
		section = 0x0(0)
		activeBank = 0x0(0)
		done = 0x0(0)
		error = 0x0(0)
	)
	hdr = (
		eth = (
		isValid = 0x1(1)
		dst = 0x000000000000(0)
		src = 0x000000000000(0)
		type = 0x0800(2048)
	)
		fec = (
		isValid = 0x0(0)
		traffic_class = 0x0(0)
		block_index = 0x00(0)
		packet_index = 0x00(0)
		original_type = 0x0000(0)
	)
		ipv4 = (
		isValid = 0x1(1)
		version = 0x4(4)
		ihl = 0x5(5)
		diffserv = 0x00(0)
		totallen = 0x0475(1141)
		identification = 0x76e8(30440)
		flags = 0x2(2)
		fragoffset = 0x0000(0)
		ttl = 0x40(64)
		protocol = 0x11(17)
		hdrchecksum = 0xc18d(49549)
		srcAddr = 0x7f000001(2130706433)
		dstAddr = 0x7f000001(2130706433)
	)
		udp = (
		isValid = 0x1(1)
		sport = 0xa9d3(43475)
		dport = 0x2bcb(11211)
		len = 0x0461(1121)
		chksum = 0x0275(629)
	)
	)
	Parser_extracts = (
		size = 0x00000150(336)
	)
Exiting engine Parser
===================================================================
===================================================================
Entering engine CheckCache_lvl
input packet (0 bytes)
initial input and inout tuples:
	hdr = (
		eth = (
		isValid = 0x1(1)
		dst = 0x000000000000(0)
		src = 0x000000000000(0)
		type = 0x0800(2048)
	)
		fec = (
		isValid = 0x0(0)
		traffic_class = 0x0(0)
		block_index = 0x00(0)
		packet_index = 0x00(0)
		original_type = 0x0000(0)
	)
		ipv4 = (
		isValid = 0x1(1)
		version = 0x4(4)
		ihl = 0x5(5)
		diffserv = 0x00(0)
		totallen = 0x0475(1141)
		identification = 0x76e8(30440)
		flags = 0x2(2)
		fragoffset = 0x0000(0)
		ttl = 0x40(64)
		protocol = 0x11(17)
		hdrchecksum = 0xc18d(49549)
		srcAddr = 0x7f000001(2130706433)
		dstAddr = 0x7f000001(2130706433)
	)
		udp = (
		isValid = 0x1(1)
		sport = 0xa9d3(43475)
		dport = 0x2bcb(11211)
		len = 0x0461(1121)
		chksum = 0x0275(629)
	)
	)
	ioports = (
		ingress_port = 0x0(0)
		egress_port = 0x0(0)
	)
clear internal and output-only tuples
	control = (
		offset = 0x0000(0)
		virtual_offset = 0x0000(0)
		section = 0x0(0)
		activeBank = 0x0(0)
		done = 0x0(0)
		error = 0x0(0)
	)
	CheckCache_fl = (
		forward_1 = 0x0(0)
	)
	local_state = (
		id = 0x0000(0)
	)
processing section setup in stage 1
-------------------------------------------------------------------
Section setup starting


	method move_to_section = done(0)

updated tuples:
	control = (
		offset = 0x0000(0)
		virtual_offset = 0x0000(0)
		section = 0x0(0)
		activeBank = 0x0(0)
		done = 0x1(1)
		error = 0x0(0)
	)
	CheckCache_fl = (
		forward_1 = 0x0(0)
	)
	hdr = (
		eth = (
		isValid = 0x1(1)
		dst = 0x000000000000(0)
		src = 0x000000000000(0)
		type = 0x0800(2048)
	)
		fec = (
		isValid = 0x0(0)
		traffic_class = 0x0(0)
		block_index = 0x00(0)
		packet_index = 0x00(0)
		original_type = 0x0000(0)
	)
		ipv4 = (
		isValid = 0x1(1)
		version = 0x4(4)
		ihl = 0x5(5)
		diffserv = 0x00(0)
		totallen = 0x0475(1141)
		identification = 0x76e8(30440)
		flags = 0x2(2)
		fragoffset = 0x0000(0)
		ttl = 0x40(64)
		protocol = 0x11(17)
		hdrchecksum = 0xc18d(49549)
		srcAddr = 0x7f000001(2130706433)
		dstAddr = 0x7f000001(2130706433)
	)
		udp = (
		isValid = 0x1(1)
		sport = 0xa9d3(43475)
		dport = 0x2bcb(11211)
		len = 0x0461(1121)
		chksum = 0x0275(629)
	)
	)
	ioports = (
		ingress_port = 0x0(0)
		egress_port = 0x0(0)
	)
	local_state = (
		id = 0x0000(0)
	)
Section setup finished
-------------------------------------------------------------------
final inout and output tuples:

Note: this engine's wrapper will clear the upper control tuple fields on output, except for the 'control.error' field.

	CheckCache_fl = (
		forward_1 = 0x0(0)
	)
	hdr = (
		eth = (
		isValid = 0x1(1)
		dst = 0x000000000000(0)
		src = 0x000000000000(0)
		type = 0x0800(2048)
	)
		fec = (
		isValid = 0x0(0)
		traffic_class = 0x0(0)
		block_index = 0x00(0)
		packet_index = 0x00(0)
		original_type = 0x0000(0)
	)
		ipv4 = (
		isValid = 0x1(1)
		version = 0x4(4)
		ihl = 0x5(5)
		diffserv = 0x00(0)
		totallen = 0x0475(1141)
		identification = 0x76e8(30440)
		flags = 0x2(2)
		fragoffset = 0x0000(0)
		ttl = 0x40(64)
		protocol = 0x11(17)
		hdrchecksum = 0xc18d(49549)
		srcAddr = 0x7f000001(2130706433)
		dstAddr = 0x7f000001(2130706433)
	)
		udp = (
		isValid = 0x1(1)
		sport = 0xa9d3(43475)
		dport = 0x2bcb(11211)
		len = 0x0461(1121)
		chksum = 0x0275(629)
	)
	)
	ioports = (
		ingress_port = 0x0(0)
		egress_port = 0x0(0)
	)
	local_state = (
		id = 0x0000(0)
	)
Exiting engine CheckCache_lvl
===================================================================
===================================================================
Entering engine CheckCache_lvl_0
input packet (0 bytes)
initial input and inout tuples:
	CheckCache_fl = (
		forward_1 = 0x0(0)
	)
	hdr = (
		eth = (
		isValid = 0x1(1)
		dst = 0x000000000000(0)
		src = 0x000000000000(0)
		type = 0x0800(2048)
	)
		fec = (
		isValid = 0x0(0)
		traffic_class = 0x0(0)
		block_index = 0x00(0)
		packet_index = 0x00(0)
		original_type = 0x0000(0)
	)
		ipv4 = (
		isValid = 0x1(1)
		version = 0x4(4)
		ihl = 0x5(5)
		diffserv = 0x00(0)
		totallen = 0x0475(1141)
		identification = 0x76e8(30440)
		flags = 0x2(2)
		fragoffset = 0x0000(0)
		ttl = 0x40(64)
		protocol = 0x11(17)
		hdrchecksum = 0xc18d(49549)
		srcAddr = 0x7f000001(2130706433)
		dstAddr = 0x7f000001(2130706433)
	)
		udp = (
		isValid = 0x1(1)
		sport = 0xa9d3(43475)
		dport = 0x2bcb(11211)
		len = 0x0461(1121)
		chksum = 0x0275(629)
	)
	)
	ioports = (
		ingress_port = 0x0(0)
		egress_port = 0x0(0)
	)
	local_state = (
		id = 0x0000(0)
	)
clear internal and output-only tuples
	control = (
		offset = 0x0000(0)
		virtual_offset = 0x0000(0)
		section = 0x0(0)
		activeBank = 0x0(0)
		done = 0x0(0)
		error = 0x0(0)
	)
	memcached_input = (
		stateful_valid = 0x0(0)
	)
processing section condition_sec_0 in stage 1
-------------------------------------------------------------------
Section condition_sec_0 starting

	method update (tuples)
		local_state.id = 0x0005(5)


	method move_to_section = condition_sec

updated tuples:
	control = (
		offset = 0x0000(0)
		virtual_offset = 0x0000(0)
		section = 0x2(2)
		activeBank = 0x0(0)
		done = 0x0(0)
		error = 0x0(0)
	)
	CheckCache_fl = (
		forward_1 = 0x0(0)
	)
	hdr = (
		eth = (
		isValid = 0x1(1)
		dst = 0x000000000000(0)
		src = 0x000000000000(0)
		type = 0x0800(2048)
	)
		fec = (
		isValid = 0x0(0)
		traffic_class = 0x0(0)
		block_index = 0x00(0)
		packet_index = 0x00(0)
		original_type = 0x0000(0)
	)
		ipv4 = (
		isValid = 0x1(1)
		version = 0x4(4)
		ihl = 0x5(5)
		diffserv = 0x00(0)
		totallen = 0x0475(1141)
		identification = 0x76e8(30440)
		flags = 0x2(2)
		fragoffset = 0x0000(0)
		ttl = 0x40(64)
		protocol = 0x11(17)
		hdrchecksum = 0xc18d(49549)
		srcAddr = 0x7f000001(2130706433)
		dstAddr = 0x7f000001(2130706433)
	)
		udp = (
		isValid = 0x1(1)
		sport = 0xa9d3(43475)
		dport = 0x2bcb(11211)
		len = 0x0461(1121)
		chksum = 0x0275(629)
	)
	)
	ioports = (
		ingress_port = 0x0(0)
		egress_port = 0x0(0)
	)
	local_state = (
		id = 0x0005(5)
	)
	memcached_input = (
		stateful_valid = 0x0(0)
	)
Section condition_sec_0 finished
-------------------------------------------------------------------
processing section condition_sec in stage 2
-------------------------------------------------------------------
Section condition_sec starting

	method update (tuples)
		local_state.id = 0x0005(5)


	method move_to_section = act_0_sec

updated tuples:
	control = (
		offset = 0x0000(0)
		virtual_offset = 0x0000(0)
		section = 0x1(1)
		activeBank = 0x0(0)
		done = 0x0(0)
		error = 0x0(0)
	)
	CheckCache_fl = (
		forward_1 = 0x0(0)
	)
	hdr = (
		eth = (
		isValid = 0x1(1)
		dst = 0x000000000000(0)
		src = 0x000000000000(0)
		type = 0x0800(2048)
	)
		fec = (
		isValid = 0x0(0)
		traffic_class = 0x0(0)
		block_index = 0x00(0)
		packet_index = 0x00(0)
		original_type = 0x0000(0)
	)
		ipv4 = (
		isValid = 0x1(1)
		version = 0x4(4)
		ihl = 0x5(5)
		diffserv = 0x00(0)
		totallen = 0x0475(1141)
		identification = 0x76e8(30440)
		flags = 0x2(2)
		fragoffset = 0x0000(0)
		ttl = 0x40(64)
		protocol = 0x11(17)
		hdrchecksum = 0xc18d(49549)
		srcAddr = 0x7f000001(2130706433)
		dstAddr = 0x7f000001(2130706433)
	)
		udp = (
		isValid = 0x1(1)
		sport = 0xa9d3(43475)
		dport = 0x2bcb(11211)
		len = 0x0461(1121)
		chksum = 0x0275(629)
	)
	)
	ioports = (
		ingress_port = 0x0(0)
		egress_port = 0x0(0)
	)
	local_state = (
		id = 0x0005(5)
	)
	memcached_input = (
		stateful_valid = 0x0(0)
	)
Section condition_sec finished
-------------------------------------------------------------------
processing section act_0_sec in stage 3
-------------------------------------------------------------------
Section act_0_sec starting

	method update (tuples)
		memcached_input.stateful_valid = 0x1(1)
		local_state.id = 0x0004(4)


	method move_to_section = local_end

updated tuples:
	control = (
		offset = 0x0000(0)
		virtual_offset = 0x0000(0)
		section = 0x4(4)
		activeBank = 0x0(0)
		done = 0x0(0)
		error = 0x0(0)
	)
	CheckCache_fl = (
		forward_1 = 0x0(0)
	)
	hdr = (
		eth = (
		isValid = 0x1(1)
		dst = 0x000000000000(0)
		src = 0x000000000000(0)
		type = 0x0800(2048)
	)
		fec = (
		isValid = 0x0(0)
		traffic_class = 0x0(0)
		block_index = 0x00(0)
		packet_index = 0x00(0)
		original_type = 0x0000(0)
	)
		ipv4 = (
		isValid = 0x1(1)
		version = 0x4(4)
		ihl = 0x5(5)
		diffserv = 0x00(0)
		totallen = 0x0475(1141)
		identification = 0x76e8(30440)
		flags = 0x2(2)
		fragoffset = 0x0000(0)
		ttl = 0x40(64)
		protocol = 0x11(17)
		hdrchecksum = 0xc18d(49549)
		srcAddr = 0x7f000001(2130706433)
		dstAddr = 0x7f000001(2130706433)
	)
		udp = (
		isValid = 0x1(1)
		sport = 0xa9d3(43475)
		dport = 0x2bcb(11211)
		len = 0x0461(1121)
		chksum = 0x0275(629)
	)
	)
	ioports = (
		ingress_port = 0x0(0)
		egress_port = 0x0(0)
	)
	local_state = (
		id = 0x0004(4)
	)
	memcached_input = (
		stateful_valid = 0x1(1)
	)
Section act_0_sec finished
-------------------------------------------------------------------
processing section local_end in stage 4
-------------------------------------------------------------------
Section local_end starting


	method move_to_section = done(0)

updated tuples:
	control = (
		offset = 0x0000(0)
		virtual_offset = 0x0000(0)
		section = 0x0(0)
		activeBank = 0x0(0)
		done = 0x1(1)
		error = 0x0(0)
	)
	CheckCache_fl = (
		forward_1 = 0x0(0)
	)
	hdr = (
		eth = (
		isValid = 0x1(1)
		dst = 0x000000000000(0)
		src = 0x000000000000(0)
		type = 0x0800(2048)
	)
		fec = (
		isValid = 0x0(0)
		traffic_class = 0x0(0)
		block_index = 0x00(0)
		packet_index = 0x00(0)
		original_type = 0x0000(0)
	)
		ipv4 = (
		isValid = 0x1(1)
		version = 0x4(4)
		ihl = 0x5(5)
		diffserv = 0x00(0)
		totallen = 0x0475(1141)
		identification = 0x76e8(30440)
		flags = 0x2(2)
		fragoffset = 0x0000(0)
		ttl = 0x40(64)
		protocol = 0x11(17)
		hdrchecksum = 0xc18d(49549)
		srcAddr = 0x7f000001(2130706433)
		dstAddr = 0x7f000001(2130706433)
	)
		udp = (
		isValid = 0x1(1)
		sport = 0xa9d3(43475)
		dport = 0x2bcb(11211)
		len = 0x0461(1121)
		chksum = 0x0275(629)
	)
	)
	ioports = (
		ingress_port = 0x0(0)
		egress_port = 0x0(0)
	)
	local_state = (
		id = 0x0004(4)
	)
	memcached_input = (
		stateful_valid = 0x1(1)
	)
Section local_end finished
-------------------------------------------------------------------
final inout and output tuples:

Note: this engine's wrapper will clear the upper control tuple fields on output, except for the 'control.error' field.

	CheckCache_fl = (
		forward_1 = 0x0(0)
	)
	hdr = (
		eth = (
		isValid = 0x1(1)
		dst = 0x000000000000(0)
		src = 0x000000000000(0)
		type = 0x0800(2048)
	)
		fec = (
		isValid = 0x0(0)
		traffic_class = 0x0(0)
		block_index = 0x00(0)
		packet_index = 0x00(0)
		original_type = 0x0000(0)
	)
		ipv4 = (
		isValid = 0x1(1)
		version = 0x4(4)
		ihl = 0x5(5)
		diffserv = 0x00(0)
		totallen = 0x0475(1141)
		identification = 0x76e8(30440)
		flags = 0x2(2)
		fragoffset = 0x0000(0)
		ttl = 0x40(64)
		protocol = 0x11(17)
		hdrchecksum = 0xc18d(49549)
		srcAddr = 0x7f000001(2130706433)
		dstAddr = 0x7f000001(2130706433)
	)
		udp = (
		isValid = 0x1(1)
		sport = 0xa9d3(43475)
		dport = 0x2bcb(11211)
		len = 0x0461(1121)
		chksum = 0x0275(629)
	)
	)
	ioports = (
		ingress_port = 0x0(0)
		egress_port = 0x0(0)
	)
	local_state = (
		id = 0x0004(4)
	)
	memcached_input = (
		stateful_valid = 0x1(1)
	)
Exiting engine CheckCache_lvl_0
===================================================================
===================================================================
Entering engine memcached_0
input packet (1155 bytes)
 0x0000(0) : 00 00 00 00 00 00 00 00 00 00 00 00 08 00 45 00 
0x0010(16) : 04 75 76 e8 40 00 40 11 c1 8d 7f 00 00 01 7f 00 
0x0020(32) : 00 01 a9 d3 2b cb 04 61 02 75 00 08 00 00 00 01 
0x0030(48) : 01 00 73 65 74 20 14 10 10 10 10 10 10 10 6d 4d 
0x0040(64) : 77 34 32 37 5a 41 32 52 36 61 39 48 69 59 6d 47 
0x0050(80) : 4c 31 61 4d 57 67 77 79 31 55 55 37 30 45 54 77 
0x0060(96) : 4a 56 31 73 67 33 48 6d 65 51 31 4b 79 6e 61 48 
0x0070(112) : 6f 38 64 4a 70 58 20 30 20 30 20 31 30 32 34 0d 
0x0080(128) : 0a 6d 4d 77 34 32 37 5a 41 32 52 36 61 39 48 69 
0x0090(144) : 59 6d 47 4c 31 61 4d 57 67 77 79 31 55 55 37 30 
0x00a0(160) : 45 54 77 4a 56 31 73 67 33 48 6d 65 51 31 4b 79 
0x00b0(176) : 6e 61 48 6f 38 64 4a 70 58 46 71 2d 6a 78 2d 78 
0x00c0(192) : 4f 76 45 74 78 34 58 2e 4c 48 63 6c 49 77 68 33 
0x00d0(208) : 56 79 73 64 5a 39 51 34 4f 45 33 35 39 32 30 58 
0x00e0(224) : 79 46 50 74 4a 77 72 66 43 53 4f 55 4d 34 59 72 
0x00f0(240) : 30 4f 54 61 58 74 65 76 36 69 2e 46 6b 2e 6e 67 
0x0100(256) : 44 41 58 58 34 4e 41 47 70 59 6c 39 63 48 2d 64 
0x0110(272) : 66 53 42 41 4a 70 33 50 56 31 66 45 2d 51 75 44 
0x0120(288) : 61 51 6b 65 6e 75 76 61 51 65 6a 31 76 69 65 59 
0x0130(304) : 38 70 69 53 63 6c 72 36 6d 55 4b 6c 75 43 79 53 
0x0140(320) : 63 67 35 4e 59 2e 78 7a 63 66 2e 56 4c 63 31 55 
0x0150(336) : 50 6a 77 2d 53 6c 35 43 45 50 78 36 63 75 5a 43 
0x0160(352) : 59 65 61 35 63 56 32 43 38 30 68 55 63 69 79 2d 
0x0170(368) : 50 73 2e 72 62 34 31 70 54 79 77 33 71 54 47 4e 
0x0180(384) : 35 71 53 68 4a 55 74 53 55 59 77 34 45 73 33 64 
0x0190(400) : 69 31 53 48 35 54 35 5a 50 2d 63 45 53 73 62 58 
0x01a0(416) : 67 31 43 2e 56 33 51 7a 62 4b 31 70 41 34 51 73 
0x01b0(432) : 35 73 37 42 4a 43 6b 69 42 4b 77 64 42 56 38 72 
0x01c0(448) : 57 4b 70 2d 4e 44 79 79 58 7a 6c 68 31 39 58 37 
0x01d0(464) : 2d 66 49 49 72 30 2d 31 4b 76 65 56 50 6e 4c 76 
0x01e0(480) : 35 38 76 54 4d 72 50 74 70 39 5a 71 49 34 78 49 
0x01f0(496) : 6a 44 61 5a 44 5a 61 59 54 43 31 73 7a 4d 6c 33 
0x0200(512) : 56 65 57 72 55 76 69 48 32 46 35 4c 4b 31 64 31 
0x0210(528) : 45 42 61 53 6c 38 2e 43 4c 2d 32 49 4d 6e 4c 72 
0x0220(544) : 51 72 67 75 6c 4d 39 6e 63 45 36 77 46 6a 78 55 
0x0230(560) : 76 57 77 65 65 75 71 7a 74 73 47 44 64 62 32 31 
0x0240(576) : 52 69 76 41 33 32 78 66 48 32 5a 57 6c 55 2e 65 
0x0250(592) : 2e 75 47 64 6d 34 61 65 77 71 72 59 51 75 5a 72 
0x0260(608) : 61 54 2d 64 56 77 47 6d 79 70 48 69 49 46 4b 47 
0x0270(624) : 38 62 74 75 66 53 57 61 47 4d 36 67 45 66 56 6f 
0x0280(640) : 36 55 51 63 50 67 4d 4c 55 64 31 6d 74 4d 30 2d 
0x0290(656) : 78 75 74 61 4b 4f 38 61 6b 45 46 79 75 6b 6b 2e 
0x02a0(672) : 44 38 61 63 70 78 78 48 59 7a 31 50 4a 31 4f 45 
0x02b0(688) : 76 47 6f 44 65 78 6f 4d 39 31 49 31 6c 30 30 79 
0x02c0(704) : 39 61 59 79 56 55 44 32 52 45 52 6b 46 71 79 39 
0x02d0(720) : 34 6b 4d 69 66 38 32 70 39 4b 71 76 4b 71 72 54 
0x02e0(736) : 50 4f 50 75 73 63 77 48 71 4d 2d 34 41 78 44 45 
0x02f0(752) : 66 5a 77 4a 69 79 36 72 47 77 6b 61 6c 61 32 38 
0x0300(768) : 79 52 30 6f 32 78 33 73 48 32 77 52 7a 37 66 63 
0x0310(784) : 68 5a 76 4e 56 2d 43 6c 77 78 4a 66 56 4c 6e 52 
0x0320(800) : 6e 6e 44 70 69 47 66 7a 49 61 4f 46 68 31 72 4d 
0x0330(816) : 61 6c 6a 33 6b 77 6f 65 72 36 48 4b 52 32 6c 43 
0x0340(832) : 71 79 2d 57 43 66 55 55 44 73 6a 75 75 59 46 53 
0x0350(848) : 48 79 57 30 73 49 65 68 4f 77 2d 71 79 6b 30 6d 
0x0360(864) : 67 30 48 73 66 6c 4b 73 62 31 6b 54 61 7a 77 72 
0x0370(880) : 77 51 72 6d 69 55 53 35 4f 52 76 4b 41 76 35 71 
0x0380(896) : 76 4d 68 59 35 2d 4f 67 31 37 38 62 34 32 51 2e 
0x0390(912) : 53 47 6c 38 6b 42 44 36 63 36 51 6d 30 56 62 76 
0x03a0(928) : 72 47 53 77 46 71 62 47 78 6a 72 30 6c 47 2e 42 
0x03b0(944) : 57 6a 4a 45 75 58 4b 56 64 6b 46 64 45 71 58 33 
0x03c0(960) : 34 7a 2e 4b 6e 5a 61 6a 47 51 6a 2d 67 68 41 41 
0x03d0(976) : 50 54 4f 48 2e 69 6d 63 51 30 44 65 71 6b 69 76 
0x03e0(992) : 68 67 44 54 44 6e 41 54 42 74 53 72 59 63 2d 78 
0x03f0(1008) : 33 4e 44 32 33 7a 65 55 7a 72 36 6f 61 6f 68 46 
0x0400(1024) : 53 75 69 66 66 73 36 72 6a 59 67 47 38 67 42 43 
0x0410(1040) : 31 4f 45 35 4d 73 5a 4a 68 66 35 46 53 6d 56 75 
0x0420(1056) : 65 42 59 49 32 65 37 6c 42 6e 2d 4a 52 42 56 54 
0x0430(1072) : 5a 6a 59 76 5a 35 44 46 6b 49 55 41 33 7a 33 68 
0x0440(1088) : 39 62 7a 42 44 34 77 4f 73 77 69 48 35 42 6b 65 
0x0450(1104) : 76 47 59 53 4c 6c 68 34 31 41 45 34 37 48 6d 47 
0x0460(1120) : 73 6a 52 34 6f 4d 53 65 47 38 76 4c 4b 65 7a 44 
0x0470(1136) : 75 56 66 45 45 4c 49 47 56 57 4b 63 6f 34 74 65 
0x0480(1152) : 6f 0d 0a 
initial input and inout tuples:
	control = (
		offset = 0x0000(0)
		virtual_offset = 0x0000(0)
		section = 0x0(0)
		activeBank = 0x0(0)
		done = 0x0(0)
		error = 0x0(0)
	)
	CheckCache_fl = (
		forward_1 = 0x0(0)
	)
	hdr = (
		eth = (
		isValid = 0x1(1)
		dst = 0x000000000000(0)
		src = 0x000000000000(0)
		type = 0x0800(2048)
	)
		fec = (
		isValid = 0x0(0)
		traffic_class = 0x0(0)
		block_index = 0x00(0)
		packet_index = 0x00(0)
		original_type = 0x0000(0)
	)
		ipv4 = (
		isValid = 0x1(1)
		version = 0x4(4)
		ihl = 0x5(5)
		diffserv = 0x00(0)
		totallen = 0x0475(1141)
		identification = 0x76e8(30440)
		flags = 0x2(2)
		fragoffset = 0x0000(0)
		ttl = 0x40(64)
		protocol = 0x11(17)
		hdrchecksum = 0xc18d(49549)
		srcAddr = 0x7f000001(2130706433)
		dstAddr = 0x7f000001(2130706433)
	)
		udp = (
		isValid = 0x1(1)
		sport = 0xa9d3(43475)
		dport = 0x2bcb(11211)
		len = 0x0461(1121)
		chksum = 0x0275(629)
	)
	)
	ioports = (
		ingress_port = 0x0(0)
		egress_port = 0x0(0)
	)
	local_state = (
		id = 0x0004(4)
	)
	Parser_extracts = (
		size = 0x00000150(336)
	)
	memcached_input = (
		stateful_valid = 0x1(1)
	)
clear internal and output-only tuples
	memcached_output = (
		forward = 0x0(0)
	)
Enter USER ENGINE FUNCTION
0
134235392
321293688305106961
13946943259013119744
468199414629473
177047794710740993
72184473615078416
1157442765409250637
8589545602621190738
3918476133956939079
5490276405548119929
3554841176400286839
5356523178526197869
7300670671173869896
8014265807780978736
2319389203729888269
751341887212894042
4697907754813704297
6443885034408594775
7455560960927151920
4995749047818089319
3695323776178801529
7953718059437673072
6360895963581132152
5725840342783383598
5496752661945870387
6231138434291421492
5712028006075215960
8738760587354796646
4851308451394247026
3481093814053266806
3920715830583520871
4918309403923202375
8095620798909787492
7373309863124808528
6210857808419714372
7012504178181633633
5865210850392499545
4066866270386811446
7878286052350458195
7162752342976002170
7162463205562986837
5794574907122398531
4994624161746082371
6441661723951116867
4048850780955441453
5797028214164697456
6087027434196322126
3850950863767303251
6150077832538305380
7579931217438717274
5777383046390178392
7435798326059159930
7082809197170282867
3851482864185207657
4777043102249924722
6290244644441979257
6375527417254598711
3271382759128444209
5437645021487451254
3834945187154645108
8086594048526415945
7657352306758410585
6071751094668454963
6225478208481290568
3622641552061457457
4990658348005731907
5489098811247578226
5868867018443012462
7153183469058291797
8527415696826921338
8391128889788871217
5938407606068607078
5202319851092520549
3347660394674282853
8606786090826029682
7013280428693342061
8750573693018983239
4062937861418342241
5137822567073470063
3915124938061073740
6153097337067352109
8679971818050631777
7729661822926285614
4915786072991496264
6447520037446176581
8522903159372803917
4121155610638037113
4134684310577169458
5928235105199946041
3777197827562156656
4128518236300997204
5786932511571670856
8164231401952527429
7375338501253445234
5149702765095760440
8742103080825795443
5202351715687818851
7519452606673797996
8608712491113672274
7957372841203558010
5287594601324048973
7020102688242626405
8229844857404943427
8176616451284030805
4932403069613327955
5222301108517037416
5726095416616497261
7435522645265501043
7075554499732600690
8597778977871188789
5715760942679471473
8524584402035756903
3546365226011218222
6000884018067948598
7148990987901493878
8234642215418290759
8676873184383282754
6298928691012979542
7235954622776563763
3781385738639794538
5139005393047404865
5788338592512830819
5850251118439524726
7523056831261720916
4788544054392728952
3696967326520468821
8823174471976183878
6013828765949572722
7663269796534239811
3553134726253599306
7522758803732649589
7296492517206603628
4786813251172324948
6515118175799297094
7730803973883048808
4135001832910255951
8320234595442387813
8522879034121283636
3549194071912770887
8316550047052157797
5131981845443213892
8455057798136088903
6221524300675183717
8002063108023517184
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<Inside MemCore<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<< 
The No. 8Packet
0
139
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<Inside MemCore<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<< 
===================================================================
Entering engine CheckCache_lvl_1
input packet (0 bytes)
initial input and inout tuples:
	CheckCache_fl = (
		forward_1 = 0x0(0)
	)
	hdr = (
		eth = (
		isValid = 0x1(1)
		dst = 0x000000000000(0)
		src = 0x000000000000(0)
		type = 0x0800(2048)
	)
		fec = (
		isValid = 0x0(0)
		traffic_class = 0x0(0)
		block_index = 0x00(0)
		packet_index = 0x00(0)
		original_type = 0x0000(0)
	)
		ipv4 = (
		isValid = 0x1(1)
		version = 0x4(4)
		ihl = 0x5(5)
		diffserv = 0x00(0)
		totallen = 0x0475(1141)
		identification = 0x76e8(30440)
		flags = 0x2(2)
		fragoffset = 0x0000(0)
		ttl = 0x40(64)
		protocol = 0x11(17)
		hdrchecksum = 0xc18d(49549)
		srcAddr = 0x7f000001(2130706433)
		dstAddr = 0x7f000001(2130706433)
	)
		udp = (
		isValid = 0x1(1)
		sport = 0xa9d3(43475)
		dport = 0x2bcb(11211)
		len = 0x0461(1121)
		chksum = 0x0275(629)
	)
	)
	ioports = (
		ingress_port = 0x0(0)
		egress_port = 0x0(0)
	)
	local_state = (
		id = 0x0004(4)
	)
	memcached_output = (
		forward = 0x0(0)
	)
clear internal and output-only tuples
	control = (
		offset = 0x0000(0)
		virtual_offset = 0x0000(0)
		section = 0x0(0)
		activeBank = 0x0(0)
		done = 0x0(0)
		error = 0x0(0)
	)
processing section local_start in stage 1
-------------------------------------------------------------------
Section local_start starting


	method move_to_section = memcached_sec

updated tuples:
	control = (
		offset = 0x0000(0)
		virtual_offset = 0x0000(0)
		section = 0x2(2)
		activeBank = 0x0(0)
		done = 0x0(0)
		error = 0x0(0)
	)
	CheckCache_fl = (
		forward_1 = 0x0(0)
	)
	hdr = (
		eth = (
		isValid = 0x1(1)
		dst = 0x000000000000(0)
		src = 0x000000000000(0)
		type = 0x0800(2048)
	)
		fec = (
		isValid = 0x0(0)
		traffic_class = 0x0(0)
		block_index = 0x00(0)
		packet_index = 0x00(0)
		original_type = 0x0000(0)
	)
		ipv4 = (
		isValid = 0x1(1)
		version = 0x4(4)
		ihl = 0x5(5)
		diffserv = 0x00(0)
		totallen = 0x0475(1141)
		identification = 0x76e8(30440)
		flags = 0x2(2)
		fragoffset = 0x0000(0)
		ttl = 0x40(64)
		protocol = 0x11(17)
		hdrchecksum = 0xc18d(49549)
		srcAddr = 0x7f000001(2130706433)
		dstAddr = 0x7f000001(2130706433)
	)
		udp = (
		isValid = 0x1(1)
		sport = 0xa9d3(43475)
		dport = 0x2bcb(11211)
		len = 0x0461(1121)
		chksum = 0x0275(629)
	)
	)
	ioports = (
		ingress_port = 0x0(0)
		egress_port = 0x0(0)
	)
	local_state = (
		id = 0x0004(4)
	)
	memcached_output = (
		forward = 0x0(0)
	)
Section local_start finished
-------------------------------------------------------------------
processing section memcached_sec in stage 2
-------------------------------------------------------------------
Section memcached_sec starting

	method update (tuples)
		CheckCache_fl.forward_1 = 0x0(0)


	method move_to_section = sink

updated tuples:
	control = (
		offset = 0x0000(0)
		virtual_offset = 0x0000(0)
		section = 0x3(3)
		activeBank = 0x0(0)
		done = 0x0(0)
		error = 0x0(0)
	)
	CheckCache_fl = (
		forward_1 = 0x0(0)
	)
	hdr = (
		eth = (
		isValid = 0x1(1)
		dst = 0x000000000000(0)
		src = 0x000000000000(0)
		type = 0x0800(2048)
	)
		fec = (
		isValid = 0x0(0)
		traffic_class = 0x0(0)
		block_index = 0x00(0)
		packet_index = 0x00(0)
		original_type = 0x0000(0)
	)
		ipv4 = (
		isValid = 0x1(1)
		version = 0x4(4)
		ihl = 0x5(5)
		diffserv = 0x00(0)
		totallen = 0x0475(1141)
		identification = 0x76e8(30440)
		flags = 0x2(2)
		fragoffset = 0x0000(0)
		ttl = 0x40(64)
		protocol = 0x11(17)
		hdrchecksum = 0xc18d(49549)
		srcAddr = 0x7f000001(2130706433)
		dstAddr = 0x7f000001(2130706433)
	)
		udp = (
		isValid = 0x1(1)
		sport = 0xa9d3(43475)
		dport = 0x2bcb(11211)
		len = 0x0461(1121)
		chksum = 0x0275(629)
	)
	)
	ioports = (
		ingress_port = 0x0(0)
		egress_port = 0x0(0)
	)
	local_state = (
		id = 0x0004(4)
	)
	memcached_output = (
		forward = 0x0(0)
	)
Section memcached_sec finished
-------------------------------------------------------------------
processing section sink in stage 3
-------------------------------------------------------------------
Section sink starting


	method move_to_section = done(0)

updated tuples:
	control = (
		offset = 0x0000(0)
		virtual_offset = 0x0000(0)
		section = 0x0(0)
		activeBank = 0x0(0)
		done = 0x1(1)
		error = 0x0(0)
	)
	CheckCache_fl = (
		forward_1 = 0x0(0)
	)
	hdr = (
		eth = (
		isValid = 0x1(1)
		dst = 0x000000000000(0)
		src = 0x000000000000(0)
		type = 0x0800(2048)
	)
		fec = (
		isValid = 0x0(0)
		traffic_class = 0x0(0)
		block_index = 0x00(0)
		packet_index = 0x00(0)
		original_type = 0x0000(0)
	)
		ipv4 = (
		isValid = 0x1(1)
		version = 0x4(4)
		ihl = 0x5(5)
		diffserv = 0x00(0)
		totallen = 0x0475(1141)
		identification = 0x76e8(30440)
		flags = 0x2(2)
		fragoffset = 0x0000(0)
		ttl = 0x40(64)
		protocol = 0x11(17)
		hdrchecksum = 0xc18d(49549)
		srcAddr = 0x7f000001(2130706433)
		dstAddr = 0x7f000001(2130706433)
	)
		udp = (
		isValid = 0x1(1)
		sport = 0xa9d3(43475)
		dport = 0x2bcb(11211)
		len = 0x0461(1121)
		chksum = 0x0275(629)
	)
	)
	ioports = (
		ingress_port = 0x0(0)
		egress_port = 0x0(0)
	)
	local_state = (
		id = 0x0004(4)
	)
	memcached_output = (
		forward = 0x0(0)
	)
Section sink finished
-------------------------------------------------------------------
final inout and output tuples:

Note: this engine's wrapper will clear the upper control tuple fields on output, except for the 'control.error' field.

	hdr = (
		eth = (
		isValid = 0x1(1)
		dst = 0x000000000000(0)
		src = 0x000000000000(0)
		type = 0x0800(2048)
	)
		fec = (
		isValid = 0x0(0)
		traffic_class = 0x0(0)
		block_index = 0x00(0)
		packet_index = 0x00(0)
		original_type = 0x0000(0)
	)
		ipv4 = (
		isValid = 0x1(1)
		version = 0x4(4)
		ihl = 0x5(5)
		diffserv = 0x00(0)
		totallen = 0x0475(1141)
		identification = 0x76e8(30440)
		flags = 0x2(2)
		fragoffset = 0x0000(0)
		ttl = 0x40(64)
		protocol = 0x11(17)
		hdrchecksum = 0xc18d(49549)
		srcAddr = 0x7f000001(2130706433)
		dstAddr = 0x7f000001(2130706433)
	)
		udp = (
		isValid = 0x1(1)
		sport = 0xa9d3(43475)
		dport = 0x2bcb(11211)
		len = 0x0461(1121)
		chksum = 0x0275(629)
	)
	)
	ioports = (
		ingress_port = 0x0(0)
		egress_port = 0x0(0)
	)
Exiting engine CheckCache_lvl_1
===================================================================
===================================================================
Entering engine Deparser
input packet (1155 bytes)
 0x0000(0) : 00 00 00 00 00 00 00 00 00 00 00 00 08 00 45 00 
0x0010(16) : 04 75 76 e8 40 00 40 11 c1 8d 7f 00 00 01 7f 00 
0x0020(32) : 00 01 a9 d3 2b cb 04 61 02 75 00 08 00 00 00 01 
0x0030(48) : 01 00 73 65 74 20 14 10 10 10 10 10 10 10 6d 4d 
0x0040(64) : 77 34 32 37 5a 41 32 52 36 61 39 48 69 59 6d 47 
0x0050(80) : 4c 31 61 4d 57 67 77 79 31 55 55 37 30 45 54 77 
0x0060(96) : 4a 56 31 73 67 33 48 6d 65 51 31 4b 79 6e 61 48 
0x0070(112) : 6f 38 64 4a 70 58 20 30 20 30 20 31 30 32 34 0d 
0x0080(128) : 0a 6d 4d 77 34 32 37 5a 41 32 52 36 61 39 48 69 
0x0090(144) : 59 6d 47 4c 31 61 4d 57 67 77 79 31 55 55 37 30 
0x00a0(160) : 45 54 77 4a 56 31 73 67 33 48 6d 65 51 31 4b 79 
0x00b0(176) : 6e 61 48 6f 38 64 4a 70 58 46 71 2d 6a 78 2d 78 
0x00c0(192) : 4f 76 45 74 78 34 58 2e 4c 48 63 6c 49 77 68 33 
0x00d0(208) : 56 79 73 64 5a 39 51 34 4f 45 33 35 39 32 30 58 
0x00e0(224) : 79 46 50 74 4a 77 72 66 43 53 4f 55 4d 34 59 72 
0x00f0(240) : 30 4f 54 61 58 74 65 76 36 69 2e 46 6b 2e 6e 67 
0x0100(256) : 44 41 58 58 34 4e 41 47 70 59 6c 39 63 48 2d 64 
0x0110(272) : 66 53 42 41 4a 70 33 50 56 31 66 45 2d 51 75 44 
0x0120(288) : 61 51 6b 65 6e 75 76 61 51 65 6a 31 76 69 65 59 
0x0130(304) : 38 70 69 53 63 6c 72 36 6d 55 4b 6c 75 43 79 53 
0x0140(320) : 63 67 35 4e 59 2e 78 7a 63 66 2e 56 4c 63 31 55 
0x0150(336) : 50 6a 77 2d 53 6c 35 43 45 50 78 36 63 75 5a 43 
0x0160(352) : 59 65 61 35 63 56 32 43 38 30 68 55 63 69 79 2d 
0x0170(368) : 50 73 2e 72 62 34 31 70 54 79 77 33 71 54 47 4e 
0x0180(384) : 35 71 53 68 4a 55 74 53 55 59 77 34 45 73 33 64 
0x0190(400) : 69 31 53 48 35 54 35 5a 50 2d 63 45 53 73 62 58 
0x01a0(416) : 67 31 43 2e 56 33 51 7a 62 4b 31 70 41 34 51 73 
0x01b0(432) : 35 73 37 42 4a 43 6b 69 42 4b 77 64 42 56 38 72 
0x01c0(448) : 57 4b 70 2d 4e 44 79 79 58 7a 6c 68 31 39 58 37 
0x01d0(464) : 2d 66 49 49 72 30 2d 31 4b 76 65 56 50 6e 4c 76 
0x01e0(480) : 35 38 76 54 4d 72 50 74 70 39 5a 71 49 34 78 49 
0x01f0(496) : 6a 44 61 5a 44 5a 61 59 54 43 31 73 7a 4d 6c 33 
0x0200(512) : 56 65 57 72 55 76 69 48 32 46 35 4c 4b 31 64 31 
0x0210(528) : 45 42 61 53 6c 38 2e 43 4c 2d 32 49 4d 6e 4c 72 
0x0220(544) : 51 72 67 75 6c 4d 39 6e 63 45 36 77 46 6a 78 55 
0x0230(560) : 76 57 77 65 65 75 71 7a 74 73 47 44 64 62 32 31 
0x0240(576) : 52 69 76 41 33 32 78 66 48 32 5a 57 6c 55 2e 65 
0x0250(592) : 2e 75 47 64 6d 34 61 65 77 71 72 59 51 75 5a 72 
0x0260(608) : 61 54 2d 64 56 77 47 6d 79 70 48 69 49 46 4b 47 
0x0270(624) : 38 62 74 75 66 53 57 61 47 4d 36 67 45 66 56 6f 
0x0280(640) : 36 55 51 63 50 67 4d 4c 55 64 31 6d 74 4d 30 2d 
0x0290(656) : 78 75 74 61 4b 4f 38 61 6b 45 46 79 75 6b 6b 2e 
0x02a0(672) : 44 38 61 63 70 78 78 48 59 7a 31 50 4a 31 4f 45 
0x02b0(688) : 76 47 6f 44 65 78 6f 4d 39 31 49 31 6c 30 30 79 
0x02c0(704) : 39 61 59 79 56 55 44 32 52 45 52 6b 46 71 79 39 
0x02d0(720) : 34 6b 4d 69 66 38 32 70 39 4b 71 76 4b 71 72 54 
0x02e0(736) : 50 4f 50 75 73 63 77 48 71 4d 2d 34 41 78 44 45 
0x02f0(752) : 66 5a 77 4a 69 79 36 72 47 77 6b 61 6c 61 32 38 
0x0300(768) : 79 52 30 6f 32 78 33 73 48 32 77 52 7a 37 66 63 
0x0310(784) : 68 5a 76 4e 56 2d 43 6c 77 78 4a 66 56 4c 6e 52 
0x0320(800) : 6e 6e 44 70 69 47 66 7a 49 61 4f 46 68 31 72 4d 
0x0330(816) : 61 6c 6a 33 6b 77 6f 65 72 36 48 4b 52 32 6c 43 
0x0340(832) : 71 79 2d 57 43 66 55 55 44 73 6a 75 75 59 46 53 
0x0350(848) : 48 79 57 30 73 49 65 68 4f 77 2d 71 79 6b 30 6d 
0x0360(864) : 67 30 48 73 66 6c 4b 73 62 31 6b 54 61 7a 77 72 
0x0370(880) : 77 51 72 6d 69 55 53 35 4f 52 76 4b 41 76 35 71 
0x0380(896) : 76 4d 68 59 35 2d 4f 67 31 37 38 62 34 32 51 2e 
0x0390(912) : 53 47 6c 38 6b 42 44 36 63 36 51 6d 30 56 62 76 
0x03a0(928) : 72 47 53 77 46 71 62 47 78 6a 72 30 6c 47 2e 42 
0x03b0(944) : 57 6a 4a 45 75 58 4b 56 64 6b 46 64 45 71 58 33 
0x03c0(960) : 34 7a 2e 4b 6e 5a 61 6a 47 51 6a 2d 67 68 41 41 
0x03d0(976) : 50 54 4f 48 2e 69 6d 63 51 30 44 65 71 6b 69 76 
0x03e0(992) : 68 67 44 54 44 6e 41 54 42 74 53 72 59 63 2d 78 
0x03f0(1008) : 33 4e 44 32 33 7a 65 55 7a 72 36 6f 61 6f 68 46 
0x0400(1024) : 53 75 69 66 66 73 36 72 6a 59 67 47 38 67 42 43 
0x0410(1040) : 31 4f 45 35 4d 73 5a 4a 68 66 35 46 53 6d 56 75 
0x0420(1056) : 65 42 59 49 32 65 37 6c 42 6e 2d 4a 52 42 56 54 
0x0430(1072) : 5a 6a 59 76 5a 35 44 46 6b 49 55 41 33 7a 33 68 
0x0440(1088) : 39 62 7a 42 44 34 77 4f 73 77 69 48 35 42 6b 65 
0x0450(1104) : 76 47 59 53 4c 6c 68 34 31 41 45 34 37 48 6d 47 
0x0460(1120) : 73 6a 52 34 6f 4d 53 65 47 38 76 4c 4b 65 7a 44 
0x0470(1136) : 75 56 66 45 45 4c 49 47 56 57 4b 63 6f 34 74 65 
0x0480(1152) : 6f 0d 0a 
initial input and inout tuples:
	control = (
		offset = 0x0000(0)
		virtual_offset = 0x0000(0)
		section = 0x0(0)
		activeBank = 0x0(0)
		done = 0x0(0)
		error = 0x0(0)
	)
	hdr = (
		eth = (
		isValid = 0x1(1)
		dst = 0x000000000000(0)
		src = 0x000000000000(0)
		type = 0x0800(2048)
	)
		fec = (
		isValid = 0x0(0)
		traffic_class = 0x0(0)
		block_index = 0x00(0)
		packet_index = 0x00(0)
		original_type = 0x0000(0)
	)
		ipv4 = (
		isValid = 0x1(1)
		version = 0x4(4)
		ihl = 0x5(5)
		diffserv = 0x00(0)
		totallen = 0x0475(1141)
		identification = 0x76e8(30440)
		flags = 0x2(2)
		fragoffset = 0x0000(0)
		ttl = 0x40(64)
		protocol = 0x11(17)
		hdrchecksum = 0xc18d(49549)
		srcAddr = 0x7f000001(2130706433)
		dstAddr = 0x7f000001(2130706433)
	)
		udp = (
		isValid = 0x1(1)
		sport = 0xa9d3(43475)
		dport = 0x2bcb(11211)
		len = 0x0461(1121)
		chksum = 0x0275(629)
	)
	)
	Deparser_extracts = (
		size = 0x00000150(336)
	)
clear internal and output-only tuples
processing section extract_headers_sec in stage 1
-------------------------------------------------------------------
Section extract_headers_sec starting


	method remove
	removing 42 bytes at byte 0:
 0x0000(0) : 00 00 00 00 00 00 00 00 00 00 00 00 08 00 45 00 
0x0010(16) : 04 75 76 e8 40 00 40 11 c1 8d 7f 00 00 01 7f 00 
0x0020(32) : 00 01 a9 d3 2b cb 04 61 02 75 
	method move_to_section = act_sec

updated tuples:
	control = (
		offset = 0x0000(0)
		virtual_offset = 0x0150(336)
		section = 0x1(1)
		activeBank = 0x0(0)
		done = 0x0(0)
		error = 0x0(0)
	)
	hdr = (
		eth = (
		isValid = 0x1(1)
		dst = 0x000000000000(0)
		src = 0x000000000000(0)
		type = 0x0800(2048)
	)
		fec = (
		isValid = 0x0(0)
		traffic_class = 0x0(0)
		block_index = 0x00(0)
		packet_index = 0x00(0)
		original_type = 0x0000(0)
	)
		ipv4 = (
		isValid = 0x1(1)
		version = 0x4(4)
		ihl = 0x5(5)
		diffserv = 0x00(0)
		totallen = 0x0475(1141)
		identification = 0x76e8(30440)
		flags = 0x2(2)
		fragoffset = 0x0000(0)
		ttl = 0x40(64)
		protocol = 0x11(17)
		hdrchecksum = 0xc18d(49549)
		srcAddr = 0x7f000001(2130706433)
		dstAddr = 0x7f000001(2130706433)
	)
		udp = (
		isValid = 0x1(1)
		sport = 0xa9d3(43475)
		dport = 0x2bcb(11211)
		len = 0x0461(1121)
		chksum = 0x0275(629)
	)
	)
	Deparser_extracts = (
		size = 0x00000150(336)
	)
Section extract_headers_sec finished
-------------------------------------------------------------------
processing section act_sec in stage 2
-------------------------------------------------------------------
Section act_sec starting


	method move_to_section = emit_3

updated tuples:
	control = (
		offset = 0x0000(0)
		virtual_offset = 0x0150(336)
		section = 0x5(5)
		activeBank = 0x0(0)
		done = 0x0(0)
		error = 0x0(0)
	)
	hdr = (
		eth = (
		isValid = 0x1(1)
		dst = 0x000000000000(0)
		src = 0x000000000000(0)
		type = 0x0800(2048)
	)
		fec = (
		isValid = 0x0(0)
		traffic_class = 0x0(0)
		block_index = 0x00(0)
		packet_index = 0x00(0)
		original_type = 0x0000(0)
	)
		ipv4 = (
		isValid = 0x1(1)
		version = 0x4(4)
		ihl = 0x5(5)
		diffserv = 0x00(0)
		totallen = 0x0475(1141)
		identification = 0x76e8(30440)
		flags = 0x2(2)
		fragoffset = 0x0000(0)
		ttl = 0x40(64)
		protocol = 0x11(17)
		hdrchecksum = 0xc18d(49549)
		srcAddr = 0x7f000001(2130706433)
		dstAddr = 0x7f000001(2130706433)
	)
		udp = (
		isValid = 0x1(1)
		sport = 0xa9d3(43475)
		dport = 0x2bcb(11211)
		len = 0x0461(1121)
		chksum = 0x0275(629)
	)
	)
	Deparser_extracts = (
		size = 0x00000150(336)
	)
Section act_sec finished
-------------------------------------------------------------------
processing section emit_3 in stage 3
-------------------------------------------------------------------
Section emit_3 starting

	method update (tuples)


	method update (packet)
		 dst = 0x000000000000(0)
		 src = 0x000000000000(0)
		 type = 0x0800(2048)

	method insert
	inserting 14 bytes at byte 0:
 0x0000(0) : 00 00 00 00 00 00 00 00 00 00 00 00 08 00 
	method move_to_section = emit_2

updated tuples:
	control = (
		offset = 0x0070(112)
		virtual_offset = 0x0150(336)
		section = 0x4(4)
		activeBank = 0x0(0)
		done = 0x0(0)
		error = 0x0(0)
	)
	hdr = (
		eth = (
		isValid = 0x1(1)
		dst = 0x000000000000(0)
		src = 0x000000000000(0)
		type = 0x0800(2048)
	)
		fec = (
		isValid = 0x0(0)
		traffic_class = 0x0(0)
		block_index = 0x00(0)
		packet_index = 0x00(0)
		original_type = 0x0000(0)
	)
		ipv4 = (
		isValid = 0x1(1)
		version = 0x4(4)
		ihl = 0x5(5)
		diffserv = 0x00(0)
		totallen = 0x0475(1141)
		identification = 0x76e8(30440)
		flags = 0x2(2)
		fragoffset = 0x0000(0)
		ttl = 0x40(64)
		protocol = 0x11(17)
		hdrchecksum = 0xc18d(49549)
		srcAddr = 0x7f000001(2130706433)
		dstAddr = 0x7f000001(2130706433)
	)
		udp = (
		isValid = 0x1(1)
		sport = 0xa9d3(43475)
		dport = 0x2bcb(11211)
		len = 0x0461(1121)
		chksum = 0x0275(629)
	)
	)
	Deparser_extracts = (
		size = 0x00000150(336)
	)
Section emit_3 finished
-------------------------------------------------------------------
processing section emit_2 in stage 4
-------------------------------------------------------------------
Section emit_2 starting

	method update (tuples)


	method update (packet)
		 traffic_class = 0x0(0)
		 block_index = 0x00(0)
		 packet_index = 0x00(0)
		 original_type = 0x0000(0)

	method insert
	inserting 0 bytes at byte 14:
 0x0000(0) :                                           
	method move_to_section = emit_1

updated tuples:
	control = (
		offset = 0x0070(112)
		virtual_offset = 0x0150(336)
		section = 0x3(3)
		activeBank = 0x0(0)
		done = 0x0(0)
		error = 0x0(0)
	)
	hdr = (
		eth = (
		isValid = 0x1(1)
		dst = 0x000000000000(0)
		src = 0x000000000000(0)
		type = 0x0800(2048)
	)
		fec = (
		isValid = 0x0(0)
		traffic_class = 0x0(0)
		block_index = 0x00(0)
		packet_index = 0x00(0)
		original_type = 0x0000(0)
	)
		ipv4 = (
		isValid = 0x1(1)
		version = 0x4(4)
		ihl = 0x5(5)
		diffserv = 0x00(0)
		totallen = 0x0475(1141)
		identification = 0x76e8(30440)
		flags = 0x2(2)
		fragoffset = 0x0000(0)
		ttl = 0x40(64)
		protocol = 0x11(17)
		hdrchecksum = 0xc18d(49549)
		srcAddr = 0x7f000001(2130706433)
		dstAddr = 0x7f000001(2130706433)
	)
		udp = (
		isValid = 0x1(1)
		sport = 0xa9d3(43475)
		dport = 0x2bcb(11211)
		len = 0x0461(1121)
		chksum = 0x0275(629)
	)
	)
	Deparser_extracts = (
		size = 0x00000150(336)
	)
Section emit_2 finished
-------------------------------------------------------------------
processing section emit_1 in stage 5
-------------------------------------------------------------------
Section emit_1 starting

	method update (tuples)


	method update (packet)
		 version = 0x4(4)
		 ihl = 0x5(5)
		 diffserv = 0x00(0)
		 totallen = 0x0475(1141)
		 identification = 0x76e8(30440)
		 flags = 0x2(2)
		 fragoffset = 0x0000(0)
		 ttl = 0x40(64)
		 protocol = 0x11(17)
		 hdrchecksum = 0xc18d(49549)
		 srcAddr = 0x7f000001(2130706433)
		 dstAddr = 0x7f000001(2130706433)

	method insert
	inserting 20 bytes at byte 14:
 0x0000(0) :                                           45 00 
0x0010(16) : 04 75 76 e8 40 00 40 11 c1 8d 7f 00 00 01 7f 00 
0x0020(32) : 00 01 
	method move_to_section = emit_0

updated tuples:
	control = (
		offset = 0x0110(272)
		virtual_offset = 0x0150(336)
		section = 0x2(2)
		activeBank = 0x0(0)
		done = 0x0(0)
		error = 0x0(0)
	)
	hdr = (
		eth = (
		isValid = 0x1(1)
		dst = 0x000000000000(0)
		src = 0x000000000000(0)
		type = 0x0800(2048)
	)
		fec = (
		isValid = 0x0(0)
		traffic_class = 0x0(0)
		block_index = 0x00(0)
		packet_index = 0x00(0)
		original_type = 0x0000(0)
	)
		ipv4 = (
		isValid = 0x1(1)
		version = 0x4(4)
		ihl = 0x5(5)
		diffserv = 0x00(0)
		totallen = 0x0475(1141)
		identification = 0x76e8(30440)
		flags = 0x2(2)
		fragoffset = 0x0000(0)
		ttl = 0x40(64)
		protocol = 0x11(17)
		hdrchecksum = 0xc18d(49549)
		srcAddr = 0x7f000001(2130706433)
		dstAddr = 0x7f000001(2130706433)
	)
		udp = (
		isValid = 0x1(1)
		sport = 0xa9d3(43475)
		dport = 0x2bcb(11211)
		len = 0x0461(1121)
		chksum = 0x0275(629)
	)
	)
	Deparser_extracts = (
		size = 0x00000150(336)
	)
Section emit_1 finished
-------------------------------------------------------------------
processing section emit_0 in stage 6
-------------------------------------------------------------------
Section emit_0 starting

	method update (tuples)


	method update (packet)
		 sport = 0xa9d3(43475)
		 dport = 0x2bcb(11211)
		 len = 0x0461(1121)
		 chksum = 0x0275(629)

	method insert
	inserting 8 bytes at byte 34:
0x0020(32) :       a9 d3 2b cb 04 61 02 75 
	method move_to_section = done(0)

updated tuples:
	control = (
		offset = 0x0150(336)
		virtual_offset = 0x0150(336)
		section = 0x0(0)
		activeBank = 0x0(0)
		done = 0x1(1)
		error = 0x0(0)
	)
	hdr = (
		eth = (
		isValid = 0x1(1)
		dst = 0x000000000000(0)
		src = 0x000000000000(0)
		type = 0x0800(2048)
	)
		fec = (
		isValid = 0x0(0)
		traffic_class = 0x0(0)
		block_index = 0x00(0)
		packet_index = 0x00(0)
		original_type = 0x0000(0)
	)
		ipv4 = (
		isValid = 0x1(1)
		version = 0x4(4)
		ihl = 0x5(5)
		diffserv = 0x00(0)
		totallen = 0x0475(1141)
		identification = 0x76e8(30440)
		flags = 0x2(2)
		fragoffset = 0x0000(0)
		ttl = 0x40(64)
		protocol = 0x11(17)
		hdrchecksum = 0xc18d(49549)
		srcAddr = 0x7f000001(2130706433)
		dstAddr = 0x7f000001(2130706433)
	)
		udp = (
		isValid = 0x1(1)
		sport = 0xa9d3(43475)
		dport = 0x2bcb(11211)
		len = 0x0461(1121)
		chksum = 0x0275(629)
	)
	)
	Deparser_extracts = (
		size = 0x00000150(336)
	)
Section emit_0 finished
-------------------------------------------------------------------
final inout and output tuples:

Note: this engine's wrapper will clear the upper control tuple fields on output, except for the 'control.error' field.

	control = (
		offset = 0x0000(0)
		virtual_offset = 0x0000(0)
		section = 0x0(0)
		activeBank = 0x0(0)
		done = 0x0(0)
		error = 0x0(0)
	)
output packet (1155 bytes)
 0x0000(0) : 00 00 00 00 00 00 00 00 00 00 00 00 08 00 45 00 
0x0010(16) : 04 75 76 e8 40 00 40 11 c1 8d 7f 00 00 01 7f 00 
0x0020(32) : 00 01 a9 d3 2b cb 04 61 02 75 00 08 00 00 00 01 
0x0030(48) : 01 00 73 65 74 20 14 10 10 10 10 10 10 10 6d 4d 
0x0040(64) : 77 34 32 37 5a 41 32 52 36 61 39 48 69 59 6d 47 
0x0050(80) : 4c 31 61 4d 57 67 77 79 31 55 55 37 30 45 54 77 
0x0060(96) : 4a 56 31 73 67 33 48 6d 65 51 31 4b 79 6e 61 48 
0x0070(112) : 6f 38 64 4a 70 58 20 30 20 30 20 31 30 32 34 0d 
0x0080(128) : 0a 6d 4d 77 34 32 37 5a 41 32 52 36 61 39 48 69 
0x0090(144) : 59 6d 47 4c 31 61 4d 57 67 77 79 31 55 55 37 30 
0x00a0(160) : 45 54 77 4a 56 31 73 67 33 48 6d 65 51 31 4b 79 
0x00b0(176) : 6e 61 48 6f 38 64 4a 70 58 46 71 2d 6a 78 2d 78 
0x00c0(192) : 4f 76 45 74 78 34 58 2e 4c 48 63 6c 49 77 68 33 
0x00d0(208) : 56 79 73 64 5a 39 51 34 4f 45 33 35 39 32 30 58 
0x00e0(224) : 79 46 50 74 4a 77 72 66 43 53 4f 55 4d 34 59 72 
0x00f0(240) : 30 4f 54 61 58 74 65 76 36 69 2e 46 6b 2e 6e 67 
0x0100(256) : 44 41 58 58 34 4e 41 47 70 59 6c 39 63 48 2d 64 
0x0110(272) : 66 53 42 41 4a 70 33 50 56 31 66 45 2d 51 75 44 
0x0120(288) : 61 51 6b 65 6e 75 76 61 51 65 6a 31 76 69 65 59 
0x0130(304) : 38 70 69 53 63 6c 72 36 6d 55 4b 6c 75 43 79 53 
0x0140(320) : 63 67 35 4e 59 2e 78 7a 63 66 2e 56 4c 63 31 55 
0x0150(336) : 50 6a 77 2d 53 6c 35 43 45 50 78 36 63 75 5a 43 
0x0160(352) : 59 65 61 35 63 56 32 43 38 30 68 55 63 69 79 2d 
0x0170(368) : 50 73 2e 72 62 34 31 70 54 79 77 33 71 54 47 4e 
0x0180(384) : 35 71 53 68 4a 55 74 53 55 59 77 34 45 73 33 64 
0x0190(400) : 69 31 53 48 35 54 35 5a 50 2d 63 45 53 73 62 58 
0x01a0(416) : 67 31 43 2e 56 33 51 7a 62 4b 31 70 41 34 51 73 
0x01b0(432) : 35 73 37 42 4a 43 6b 69 42 4b 77 64 42 56 38 72 
0x01c0(448) : 57 4b 70 2d 4e 44 79 79 58 7a 6c 68 31 39 58 37 
0x01d0(464) : 2d 66 49 49 72 30 2d 31 4b 76 65 56 50 6e 4c 76 
0x01e0(480) : 35 38 76 54 4d 72 50 74 70 39 5a 71 49 34 78 49 
0x01f0(496) : 6a 44 61 5a 44 5a 61 59 54 43 31 73 7a 4d 6c 33 
0x0200(512) : 56 65 57 72 55 76 69 48 32 46 35 4c 4b 31 64 31 
0x0210(528) : 45 42 61 53 6c 38 2e 43 4c 2d 32 49 4d 6e 4c 72 
0x0220(544) : 51 72 67 75 6c 4d 39 6e 63 45 36 77 46 6a 78 55 
0x0230(560) : 76 57 77 65 65 75 71 7a 74 73 47 44 64 62 32 31 
0x0240(576) : 52 69 76 41 33 32 78 66 48 32 5a 57 6c 55 2e 65 
0x0250(592) : 2e 75 47 64 6d 34 61 65 77 71 72 59 51 75 5a 72 
0x0260(608) : 61 54 2d 64 56 77 47 6d 79 70 48 69 49 46 4b 47 
0x0270(624) : 38 62 74 75 66 53 57 61 47 4d 36 67 45 66 56 6f 
0x0280(640) : 36 55 51 63 50 67 4d 4c 55 64 31 6d 74 4d 30 2d 
0x0290(656) : 78 75 74 61 4b 4f 38 61 6b 45 46 79 75 6b 6b 2e 
0x02a0(672) : 44 38 61 63 70 78 78 48 59 7a 31 50 4a 31 4f 45 
0x02b0(688) : 76 47 6f 44 65 78 6f 4d 39 31 49 31 6c 30 30 79 
0x02c0(704) : 39 61 59 79 56 55 44 32 52 45 52 6b 46 71 79 39 
0x02d0(720) : 34 6b 4d 69 66 38 32 70 39 4b 71 76 4b 71 72 54 
0x02e0(736) : 50 4f 50 75 73 63 77 48 71 4d 2d 34 41 78 44 45 
0x02f0(752) : 66 5a 77 4a 69 79 36 72 47 77 6b 61 6c 61 32 38 
0x0300(768) : 79 52 30 6f 32 78 33 73 48 32 77 52 7a 37 66 63 
0x0310(784) : 68 5a 76 4e 56 2d 43 6c 77 78 4a 66 56 4c 6e 52 
0x0320(800) : 6e 6e 44 70 69 47 66 7a 49 61 4f 46 68 31 72 4d 
0x0330(816) : 61 6c 6a 33 6b 77 6f 65 72 36 48 4b 52 32 6c 43 
0x0340(832) : 71 79 2d 57 43 66 55 55 44 73 6a 75 75 59 46 53 
0x0350(848) : 48 79 57 30 73 49 65 68 4f 77 2d 71 79 6b 30 6d 
0x0360(864) : 67 30 48 73 66 6c 4b 73 62 31 6b 54 61 7a 77 72 
0x0370(880) : 77 51 72 6d 69 55 53 35 4f 52 76 4b 41 76 35 71 
0x0380(896) : 76 4d 68 59 35 2d 4f 67 31 37 38 62 34 32 51 2e 
0x0390(912) : 53 47 6c 38 6b 42 44 36 63 36 51 6d 30 56 62 76 
0x03a0(928) : 72 47 53 77 46 71 62 47 78 6a 72 30 6c 47 2e 42 
0x03b0(944) : 57 6a 4a 45 75 58 4b 56 64 6b 46 64 45 71 58 33 
0x03c0(960) : 34 7a 2e 4b 6e 5a 61 6a 47 51 6a 2d 67 68 41 41 
0x03d0(976) : 50 54 4f 48 2e 69 6d 63 51 30 44 65 71 6b 69 76 
0x03e0(992) : 68 67 44 54 44 6e 41 54 42 74 53 72 59 63 2d 78 
0x03f0(1008) : 33 4e 44 32 33 7a 65 55 7a 72 36 6f 61 6f 68 46 
0x0400(1024) : 53 75 69 66 66 73 36 72 6a 59 67 47 38 67 42 43 
0x0410(1040) : 31 4f 45 35 4d 73 5a 4a 68 66 35 46 53 6d 56 75 
0x0420(1056) : 65 42 59 49 32 65 37 6c 42 6e 2d 4a 52 42 56 54 
0x0430(1072) : 5a 6a 59 76 5a 35 44 46 6b 49 55 41 33 7a 33 68 
0x0440(1088) : 39 62 7a 42 44 34 77 4f 73 77 69 48 35 42 6b 65 
0x0450(1104) : 76 47 59 53 4c 6c 68 34 31 41 45 34 37 48 6d 47 
0x0460(1120) : 73 6a 52 34 6f 4d 53 65 47 38 76 4c 4b 65 7a 44 
0x0470(1136) : 75 56 66 45 45 4c 49 47 56 57 4b 63 6f 34 74 65 
0x0480(1152) : 6f 0d 0a 
Exiting engine Deparser
===================================================================
final inout and output tuples:
	ioports = (
		ingress_port = 0x0(0)
		egress_port = 0x0(0)
	)
output packet (1155 bytes)
 0x0000(0) : 00 00 00 00 00 00 00 00 00 00 00 00 08 00 45 00 
0x0010(16) : 04 75 76 e8 40 00 40 11 c1 8d 7f 00 00 01 7f 00 
0x0020(32) : 00 01 a9 d3 2b cb 04 61 02 75 00 08 00 00 00 01 
0x0030(48) : 01 00 73 65 74 20 14 10 10 10 10 10 10 10 6d 4d 
0x0040(64) : 77 34 32 37 5a 41 32 52 36 61 39 48 69 59 6d 47 
0x0050(80) : 4c 31 61 4d 57 67 77 79 31 55 55 37 30 45 54 77 
0x0060(96) : 4a 56 31 73 67 33 48 6d 65 51 31 4b 79 6e 61 48 
0x0070(112) : 6f 38 64 4a 70 58 20 30 20 30 20 31 30 32 34 0d 
0x0080(128) : 0a 6d 4d 77 34 32 37 5a 41 32 52 36 61 39 48 69 
0x0090(144) : 59 6d 47 4c 31 61 4d 57 67 77 79 31 55 55 37 30 
0x00a0(160) : 45 54 77 4a 56 31 73 67 33 48 6d 65 51 31 4b 79 
0x00b0(176) : 6e 61 48 6f 38 64 4a 70 58 46 71 2d 6a 78 2d 78 
0x00c0(192) : 4f 76 45 74 78 34 58 2e 4c 48 63 6c 49 77 68 33 
0x00d0(208) : 56 79 73 64 5a 39 51 34 4f 45 33 35 39 32 30 58 
0x00e0(224) : 79 46 50 74 4a 77 72 66 43 53 4f 55 4d 34 59 72 
0x00f0(240) : 30 4f 54 61 58 74 65 76 36 69 2e 46 6b 2e 6e 67 
0x0100(256) : 44 41 58 58 34 4e 41 47 70 59 6c 39 63 48 2d 64 
0x0110(272) : 66 53 42 41 4a 70 33 50 56 31 66 45 2d 51 75 44 
0x0120(288) : 61 51 6b 65 6e 75 76 61 51 65 6a 31 76 69 65 59 
0x0130(304) : 38 70 69 53 63 6c 72 36 6d 55 4b 6c 75 43 79 53 
0x0140(320) : 63 67 35 4e 59 2e 78 7a 63 66 2e 56 4c 63 31 55 
0x0150(336) : 50 6a 77 2d 53 6c 35 43 45 50 78 36 63 75 5a 43 
0x0160(352) : 59 65 61 35 63 56 32 43 38 30 68 55 63 69 79 2d 
0x0170(368) : 50 73 2e 72 62 34 31 70 54 79 77 33 71 54 47 4e 
0x0180(384) : 35 71 53 68 4a 55 74 53 55 59 77 34 45 73 33 64 
0x0190(400) : 69 31 53 48 35 54 35 5a 50 2d 63 45 53 73 62 58 
0x01a0(416) : 67 31 43 2e 56 33 51 7a 62 4b 31 70 41 34 51 73 
0x01b0(432) : 35 73 37 42 4a 43 6b 69 42 4b 77 64 42 56 38 72 
0x01c0(448) : 57 4b 70 2d 4e 44 79 79 58 7a 6c 68 31 39 58 37 
0x01d0(464) : 2d 66 49 49 72 30 2d 31 4b 76 65 56 50 6e 4c 76 
0x01e0(480) : 35 38 76 54 4d 72 50 74 70 39 5a 71 49 34 78 49 
0x01f0(496) : 6a 44 61 5a 44 5a 61 59 54 43 31 73 7a 4d 6c 33 
0x0200(512) : 56 65 57 72 55 76 69 48 32 46 35 4c 4b 31 64 31 
0x0210(528) : 45 42 61 53 6c 38 2e 43 4c 2d 32 49 4d 6e 4c 72 
0x0220(544) : 51 72 67 75 6c 4d 39 6e 63 45 36 77 46 6a 78 55 
0x0230(560) : 76 57 77 65 65 75 71 7a 74 73 47 44 64 62 32 31 
0x0240(576) : 52 69 76 41 33 32 78 66 48 32 5a 57 6c 55 2e 65 
0x0250(592) : 2e 75 47 64 6d 34 61 65 77 71 72 59 51 75 5a 72 
0x0260(608) : 61 54 2d 64 56 77 47 6d 79 70 48 69 49 46 4b 47 
0x0270(624) : 38 62 74 75 66 53 57 61 47 4d 36 67 45 66 56 6f 
0x0280(640) : 36 55 51 63 50 67 4d 4c 55 64 31 6d 74 4d 30 2d 
0x0290(656) : 78 75 74 61 4b 4f 38 61 6b 45 46 79 75 6b 6b 2e 
0x02a0(672) : 44 38 61 63 70 78 78 48 59 7a 31 50 4a 31 4f 45 
0x02b0(688) : 76 47 6f 44 65 78 6f 4d 39 31 49 31 6c 30 30 79 
0x02c0(704) : 39 61 59 79 56 55 44 32 52 45 52 6b 46 71 79 39 
0x02d0(720) : 34 6b 4d 69 66 38 32 70 39 4b 71 76 4b 71 72 54 
0x02e0(736) : 50 4f 50 75 73 63 77 48 71 4d 2d 34 41 78 44 45 
0x02f0(752) : 66 5a 77 4a 69 79 36 72 47 77 6b 61 6c 61 32 38 
0x0300(768) : 79 52 30 6f 32 78 33 73 48 32 77 52 7a 37 66 63 
0x0310(784) : 68 5a 76 4e 56 2d 43 6c 77 78 4a 66 56 4c 6e 52 
0x0320(800) : 6e 6e 44 70 69 47 66 7a 49 61 4f 46 68 31 72 4d 
0x0330(816) : 61 6c 6a 33 6b 77 6f 65 72 36 48 4b 52 32 6c 43 
0x0340(832) : 71 79 2d 57 43 66 55 55 44 73 6a 75 75 59 46 53 
0x0350(848) : 48 79 57 30 73 49 65 68 4f 77 2d 71 79 6b 30 6d 
0x0360(864) : 67 30 48 73 66 6c 4b 73 62 31 6b 54 61 7a 77 72 
0x0370(880) : 77 51 72 6d 69 55 53 35 4f 52 76 4b 41 76 35 71 
0x0380(896) : 76 4d 68 59 35 2d 4f 67 31 37 38 62 34 32 51 2e 
0x0390(912) : 53 47 6c 38 6b 42 44 36 63 36 51 6d 30 56 62 76 
0x03a0(928) : 72 47 53 77 46 71 62 47 78 6a 72 30 6c 47 2e 42 
0x03b0(944) : 57 6a 4a 45 75 58 4b 56 64 6b 46 64 45 71 58 33 
0x03c0(960) : 34 7a 2e 4b 6e 5a 61 6a 47 51 6a 2d 67 68 41 41 
0x03d0(976) : 50 54 4f 48 2e 69 6d 63 51 30 44 65 71 6b 69 76 
0x03e0(992) : 68 67 44 54 44 6e 41 54 42 74 53 72 59 63 2d 78 
0x03f0(1008) : 33 4e 44 32 33 7a 65 55 7a 72 36 6f 61 6f 68 46 
0x0400(1024) : 53 75 69 66 66 73 36 72 6a 59 67 47 38 67 42 43 
0x0410(1040) : 31 4f 45 35 4d 73 5a 4a 68 66 35 46 53 6d 56 75 
0x0420(1056) : 65 42 59 49 32 65 37 6c 42 6e 2d 4a 52 42 56 54 
0x0430(1072) : 5a 6a 59 76 5a 35 44 46 6b 49 55 41 33 7a 33 68 
0x0440(1088) : 39 62 7a 42 44 34 77 4f 73 77 69 48 35 42 6b 65 
0x0450(1104) : 76 47 59 53 4c 6c 68 34 31 41 45 34 37 48 6d 47 
0x0460(1120) : 73 6a 52 34 6f 4d 53 65 47 38 76 4c 4b 65 7a 44 
0x0470(1136) : 75 56 66 45 45 4c 49 47 56 57 4b 63 6f 34 74 65 
0x0480(1152) : 6f 0d 0a 
Exiting system XilinxSwitch
===================================================================
Evaluating packet #10(120 bytes)
 0x0000(0) : 00 00 00 00 00 00 00 00 00 00 00 00 08 00 45 00 
0x0010(16) : 00 6a 76 ea 40 00 40 11 c5 96 7f 00 00 01 7f 00 
0x0020(32) : 00 01 a9 d3 2b cb 00 56 fe 69 00 09 00 00 00 01 
0x0030(48) : 01 00 67 65 74 20 11 10 10 10 10 10 10 10 49 4f 
0x0040(64) : 6a 53 2e 45 6d 4b 45 34 6d 4d 36 7a 6c 30 65 61 
0x0050(80) : 64 63 72 67 65 6e 34 68 77 6a 49 30 73 61 50 5a 
0x0060(96) : 30 4e 6f 6d 68 30 72 52 4e 78 50 36 79 31 67 5a 
0x0070(112) : 64 56 45 46 48 49 0d 0a 
===================================================================
Entering system XilinxSwitch
input packet (120 bytes)
 0x0000(0) : 00 00 00 00 00 00 00 00 00 00 00 00 08 00 45 00 
0x0010(16) : 00 6a 76 ea 40 00 40 11 c5 96 7f 00 00 01 7f 00 
0x0020(32) : 00 01 a9 d3 2b cb 00 56 fe 69 00 09 00 00 00 01 
0x0030(48) : 01 00 67 65 74 20 11 10 10 10 10 10 10 10 49 4f 
0x0040(64) : 6a 53 2e 45 6d 4b 45 34 6d 4d 36 7a 6c 30 65 61 
0x0050(80) : 64 63 72 67 65 6e 34 68 77 6a 49 30 73 61 50 5a 
0x0060(96) : 30 4e 6f 6d 68 30 72 52 4e 78 50 36 79 31 67 5a 
0x0070(112) : 64 56 45 46 48 49 0d 0a 
initial input and inout tuples:
	ioports = (
		ingress_port = 0x0(0)
		egress_port = 0x0(0)
	)
clear internal and output-only tuples
===================================================================
Entering engine Parser
input packet (120 bytes)
 0x0000(0) : 00 00 00 00 00 00 00 00 00 00 00 00 08 00 45 00 
0x0010(16) : 00 6a 76 ea 40 00 40 11 c5 96 7f 00 00 01 7f 00 
0x0020(32) : 00 01 a9 d3 2b cb 00 56 fe 69 00 09 00 00 00 01 
0x0030(48) : 01 00 67 65 74 20 11 10 10 10 10 10 10 10 49 4f 
0x0040(64) : 6a 53 2e 45 6d 4b 45 34 6d 4d 36 7a 6c 30 65 61 
0x0050(80) : 64 63 72 67 65 6e 34 68 77 6a 49 30 73 61 50 5a 
0x0060(96) : 30 4e 6f 6d 68 30 72 52 4e 78 50 36 79 31 67 5a 
0x0070(112) : 64 56 45 46 48 49 0d 0a 
initial input and inout tuples:
	control = (
		offset = 0x0000(0)
		virtual_offset = 0x0000(0)
		section = 0x0(0)
		activeBank = 0x0(0)
		done = 0x0(0)
		error = 0x0(0)
	)
clear internal and output-only tuples
	hdr = (
		eth = (
		isValid = 0x0(0)
		dst = 0x000000000000(0)
		src = 0x000000000000(0)
		type = 0x0000(0)
	)
		fec = (
		isValid = 0x0(0)
		traffic_class = 0x0(0)
		block_index = 0x00(0)
		packet_index = 0x00(0)
		original_type = 0x0000(0)
	)
		ipv4 = (
		isValid = 0x0(0)
		version = 0x0(0)
		ihl = 0x0(0)
		diffserv = 0x00(0)
		totallen = 0x0000(0)
		identification = 0x0000(0)
		flags = 0x0(0)
		fragoffset = 0x0000(0)
		ttl = 0x00(0)
		protocol = 0x00(0)
		hdrchecksum = 0x0000(0)
		srcAddr = 0x00000000(0)
		dstAddr = 0x00000000(0)
	)
		udp = (
		isValid = 0x0(0)
		sport = 0x0000(0)
		dport = 0x0000(0)
		len = 0x0000(0)
		chksum = 0x0000(0)
	)
	)
	Parser_extracts = (
		size = 0x00000000(0)
	)
processing section start in stage 1
-------------------------------------------------------------------
Section start starting

	extracting 112 bits at offset 0x0000(0)
		dst_0 = 0x000000000000(0)
		src_0 = 0x000000000000(0)
		type_0 = 0x0800(2048)

	method update (tuples)
		hdr.eth.isValid = 0x1(1)
		hdr.eth.dst = 0x000000000000(0)
		hdr.eth.src = 0x000000000000(0)
		hdr.eth.type = 0x0800(2048)
		Parser_extracts.size = 0x00000070(112)


	method move_to_section = parse_ipv4

updated tuples:
	control = (
		offset = 0x0070(112)
		virtual_offset = 0x0070(112)
		section = 0x2(2)
		activeBank = 0x0(0)
		done = 0x0(0)
		error = 0x0(0)
	)
	hdr = (
		eth = (
		isValid = 0x1(1)
		dst = 0x000000000000(0)
		src = 0x000000000000(0)
		type = 0x0800(2048)
	)
		fec = (
		isValid = 0x0(0)
		traffic_class = 0x0(0)
		block_index = 0x00(0)
		packet_index = 0x00(0)
		original_type = 0x0000(0)
	)
		ipv4 = (
		isValid = 0x0(0)
		version = 0x0(0)
		ihl = 0x0(0)
		diffserv = 0x00(0)
		totallen = 0x0000(0)
		identification = 0x0000(0)
		flags = 0x0(0)
		fragoffset = 0x0000(0)
		ttl = 0x00(0)
		protocol = 0x00(0)
		hdrchecksum = 0x0000(0)
		srcAddr = 0x00000000(0)
		dstAddr = 0x00000000(0)
	)
		udp = (
		isValid = 0x0(0)
		sport = 0x0000(0)
		dport = 0x0000(0)
		len = 0x0000(0)
		chksum = 0x0000(0)
	)
	)
	Parser_extracts = (
		size = 0x00000070(112)
	)
Section start finished
-------------------------------------------------------------------
processing section parse_ipv4 in stage 2
-------------------------------------------------------------------
Section parse_ipv4 starting

	extracting 160 bits at offset 0x0070(112)
		version_0 = 0x4(4)
		ihl_0 = 0x5(5)
		diffserv_0 = 0x00(0)
		totallen_0 = 0x006a(106)
		identification_0 = 0x76ea(30442)
		flags_0 = 0x2(2)
		fragoffset_0 = 0x0000(0)
		ttl_0 = 0x40(64)
		protocol_0 = 0x11(17)
		hdrchecksum_0 = 0xc596(50582)
		srcAddr_0 = 0x7f000001(2130706433)
		dstAddr_0 = 0x7f000001(2130706433)

	method update (tuples)
		hdr.ipv4.isValid = 0x1(1)
		hdr.ipv4.version = 0x4(4)
		hdr.ipv4.ihl = 0x5(5)
		hdr.ipv4.diffserv = 0x00(0)
		hdr.ipv4.totallen = 0x006a(106)
		hdr.ipv4.identification = 0x76ea(30442)
		hdr.ipv4.flags = 0x2(2)
		hdr.ipv4.fragoffset = 0x0000(0)
		hdr.ipv4.ttl = 0x40(64)
		hdr.ipv4.protocol = 0x11(17)
		hdr.ipv4.hdrchecksum = 0xc596(50582)
		hdr.ipv4.srcAddr = 0x7f000001(2130706433)
		hdr.ipv4.dstAddr = 0x7f000001(2130706433)
		Parser_extracts.size = 0x00000110(272)


	method move_to_section = parse_udp

updated tuples:
	control = (
		offset = 0x0110(272)
		virtual_offset = 0x0110(272)
		section = 0x3(3)
		activeBank = 0x0(0)
		done = 0x0(0)
		error = 0x0(0)
	)
	hdr = (
		eth = (
		isValid = 0x1(1)
		dst = 0x000000000000(0)
		src = 0x000000000000(0)
		type = 0x0800(2048)
	)
		fec = (
		isValid = 0x0(0)
		traffic_class = 0x0(0)
		block_index = 0x00(0)
		packet_index = 0x00(0)
		original_type = 0x0000(0)
	)
		ipv4 = (
		isValid = 0x1(1)
		version = 0x4(4)
		ihl = 0x5(5)
		diffserv = 0x00(0)
		totallen = 0x006a(106)
		identification = 0x76ea(30442)
		flags = 0x2(2)
		fragoffset = 0x0000(0)
		ttl = 0x40(64)
		protocol = 0x11(17)
		hdrchecksum = 0xc596(50582)
		srcAddr = 0x7f000001(2130706433)
		dstAddr = 0x7f000001(2130706433)
	)
		udp = (
		isValid = 0x0(0)
		sport = 0x0000(0)
		dport = 0x0000(0)
		len = 0x0000(0)
		chksum = 0x0000(0)
	)
	)
	Parser_extracts = (
		size = 0x00000110(272)
	)
Section parse_ipv4 finished
-------------------------------------------------------------------
processing section parse_udp in stage 3
-------------------------------------------------------------------
Section parse_udp starting

	extracting 64 bits at offset 0x0110(272)
		sport_0 = 0xa9d3(43475)
		dport_0 = 0x2bcb(11211)
		len_0 = 0x0056(86)
		chksum_0 = 0xfe69(65129)

	method update (tuples)
		hdr.udp.isValid = 0x1(1)
		hdr.udp.sport = 0xa9d3(43475)
		hdr.udp.dport = 0x2bcb(11211)
		hdr.udp.len = 0x0056(86)
		hdr.udp.chksum = 0xfe69(65129)
		Parser_extracts.size = 0x00000150(336)


	method move_to_section = accept

updated tuples:
	control = (
		offset = 0x0150(336)
		virtual_offset = 0x0150(336)
		section = 0x4(4)
		activeBank = 0x0(0)
		done = 0x0(0)
		error = 0x0(0)
	)
	hdr = (
		eth = (
		isValid = 0x1(1)
		dst = 0x000000000000(0)
		src = 0x000000000000(0)
		type = 0x0800(2048)
	)
		fec = (
		isValid = 0x0(0)
		traffic_class = 0x0(0)
		block_index = 0x00(0)
		packet_index = 0x00(0)
		original_type = 0x0000(0)
	)
		ipv4 = (
		isValid = 0x1(1)
		version = 0x4(4)
		ihl = 0x5(5)
		diffserv = 0x00(0)
		totallen = 0x006a(106)
		identification = 0x76ea(30442)
		flags = 0x2(2)
		fragoffset = 0x0000(0)
		ttl = 0x40(64)
		protocol = 0x11(17)
		hdrchecksum = 0xc596(50582)
		srcAddr = 0x7f000001(2130706433)
		dstAddr = 0x7f000001(2130706433)
	)
		udp = (
		isValid = 0x1(1)
		sport = 0xa9d3(43475)
		dport = 0x2bcb(11211)
		len = 0x0056(86)
		chksum = 0xfe69(65129)
	)
	)
	Parser_extracts = (
		size = 0x00000150(336)
	)
Section parse_udp finished
-------------------------------------------------------------------
processing section accept in stage 4
-------------------------------------------------------------------
Section accept starting


	method move_to_section = done(0)

updated tuples:
	control = (
		offset = 0x0150(336)
		virtual_offset = 0x0150(336)
		section = 0x0(0)
		activeBank = 0x0(0)
		done = 0x1(1)
		error = 0x0(0)
	)
	hdr = (
		eth = (
		isValid = 0x1(1)
		dst = 0x000000000000(0)
		src = 0x000000000000(0)
		type = 0x0800(2048)
	)
		fec = (
		isValid = 0x0(0)
		traffic_class = 0x0(0)
		block_index = 0x00(0)
		packet_index = 0x00(0)
		original_type = 0x0000(0)
	)
		ipv4 = (
		isValid = 0x1(1)
		version = 0x4(4)
		ihl = 0x5(5)
		diffserv = 0x00(0)
		totallen = 0x006a(106)
		identification = 0x76ea(30442)
		flags = 0x2(2)
		fragoffset = 0x0000(0)
		ttl = 0x40(64)
		protocol = 0x11(17)
		hdrchecksum = 0xc596(50582)
		srcAddr = 0x7f000001(2130706433)
		dstAddr = 0x7f000001(2130706433)
	)
		udp = (
		isValid = 0x1(1)
		sport = 0xa9d3(43475)
		dport = 0x2bcb(11211)
		len = 0x0056(86)
		chksum = 0xfe69(65129)
	)
	)
	Parser_extracts = (
		size = 0x00000150(336)
	)
Section accept finished
-------------------------------------------------------------------
final inout and output tuples:

Note: this engine's wrapper will clear the upper control tuple fields on output, except for the 'control.error' field.

	control = (
		offset = 0x0000(0)
		virtual_offset = 0x0000(0)
		section = 0x0(0)
		activeBank = 0x0(0)
		done = 0x0(0)
		error = 0x0(0)
	)
	hdr = (
		eth = (
		isValid = 0x1(1)
		dst = 0x000000000000(0)
		src = 0x000000000000(0)
		type = 0x0800(2048)
	)
		fec = (
		isValid = 0x0(0)
		traffic_class = 0x0(0)
		block_index = 0x00(0)
		packet_index = 0x00(0)
		original_type = 0x0000(0)
	)
		ipv4 = (
		isValid = 0x1(1)
		version = 0x4(4)
		ihl = 0x5(5)
		diffserv = 0x00(0)
		totallen = 0x006a(106)
		identification = 0x76ea(30442)
		flags = 0x2(2)
		fragoffset = 0x0000(0)
		ttl = 0x40(64)
		protocol = 0x11(17)
		hdrchecksum = 0xc596(50582)
		srcAddr = 0x7f000001(2130706433)
		dstAddr = 0x7f000001(2130706433)
	)
		udp = (
		isValid = 0x1(1)
		sport = 0xa9d3(43475)
		dport = 0x2bcb(11211)
		len = 0x0056(86)
		chksum = 0xfe69(65129)
	)
	)
	Parser_extracts = (
		size = 0x00000150(336)
	)
Exiting engine Parser
===================================================================
===================================================================
Entering engine CheckCache_lvl
input packet (0 bytes)
initial input and inout tuples:
	hdr = (
		eth = (
		isValid = 0x1(1)
		dst = 0x000000000000(0)
		src = 0x000000000000(0)
		type = 0x0800(2048)
	)
		fec = (
		isValid = 0x0(0)
		traffic_class = 0x0(0)
		block_index = 0x00(0)
		packet_index = 0x00(0)
		original_type = 0x0000(0)
	)
		ipv4 = (
		isValid = 0x1(1)
		version = 0x4(4)
		ihl = 0x5(5)
		diffserv = 0x00(0)
		totallen = 0x006a(106)
		identification = 0x76ea(30442)
		flags = 0x2(2)
		fragoffset = 0x0000(0)
		ttl = 0x40(64)
		protocol = 0x11(17)
		hdrchecksum = 0xc596(50582)
		srcAddr = 0x7f000001(2130706433)
		dstAddr = 0x7f000001(2130706433)
	)
		udp = (
		isValid = 0x1(1)
		sport = 0xa9d3(43475)
		dport = 0x2bcb(11211)
		len = 0x0056(86)
		chksum = 0xfe69(65129)
	)
	)
	ioports = (
		ingress_port = 0x0(0)
		egress_port = 0x0(0)
	)
clear internal and output-only tuples
	control = (
		offset = 0x0000(0)
		virtual_offset = 0x0000(0)
		section = 0x0(0)
		activeBank = 0x0(0)
		done = 0x0(0)
		error = 0x0(0)
	)
	CheckCache_fl = (
		forward_1 = 0x0(0)
	)
	local_state = (
		id = 0x0000(0)
	)
processing section setup in stage 1
-------------------------------------------------------------------
Section setup starting


	method move_to_section = done(0)

updated tuples:
	control = (
		offset = 0x0000(0)
		virtual_offset = 0x0000(0)
		section = 0x0(0)
		activeBank = 0x0(0)
		done = 0x1(1)
		error = 0x0(0)
	)
	CheckCache_fl = (
		forward_1 = 0x0(0)
	)
	hdr = (
		eth = (
		isValid = 0x1(1)
		dst = 0x000000000000(0)
		src = 0x000000000000(0)
		type = 0x0800(2048)
	)
		fec = (
		isValid = 0x0(0)
		traffic_class = 0x0(0)
		block_index = 0x00(0)
		packet_index = 0x00(0)
		original_type = 0x0000(0)
	)
		ipv4 = (
		isValid = 0x1(1)
		version = 0x4(4)
		ihl = 0x5(5)
		diffserv = 0x00(0)
		totallen = 0x006a(106)
		identification = 0x76ea(30442)
		flags = 0x2(2)
		fragoffset = 0x0000(0)
		ttl = 0x40(64)
		protocol = 0x11(17)
		hdrchecksum = 0xc596(50582)
		srcAddr = 0x7f000001(2130706433)
		dstAddr = 0x7f000001(2130706433)
	)
		udp = (
		isValid = 0x1(1)
		sport = 0xa9d3(43475)
		dport = 0x2bcb(11211)
		len = 0x0056(86)
		chksum = 0xfe69(65129)
	)
	)
	ioports = (
		ingress_port = 0x0(0)
		egress_port = 0x0(0)
	)
	local_state = (
		id = 0x0000(0)
	)
Section setup finished
-------------------------------------------------------------------
final inout and output tuples:

Note: this engine's wrapper will clear the upper control tuple fields on output, except for the 'control.error' field.

	CheckCache_fl = (
		forward_1 = 0x0(0)
	)
	hdr = (
		eth = (
		isValid = 0x1(1)
		dst = 0x000000000000(0)
		src = 0x000000000000(0)
		type = 0x0800(2048)
	)
		fec = (
		isValid = 0x0(0)
		traffic_class = 0x0(0)
		block_index = 0x00(0)
		packet_index = 0x00(0)
		original_type = 0x0000(0)
	)
		ipv4 = (
		isValid = 0x1(1)
		version = 0x4(4)
		ihl = 0x5(5)
		diffserv = 0x00(0)
		totallen = 0x006a(106)
		identification = 0x76ea(30442)
		flags = 0x2(2)
		fragoffset = 0x0000(0)
		ttl = 0x40(64)
		protocol = 0x11(17)
		hdrchecksum = 0xc596(50582)
		srcAddr = 0x7f000001(2130706433)
		dstAddr = 0x7f000001(2130706433)
	)
		udp = (
		isValid = 0x1(1)
		sport = 0xa9d3(43475)
		dport = 0x2bcb(11211)
		len = 0x0056(86)
		chksum = 0xfe69(65129)
	)
	)
	ioports = (
		ingress_port = 0x0(0)
		egress_port = 0x0(0)
	)
	local_state = (
		id = 0x0000(0)
	)
Exiting engine CheckCache_lvl
===================================================================
===================================================================
Entering engine CheckCache_lvl_0
input packet (0 bytes)
initial input and inout tuples:
	CheckCache_fl = (
		forward_1 = 0x0(0)
	)
	hdr = (
		eth = (
		isValid = 0x1(1)
		dst = 0x000000000000(0)
		src = 0x000000000000(0)
		type = 0x0800(2048)
	)
		fec = (
		isValid = 0x0(0)
		traffic_class = 0x0(0)
		block_index = 0x00(0)
		packet_index = 0x00(0)
		original_type = 0x0000(0)
	)
		ipv4 = (
		isValid = 0x1(1)
		version = 0x4(4)
		ihl = 0x5(5)
		diffserv = 0x00(0)
		totallen = 0x006a(106)
		identification = 0x76ea(30442)
		flags = 0x2(2)
		fragoffset = 0x0000(0)
		ttl = 0x40(64)
		protocol = 0x11(17)
		hdrchecksum = 0xc596(50582)
		srcAddr = 0x7f000001(2130706433)
		dstAddr = 0x7f000001(2130706433)
	)
		udp = (
		isValid = 0x1(1)
		sport = 0xa9d3(43475)
		dport = 0x2bcb(11211)
		len = 0x0056(86)
		chksum = 0xfe69(65129)
	)
	)
	ioports = (
		ingress_port = 0x0(0)
		egress_port = 0x0(0)
	)
	local_state = (
		id = 0x0000(0)
	)
clear internal and output-only tuples
	control = (
		offset = 0x0000(0)
		virtual_offset = 0x0000(0)
		section = 0x0(0)
		activeBank = 0x0(0)
		done = 0x0(0)
		error = 0x0(0)
	)
	memcached_input = (
		stateful_valid = 0x0(0)
	)
processing section condition_sec_0 in stage 1
-------------------------------------------------------------------
Section condition_sec_0 starting

	method update (tuples)
		local_state.id = 0x0005(5)


	method move_to_section = condition_sec

updated tuples:
	control = (
		offset = 0x0000(0)
		virtual_offset = 0x0000(0)
		section = 0x2(2)
		activeBank = 0x0(0)
		done = 0x0(0)
		error = 0x0(0)
	)
	CheckCache_fl = (
		forward_1 = 0x0(0)
	)
	hdr = (
		eth = (
		isValid = 0x1(1)
		dst = 0x000000000000(0)
		src = 0x000000000000(0)
		type = 0x0800(2048)
	)
		fec = (
		isValid = 0x0(0)
		traffic_class = 0x0(0)
		block_index = 0x00(0)
		packet_index = 0x00(0)
		original_type = 0x0000(0)
	)
		ipv4 = (
		isValid = 0x1(1)
		version = 0x4(4)
		ihl = 0x5(5)
		diffserv = 0x00(0)
		totallen = 0x006a(106)
		identification = 0x76ea(30442)
		flags = 0x2(2)
		fragoffset = 0x0000(0)
		ttl = 0x40(64)
		protocol = 0x11(17)
		hdrchecksum = 0xc596(50582)
		srcAddr = 0x7f000001(2130706433)
		dstAddr = 0x7f000001(2130706433)
	)
		udp = (
		isValid = 0x1(1)
		sport = 0xa9d3(43475)
		dport = 0x2bcb(11211)
		len = 0x0056(86)
		chksum = 0xfe69(65129)
	)
	)
	ioports = (
		ingress_port = 0x0(0)
		egress_port = 0x0(0)
	)
	local_state = (
		id = 0x0005(5)
	)
	memcached_input = (
		stateful_valid = 0x0(0)
	)
Section condition_sec_0 finished
-------------------------------------------------------------------
processing section condition_sec in stage 2
-------------------------------------------------------------------
Section condition_sec starting

	method update (tuples)
		local_state.id = 0x0005(5)


	method move_to_section = act_0_sec

updated tuples:
	control = (
		offset = 0x0000(0)
		virtual_offset = 0x0000(0)
		section = 0x1(1)
		activeBank = 0x0(0)
		done = 0x0(0)
		error = 0x0(0)
	)
	CheckCache_fl = (
		forward_1 = 0x0(0)
	)
	hdr = (
		eth = (
		isValid = 0x1(1)
		dst = 0x000000000000(0)
		src = 0x000000000000(0)
		type = 0x0800(2048)
	)
		fec = (
		isValid = 0x0(0)
		traffic_class = 0x0(0)
		block_index = 0x00(0)
		packet_index = 0x00(0)
		original_type = 0x0000(0)
	)
		ipv4 = (
		isValid = 0x1(1)
		version = 0x4(4)
		ihl = 0x5(5)
		diffserv = 0x00(0)
		totallen = 0x006a(106)
		identification = 0x76ea(30442)
		flags = 0x2(2)
		fragoffset = 0x0000(0)
		ttl = 0x40(64)
		protocol = 0x11(17)
		hdrchecksum = 0xc596(50582)
		srcAddr = 0x7f000001(2130706433)
		dstAddr = 0x7f000001(2130706433)
	)
		udp = (
		isValid = 0x1(1)
		sport = 0xa9d3(43475)
		dport = 0x2bcb(11211)
		len = 0x0056(86)
		chksum = 0xfe69(65129)
	)
	)
	ioports = (
		ingress_port = 0x0(0)
		egress_port = 0x0(0)
	)
	local_state = (
		id = 0x0005(5)
	)
	memcached_input = (
		stateful_valid = 0x0(0)
	)
Section condition_sec finished
-------------------------------------------------------------------
processing section act_0_sec in stage 3
-------------------------------------------------------------------
Section act_0_sec starting

	method update (tuples)
		memcached_input.stateful_valid = 0x1(1)
		local_state.id = 0x0004(4)


	method move_to_section = local_end

updated tuples:
	control = (
		offset = 0x0000(0)
		virtual_offset = 0x0000(0)
		section = 0x4(4)
		activeBank = 0x0(0)
		done = 0x0(0)
		error = 0x0(0)
	)
	CheckCache_fl = (
		forward_1 = 0x0(0)
	)
	hdr = (
		eth = (
		isValid = 0x1(1)
		dst = 0x000000000000(0)
		src = 0x000000000000(0)
		type = 0x0800(2048)
	)
		fec = (
		isValid = 0x0(0)
		traffic_class = 0x0(0)
		block_index = 0x00(0)
		packet_index = 0x00(0)
		original_type = 0x0000(0)
	)
		ipv4 = (
		isValid = 0x1(1)
		version = 0x4(4)
		ihl = 0x5(5)
		diffserv = 0x00(0)
		totallen = 0x006a(106)
		identification = 0x76ea(30442)
		flags = 0x2(2)
		fragoffset = 0x0000(0)
		ttl = 0x40(64)
		protocol = 0x11(17)
		hdrchecksum = 0xc596(50582)
		srcAddr = 0x7f000001(2130706433)
		dstAddr = 0x7f000001(2130706433)
	)
		udp = (
		isValid = 0x1(1)
		sport = 0xa9d3(43475)
		dport = 0x2bcb(11211)
		len = 0x0056(86)
		chksum = 0xfe69(65129)
	)
	)
	ioports = (
		ingress_port = 0x0(0)
		egress_port = 0x0(0)
	)
	local_state = (
		id = 0x0004(4)
	)
	memcached_input = (
		stateful_valid = 0x1(1)
	)
Section act_0_sec finished
-------------------------------------------------------------------
processing section local_end in stage 4
-------------------------------------------------------------------
Section local_end starting


	method move_to_section = done(0)

updated tuples:
	control = (
		offset = 0x0000(0)
		virtual_offset = 0x0000(0)
		section = 0x0(0)
		activeBank = 0x0(0)
		done = 0x1(1)
		error = 0x0(0)
	)
	CheckCache_fl = (
		forward_1 = 0x0(0)
	)
	hdr = (
		eth = (
		isValid = 0x1(1)
		dst = 0x000000000000(0)
		src = 0x000000000000(0)
		type = 0x0800(2048)
	)
		fec = (
		isValid = 0x0(0)
		traffic_class = 0x0(0)
		block_index = 0x00(0)
		packet_index = 0x00(0)
		original_type = 0x0000(0)
	)
		ipv4 = (
		isValid = 0x1(1)
		version = 0x4(4)
		ihl = 0x5(5)
		diffserv = 0x00(0)
		totallen = 0x006a(106)
		identification = 0x76ea(30442)
		flags = 0x2(2)
		fragoffset = 0x0000(0)
		ttl = 0x40(64)
		protocol = 0x11(17)
		hdrchecksum = 0xc596(50582)
		srcAddr = 0x7f000001(2130706433)
		dstAddr = 0x7f000001(2130706433)
	)
		udp = (
		isValid = 0x1(1)
		sport = 0xa9d3(43475)
		dport = 0x2bcb(11211)
		len = 0x0056(86)
		chksum = 0xfe69(65129)
	)
	)
	ioports = (
		ingress_port = 0x0(0)
		egress_port = 0x0(0)
	)
	local_state = (
		id = 0x0004(4)
	)
	memcached_input = (
		stateful_valid = 0x1(1)
	)
Section local_end finished
-------------------------------------------------------------------
final inout and output tuples:

Note: this engine's wrapper will clear the upper control tuple fields on output, except for the 'control.error' field.

	CheckCache_fl = (
		forward_1 = 0x0(0)
	)
	hdr = (
		eth = (
		isValid = 0x1(1)
		dst = 0x000000000000(0)
		src = 0x000000000000(0)
		type = 0x0800(2048)
	)
		fec = (
		isValid = 0x0(0)
		traffic_class = 0x0(0)
		block_index = 0x00(0)
		packet_index = 0x00(0)
		original_type = 0x0000(0)
	)
		ipv4 = (
		isValid = 0x1(1)
		version = 0x4(4)
		ihl = 0x5(5)
		diffserv = 0x00(0)
		totallen = 0x006a(106)
		identification = 0x76ea(30442)
		flags = 0x2(2)
		fragoffset = 0x0000(0)
		ttl = 0x40(64)
		protocol = 0x11(17)
		hdrchecksum = 0xc596(50582)
		srcAddr = 0x7f000001(2130706433)
		dstAddr = 0x7f000001(2130706433)
	)
		udp = (
		isValid = 0x1(1)
		sport = 0xa9d3(43475)
		dport = 0x2bcb(11211)
		len = 0x0056(86)
		chksum = 0xfe69(65129)
	)
	)
	ioports = (
		ingress_port = 0x0(0)
		egress_port = 0x0(0)
	)
	local_state = (
		id = 0x0004(4)
	)
	memcached_input = (
		stateful_valid = 0x1(1)
	)
Exiting engine CheckCache_lvl_0
===================================================================
===================================================================
Entering engine memcached_0
input packet (120 bytes)
 0x0000(0) : 00 00 00 00 00 00 00 00 00 00 00 00 08 00 45 00 
0x0010(16) : 00 6a 76 ea 40 00 40 11 c5 96 7f 00 00 01 7f 00 
0x0020(32) : 00 01 a9 d3 2b cb 00 56 fe 69 00 09 00 00 00 01 
0x0030(48) : 01 00 67 65 74 20 11 10 10 10 10 10 10 10 49 4f 
0x0040(64) : 6a 53 2e 45 6d 4b 45 34 6d 4d 36 7a 6c 30 65 61 
0x0050(80) : 64 63 72 67 65 6e 34 68 77 6a 49 30 73 61 50 5a 
0x0060(96) : 30 4e 6f 6d 68 30 72 52 4e 78 50 36 79 31 67 5a 
0x0070(112) : 64 56 45 46 48 49 0d 0a 
initial input and inout tuples:
	control = (
		offset = 0x0000(0)
		virtual_offset = 0x0000(0)
		section = 0x0(0)
		activeBank = 0x0(0)
		done = 0x0(0)
		error = 0x0(0)
	)
	CheckCache_fl = (
		forward_1 = 0x0(0)
	)
	hdr = (
		eth = (
		isValid = 0x1(1)
		dst = 0x000000000000(0)
		src = 0x000000000000(0)
		type = 0x0800(2048)
	)
		fec = (
		isValid = 0x0(0)
		traffic_class = 0x0(0)
		block_index = 0x00(0)
		packet_index = 0x00(0)
		original_type = 0x0000(0)
	)
		ipv4 = (
		isValid = 0x1(1)
		version = 0x4(4)
		ihl = 0x5(5)
		diffserv = 0x00(0)
		totallen = 0x006a(106)
		identification = 0x76ea(30442)
		flags = 0x2(2)
		fragoffset = 0x0000(0)
		ttl = 0x40(64)
		protocol = 0x11(17)
		hdrchecksum = 0xc596(50582)
		srcAddr = 0x7f000001(2130706433)
		dstAddr = 0x7f000001(2130706433)
	)
		udp = (
		isValid = 0x1(1)
		sport = 0xa9d3(43475)
		dport = 0x2bcb(11211)
		len = 0x0056(86)
		chksum = 0xfe69(65129)
	)
	)
	ioports = (
		ingress_port = 0x0(0)
		egress_port = 0x0(0)
	)
	local_state = (
		id = 0x0004(4)
	)
	Parser_extracts = (
		size = 0x00000150(336)
	)
	memcached_input = (
		stateful_valid = 0x1(1)
	)
clear internal and output-only tuples
	memcached_output = (
		forward = 0x0(0)
	)
Enter USER ENGINE FUNCTION
0
134235392
29967095999512593
14237706909955227392
468199414628438
18332183796843020289
72171279475544336
1157442765409241423
7661518266808616244
7876011222769886561
7233751214896067688
8604770510487769178
3480842077694095954
5654357527055394650
7230042419952684298
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<Inside MemCore<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<< 
The No. 9Packet
1
576
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<Inside MemCore<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<< 
===================================================================
Entering engine CheckCache_lvl_1
input packet (0 bytes)
initial input and inout tuples:
	CheckCache_fl = (
		forward_1 = 0x0(0)
	)
	hdr = (
		eth = (
		isValid = 0x1(1)
		dst = 0x000000000000(0)
		src = 0x000000000000(0)
		type = 0x0800(2048)
	)
		fec = (
		isValid = 0x0(0)
		traffic_class = 0x0(0)
		block_index = 0x00(0)
		packet_index = 0x00(0)
		original_type = 0x0000(0)
	)
		ipv4 = (
		isValid = 0x1(1)
		version = 0x4(4)
		ihl = 0x5(5)
		diffserv = 0x00(0)
		totallen = 0x047a(1146)
		identification = 0x76ea(30442)
		flags = 0x2(2)
		fragoffset = 0x0000(0)
		ttl = 0x40(64)
		protocol = 0x11(17)
		hdrchecksum = 0xc596(50582)
		srcAddr = 0x7f000001(2130706433)
		dstAddr = 0x7f000001(2130706433)
	)
		udp = (
		isValid = 0x1(1)
		sport = 0x2bcb(11211)
		dport = 0xa9d3(43475)
		len = 0x0466(1126)
		chksum = 0xfe69(65129)
	)
	)
	ioports = (
		ingress_port = 0x0(0)
		egress_port = 0x0(0)
	)
	local_state = (
		id = 0x0004(4)
	)
	memcached_output = (
		forward = 0x0(0)
	)
clear internal and output-only tuples
	control = (
		offset = 0x0000(0)
		virtual_offset = 0x0000(0)
		section = 0x0(0)
		activeBank = 0x0(0)
		done = 0x0(0)
		error = 0x0(0)
	)
processing section local_start in stage 1
-------------------------------------------------------------------
Section local_start starting


	method move_to_section = memcached_sec

updated tuples:
	control = (
		offset = 0x0000(0)
		virtual_offset = 0x0000(0)
		section = 0x2(2)
		activeBank = 0x0(0)
		done = 0x0(0)
		error = 0x0(0)
	)
	CheckCache_fl = (
		forward_1 = 0x0(0)
	)
	hdr = (
		eth = (
		isValid = 0x1(1)
		dst = 0x000000000000(0)
		src = 0x000000000000(0)
		type = 0x0800(2048)
	)
		fec = (
		isValid = 0x0(0)
		traffic_class = 0x0(0)
		block_index = 0x00(0)
		packet_index = 0x00(0)
		original_type = 0x0000(0)
	)
		ipv4 = (
		isValid = 0x1(1)
		version = 0x4(4)
		ihl = 0x5(5)
		diffserv = 0x00(0)
		totallen = 0x047a(1146)
		identification = 0x76ea(30442)
		flags = 0x2(2)
		fragoffset = 0x0000(0)
		ttl = 0x40(64)
		protocol = 0x11(17)
		hdrchecksum = 0xc596(50582)
		srcAddr = 0x7f000001(2130706433)
		dstAddr = 0x7f000001(2130706433)
	)
		udp = (
		isValid = 0x1(1)
		sport = 0x2bcb(11211)
		dport = 0xa9d3(43475)
		len = 0x0466(1126)
		chksum = 0xfe69(65129)
	)
	)
	ioports = (
		ingress_port = 0x0(0)
		egress_port = 0x0(0)
	)
	local_state = (
		id = 0x0004(4)
	)
	memcached_output = (
		forward = 0x0(0)
	)
Section local_start finished
-------------------------------------------------------------------
processing section memcached_sec in stage 2
-------------------------------------------------------------------
Section memcached_sec starting

	method update (tuples)
		CheckCache_fl.forward_1 = 0x0(0)


	method move_to_section = sink

updated tuples:
	control = (
		offset = 0x0000(0)
		virtual_offset = 0x0000(0)
		section = 0x3(3)
		activeBank = 0x0(0)
		done = 0x0(0)
		error = 0x0(0)
	)
	CheckCache_fl = (
		forward_1 = 0x0(0)
	)
	hdr = (
		eth = (
		isValid = 0x1(1)
		dst = 0x000000000000(0)
		src = 0x000000000000(0)
		type = 0x0800(2048)
	)
		fec = (
		isValid = 0x0(0)
		traffic_class = 0x0(0)
		block_index = 0x00(0)
		packet_index = 0x00(0)
		original_type = 0x0000(0)
	)
		ipv4 = (
		isValid = 0x1(1)
		version = 0x4(4)
		ihl = 0x5(5)
		diffserv = 0x00(0)
		totallen = 0x047a(1146)
		identification = 0x76ea(30442)
		flags = 0x2(2)
		fragoffset = 0x0000(0)
		ttl = 0x40(64)
		protocol = 0x11(17)
		hdrchecksum = 0xc596(50582)
		srcAddr = 0x7f000001(2130706433)
		dstAddr = 0x7f000001(2130706433)
	)
		udp = (
		isValid = 0x1(1)
		sport = 0x2bcb(11211)
		dport = 0xa9d3(43475)
		len = 0x0466(1126)
		chksum = 0xfe69(65129)
	)
	)
	ioports = (
		ingress_port = 0x0(0)
		egress_port = 0x0(0)
	)
	local_state = (
		id = 0x0004(4)
	)
	memcached_output = (
		forward = 0x0(0)
	)
Section memcached_sec finished
-------------------------------------------------------------------
processing section sink in stage 3
-------------------------------------------------------------------
Section sink starting


	method move_to_section = done(0)

updated tuples:
	control = (
		offset = 0x0000(0)
		virtual_offset = 0x0000(0)
		section = 0x0(0)
		activeBank = 0x0(0)
		done = 0x1(1)
		error = 0x0(0)
	)
	CheckCache_fl = (
		forward_1 = 0x0(0)
	)
	hdr = (
		eth = (
		isValid = 0x1(1)
		dst = 0x000000000000(0)
		src = 0x000000000000(0)
		type = 0x0800(2048)
	)
		fec = (
		isValid = 0x0(0)
		traffic_class = 0x0(0)
		block_index = 0x00(0)
		packet_index = 0x00(0)
		original_type = 0x0000(0)
	)
		ipv4 = (
		isValid = 0x1(1)
		version = 0x4(4)
		ihl = 0x5(5)
		diffserv = 0x00(0)
		totallen = 0x047a(1146)
		identification = 0x76ea(30442)
		flags = 0x2(2)
		fragoffset = 0x0000(0)
		ttl = 0x40(64)
		protocol = 0x11(17)
		hdrchecksum = 0xc596(50582)
		srcAddr = 0x7f000001(2130706433)
		dstAddr = 0x7f000001(2130706433)
	)
		udp = (
		isValid = 0x1(1)
		sport = 0x2bcb(11211)
		dport = 0xa9d3(43475)
		len = 0x0466(1126)
		chksum = 0xfe69(65129)
	)
	)
	ioports = (
		ingress_port = 0x0(0)
		egress_port = 0x0(0)
	)
	local_state = (
		id = 0x0004(4)
	)
	memcached_output = (
		forward = 0x0(0)
	)
Section sink finished
-------------------------------------------------------------------
final inout and output tuples:

Note: this engine's wrapper will clear the upper control tuple fields on output, except for the 'control.error' field.

	hdr = (
		eth = (
		isValid = 0x1(1)
		dst = 0x000000000000(0)
		src = 0x000000000000(0)
		type = 0x0800(2048)
	)
		fec = (
		isValid = 0x0(0)
		traffic_class = 0x0(0)
		block_index = 0x00(0)
		packet_index = 0x00(0)
		original_type = 0x0000(0)
	)
		ipv4 = (
		isValid = 0x1(1)
		version = 0x4(4)
		ihl = 0x5(5)
		diffserv = 0x00(0)
		totallen = 0x047a(1146)
		identification = 0x76ea(30442)
		flags = 0x2(2)
		fragoffset = 0x0000(0)
		ttl = 0x40(64)
		protocol = 0x11(17)
		hdrchecksum = 0xc596(50582)
		srcAddr = 0x7f000001(2130706433)
		dstAddr = 0x7f000001(2130706433)
	)
		udp = (
		isValid = 0x1(1)
		sport = 0x2bcb(11211)
		dport = 0xa9d3(43475)
		len = 0x0466(1126)
		chksum = 0xfe69(65129)
	)
	)
	ioports = (
		ingress_port = 0x0(0)
		egress_port = 0x0(0)
	)
Exiting engine CheckCache_lvl_1
===================================================================
===================================================================
Entering engine Deparser
input packet (1160 bytes)
 0x0000(0) : 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 
0x0010(16) : 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 
0x0020(32) : 00 00 00 00 00 00 00 00 00 00 00 09 00 00 00 01 
0x0030(48) : 00 00 56 41 4c 55 45 20 11 10 10 10 10 10 10 10 
0x0040(64) : 49 4f 6a 53 2e 45 6d 4b 45 34 6d 4d 36 7a 6c 30 
0x0050(80) : 65 61 64 63 72 67 65 6e 34 68 77 6a 49 30 73 61 
0x0060(96) : 50 5a 30 4e 6f 6d 68 30 72 52 4e 78 50 36 79 31 
0x0070(112) : 67 5a 64 56 45 46 48 49 20 30 20 31 30 32 34 0d 
0x0080(128) : 0a 49 4f 6a 53 2e 45 6d 4b 45 34 6d 4d 36 7a 6c 
0x0090(144) : 30 65 61 64 63 72 67 65 6e 34 68 77 6a 49 30 73 
0x00a0(160) : 61 50 5a 30 4e 6f 6d 68 30 72 52 4e 78 50 36 79 
0x00b0(176) : 31 67 5a 64 56 45 46 48 49 78 42 2d 44 42 72 6e 
0x00c0(192) : 61 50 6f 78 42 59 64 42 4e 32 59 4a 52 66 46 53 
0x00d0(208) : 4a 6f 33 70 30 4a 34 49 45 46 49 52 51 37 43 2d 
0x00e0(224) : 57 2e 77 68 58 58 74 75 61 50 42 2d 32 51 53 4d 
0x00f0(240) : 44 56 39 44 6f 44 57 30 53 6f 52 73 76 65 72 51 
0x0100(256) : 63 6d 35 37 48 79 30 72 4d 42 72 4f 63 48 6b 70 
0x0110(272) : 6d 74 30 5a 34 57 5a 57 49 2d 4e 43 64 43 63 44 
0x0120(288) : 79 68 4c 45 65 4c 33 2e 57 75 4d 36 39 35 76 77 
0x0130(304) : 79 77 54 31 51 30 58 6a 2d 75 76 63 35 56 71 31 
0x0140(320) : 41 39 46 6f 55 4a 6d 2e 42 37 35 4c 43 2e 46 38 
0x0150(336) : 75 69 39 4a 69 68 30 69 5a 76 49 65 4f 36 67 59 
0x0160(352) : 46 76 4c 6a 43 35 69 4f 43 6e 6a 4f 6c 79 58 65 
0x0170(368) : 65 67 78 4b 4c 78 30 76 71 4a 58 43 50 42 6b 66 
0x0180(384) : 35 33 4d 48 39 32 66 4c 70 4d 6b 5a 49 46 42 77 
0x0190(400) : 76 36 46 46 31 46 38 72 59 66 31 79 72 6c 62 77 
0x01a0(416) : 70 78 42 79 2e 72 48 6e 42 2d 4b 55 45 56 4f 38 
0x01b0(432) : 62 64 4e 63 74 56 52 50 38 53 4c 7a 43 77 74 2d 
0x01c0(448) : 73 33 78 71 75 43 62 33 43 77 58 51 50 77 59 2d 
0x01d0(464) : 58 76 62 4f 4f 31 6f 58 54 37 55 66 32 4d 65 75 
0x01e0(480) : 50 5a 69 48 6d 48 4b 79 42 73 4d 62 6d 76 61 48 
0x01f0(496) : 6f 39 67 42 41 53 69 65 5a 41 48 62 57 77 54 76 
0x0200(512) : 54 39 41 44 52 56 39 63 4c 57 42 35 50 6c 4d 42 
0x0210(528) : 76 30 4d 33 53 32 68 30 44 7a 62 6a 74 33 64 4b 
0x0220(544) : 43 6e 59 64 47 68 45 62 42 50 67 61 39 31 6d 32 
0x0230(560) : 31 36 35 55 39 6e 55 4d 6b 33 33 62 36 67 76 4a 
0x0240(576) : 53 52 77 69 37 38 49 49 59 79 74 68 7a 64 6a 2d 
0x0250(592) : 6a 6f 54 73 5a 78 43 48 2e 47 73 35 77 6d 4f 4d 
0x0260(608) : 42 49 33 49 52 4c 62 7a 48 53 65 46 33 4c 45 6d 
0x0270(624) : 37 68 64 68 63 70 79 61 33 70 66 2e 5a 31 4b 6b 
0x0280(640) : 4b 4e 31 6c 69 63 69 2e 32 4b 44 35 66 52 72 6d 
0x0290(656) : 36 53 52 69 47 4f 47 4a 42 77 48 6b 78 63 53 46 
0x02a0(672) : 7a 54 2e 67 33 67 65 35 2e 72 41 64 47 30 4f 4d 
0x02b0(688) : 53 70 32 69 42 49 30 4d 43 48 34 38 74 58 4e 72 
0x02c0(704) : 2e 4d 56 32 30 37 37 2d 79 49 63 43 49 2e 59 6b 
0x02d0(720) : 6f 61 52 7a 73 52 4b 33 69 4f 42 61 76 59 50 75 
0x02e0(736) : 75 75 77 76 2d 31 75 78 4a 55 37 62 54 66 4b 46 
0x02f0(752) : 44 6c 43 33 41 57 36 73 76 48 51 6f 71 70 67 69 
0x0300(768) : 68 61 62 67 63 54 62 76 79 69 56 50 4c 70 65 59 
0x0310(784) : 59 71 63 69 4c 69 59 45 2e 7a 30 6f 6d 68 55 53 
0x0320(800) : 46 34 36 72 58 69 6c 54 4f 45 73 6b 31 55 47 5a 
0x0330(816) : 4a 73 46 65 5a 6e 73 58 6b 73 4a 56 58 6e 78 6e 
0x0340(832) : 72 31 63 4e 6a 4c 71 36 5a 68 71 61 39 34 37 53 
0x0350(848) : 78 4d 34 55 38 77 2d 73 6e 49 4c 49 33 47 33 76 
0x0360(864) : 49 67 47 2d 2d 34 35 5a 6c 76 37 76 2e 46 4c 76 
0x0370(880) : 62 51 4e 6a 4b 4d 61 35 65 76 4f 68 41 52 61 53 
0x0380(896) : 35 71 52 35 76 58 65 65 51 6c 58 4f 2e 74 48 61 
0x0390(912) : 48 65 48 62 2e 72 68 63 6c 33 49 76 55 73 4c 61 
0x03a0(928) : 68 6d 66 61 48 48 43 69 30 6b 34 2d 62 4d 5a 73 
0x03b0(944) : 2e 71 52 7a 67 36 5a 50 39 72 49 65 69 64 43 4e 
0x03c0(960) : 4e 72 78 66 36 37 4c 36 72 50 35 51 6c 65 47 6b 
0x03d0(976) : 54 69 68 37 6f 45 57 79 34 6f 61 6d 50 6d 37 6d 
0x03e0(992) : 62 32 50 68 39 6b 6e 2d 38 74 50 74 56 67 62 79 
0x03f0(1008) : 4d 47 33 38 56 5a 34 5a 4c 65 4a 6b 4f 51 56 7a 
0x0400(1024) : 53 75 65 62 64 51 61 6c 48 2e 63 6d 65 43 6a 2e 
0x0410(1040) : 53 6d 36 78 4b 42 55 66 70 6e 4f 43 42 74 39 64 
0x0420(1056) : 6c 6f 44 4d 43 6e 35 54 6c 69 44 4e 75 77 4c 4b 
0x0430(1072) : 68 53 47 2d 64 6b 65 51 57 30 63 68 74 6d 4a 64 
0x0440(1088) : 59 57 7a 6b 48 33 42 31 6c 4f 4f 64 4a 6b 78 2e 
0x0450(1104) : 41 42 7a 6e 77 62 42 51 63 6f 35 54 59 4f 34 34 
0x0460(1120) : 75 32 6f 41 35 7a 42 71 4c 5a 52 65 48 4d 63 52 
0x0470(1136) : 59 5a 43 53 39 4f 73 6c 41 78 43 69 4b 48 6d 43 
0x0480(1152) : 4a 0d 0a 45 4e 44 0d 0a 
initial input and inout tuples:
	control = (
		offset = 0x0000(0)
		virtual_offset = 0x0000(0)
		section = 0x0(0)
		activeBank = 0x0(0)
		done = 0x0(0)
		error = 0x0(0)
	)
	hdr = (
		eth = (
		isValid = 0x1(1)
		dst = 0x000000000000(0)
		src = 0x000000000000(0)
		type = 0x0800(2048)
	)
		fec = (
		isValid = 0x0(0)
		traffic_class = 0x0(0)
		block_index = 0x00(0)
		packet_index = 0x00(0)
		original_type = 0x0000(0)
	)
		ipv4 = (
		isValid = 0x1(1)
		version = 0x4(4)
		ihl = 0x5(5)
		diffserv = 0x00(0)
		totallen = 0x047a(1146)
		identification = 0x76ea(30442)
		flags = 0x2(2)
		fragoffset = 0x0000(0)
		ttl = 0x40(64)
		protocol = 0x11(17)
		hdrchecksum = 0xc596(50582)
		srcAddr = 0x7f000001(2130706433)
		dstAddr = 0x7f000001(2130706433)
	)
		udp = (
		isValid = 0x1(1)
		sport = 0x2bcb(11211)
		dport = 0xa9d3(43475)
		len = 0x0466(1126)
		chksum = 0xfe69(65129)
	)
	)
	Deparser_extracts = (
		size = 0x00000150(336)
	)
clear internal and output-only tuples
processing section extract_headers_sec in stage 1
-------------------------------------------------------------------
Section extract_headers_sec starting


	method remove
	removing 42 bytes at byte 0:
 0x0000(0) : 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 
0x0010(16) : 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 
0x0020(32) : 00 00 00 00 00 00 00 00 00 00 
	method move_to_section = act_sec

updated tuples:
	control = (
		offset = 0x0000(0)
		virtual_offset = 0x0150(336)
		section = 0x1(1)
		activeBank = 0x0(0)
		done = 0x0(0)
		error = 0x0(0)
	)
	hdr = (
		eth = (
		isValid = 0x1(1)
		dst = 0x000000000000(0)
		src = 0x000000000000(0)
		type = 0x0800(2048)
	)
		fec = (
		isValid = 0x0(0)
		traffic_class = 0x0(0)
		block_index = 0x00(0)
		packet_index = 0x00(0)
		original_type = 0x0000(0)
	)
		ipv4 = (
		isValid = 0x1(1)
		version = 0x4(4)
		ihl = 0x5(5)
		diffserv = 0x00(0)
		totallen = 0x047a(1146)
		identification = 0x76ea(30442)
		flags = 0x2(2)
		fragoffset = 0x0000(0)
		ttl = 0x40(64)
		protocol = 0x11(17)
		hdrchecksum = 0xc596(50582)
		srcAddr = 0x7f000001(2130706433)
		dstAddr = 0x7f000001(2130706433)
	)
		udp = (
		isValid = 0x1(1)
		sport = 0x2bcb(11211)
		dport = 0xa9d3(43475)
		len = 0x0466(1126)
		chksum = 0xfe69(65129)
	)
	)
	Deparser_extracts = (
		size = 0x00000150(336)
	)
Section extract_headers_sec finished
-------------------------------------------------------------------
processing section act_sec in stage 2
-------------------------------------------------------------------
Section act_sec starting


	method move_to_section = emit_3

updated tuples:
	control = (
		offset = 0x0000(0)
		virtual_offset = 0x0150(336)
		section = 0x5(5)
		activeBank = 0x0(0)
		done = 0x0(0)
		error = 0x0(0)
	)
	hdr = (
		eth = (
		isValid = 0x1(1)
		dst = 0x000000000000(0)
		src = 0x000000000000(0)
		type = 0x0800(2048)
	)
		fec = (
		isValid = 0x0(0)
		traffic_class = 0x0(0)
		block_index = 0x00(0)
		packet_index = 0x00(0)
		original_type = 0x0000(0)
	)
		ipv4 = (
		isValid = 0x1(1)
		version = 0x4(4)
		ihl = 0x5(5)
		diffserv = 0x00(0)
		totallen = 0x047a(1146)
		identification = 0x76ea(30442)
		flags = 0x2(2)
		fragoffset = 0x0000(0)
		ttl = 0x40(64)
		protocol = 0x11(17)
		hdrchecksum = 0xc596(50582)
		srcAddr = 0x7f000001(2130706433)
		dstAddr = 0x7f000001(2130706433)
	)
		udp = (
		isValid = 0x1(1)
		sport = 0x2bcb(11211)
		dport = 0xa9d3(43475)
		len = 0x0466(1126)
		chksum = 0xfe69(65129)
	)
	)
	Deparser_extracts = (
		size = 0x00000150(336)
	)
Section act_sec finished
-------------------------------------------------------------------
processing section emit_3 in stage 3
-------------------------------------------------------------------
Section emit_3 starting

	method update (tuples)


	method update (packet)
		 dst = 0x000000000000(0)
		 src = 0x000000000000(0)
		 type = 0x0800(2048)

	method insert
	inserting 14 bytes at byte 0:
 0x0000(0) : 00 00 00 00 00 00 00 00 00 00 00 00 08 00 
	method move_to_section = emit_2

updated tuples:
	control = (
		offset = 0x0070(112)
		virtual_offset = 0x0150(336)
		section = 0x4(4)
		activeBank = 0x0(0)
		done = 0x0(0)
		error = 0x0(0)
	)
	hdr = (
		eth = (
		isValid = 0x1(1)
		dst = 0x000000000000(0)
		src = 0x000000000000(0)
		type = 0x0800(2048)
	)
		fec = (
		isValid = 0x0(0)
		traffic_class = 0x0(0)
		block_index = 0x00(0)
		packet_index = 0x00(0)
		original_type = 0x0000(0)
	)
		ipv4 = (
		isValid = 0x1(1)
		version = 0x4(4)
		ihl = 0x5(5)
		diffserv = 0x00(0)
		totallen = 0x047a(1146)
		identification = 0x76ea(30442)
		flags = 0x2(2)
		fragoffset = 0x0000(0)
		ttl = 0x40(64)
		protocol = 0x11(17)
		hdrchecksum = 0xc596(50582)
		srcAddr = 0x7f000001(2130706433)
		dstAddr = 0x7f000001(2130706433)
	)
		udp = (
		isValid = 0x1(1)
		sport = 0x2bcb(11211)
		dport = 0xa9d3(43475)
		len = 0x0466(1126)
		chksum = 0xfe69(65129)
	)
	)
	Deparser_extracts = (
		size = 0x00000150(336)
	)
Section emit_3 finished
-------------------------------------------------------------------
processing section emit_2 in stage 4
-------------------------------------------------------------------
Section emit_2 starting

	method update (tuples)


	method update (packet)
		 traffic_class = 0x0(0)
		 block_index = 0x00(0)
		 packet_index = 0x00(0)
		 original_type = 0x0000(0)

	method insert
	inserting 0 bytes at byte 14:
 0x0000(0) :                                           
	method move_to_section = emit_1

updated tuples:
	control = (
		offset = 0x0070(112)
		virtual_offset = 0x0150(336)
		section = 0x3(3)
		activeBank = 0x0(0)
		done = 0x0(0)
		error = 0x0(0)
	)
	hdr = (
		eth = (
		isValid = 0x1(1)
		dst = 0x000000000000(0)
		src = 0x000000000000(0)
		type = 0x0800(2048)
	)
		fec = (
		isValid = 0x0(0)
		traffic_class = 0x0(0)
		block_index = 0x00(0)
		packet_index = 0x00(0)
		original_type = 0x0000(0)
	)
		ipv4 = (
		isValid = 0x1(1)
		version = 0x4(4)
		ihl = 0x5(5)
		diffserv = 0x00(0)
		totallen = 0x047a(1146)
		identification = 0x76ea(30442)
		flags = 0x2(2)
		fragoffset = 0x0000(0)
		ttl = 0x40(64)
		protocol = 0x11(17)
		hdrchecksum = 0xc596(50582)
		srcAddr = 0x7f000001(2130706433)
		dstAddr = 0x7f000001(2130706433)
	)
		udp = (
		isValid = 0x1(1)
		sport = 0x2bcb(11211)
		dport = 0xa9d3(43475)
		len = 0x0466(1126)
		chksum = 0xfe69(65129)
	)
	)
	Deparser_extracts = (
		size = 0x00000150(336)
	)
Section emit_2 finished
-------------------------------------------------------------------
processing section emit_1 in stage 5
-------------------------------------------------------------------
Section emit_1 starting

	method update (tuples)


	method update (packet)
		 version = 0x4(4)
		 ihl = 0x5(5)
		 diffserv = 0x00(0)
		 totallen = 0x047a(1146)
		 identification = 0x76ea(30442)
		 flags = 0x2(2)
		 fragoffset = 0x0000(0)
		 ttl = 0x40(64)
		 protocol = 0x11(17)
		 hdrchecksum = 0xc596(50582)
		 srcAddr = 0x7f000001(2130706433)
		 dstAddr = 0x7f000001(2130706433)

	method insert
	inserting 20 bytes at byte 14:
 0x0000(0) :                                           45 00 
0x0010(16) : 04 7a 76 ea 40 00 40 11 c5 96 7f 00 00 01 7f 00 
0x0020(32) : 00 01 
	method move_to_section = emit_0

updated tuples:
	control = (
		offset = 0x0110(272)
		virtual_offset = 0x0150(336)
		section = 0x2(2)
		activeBank = 0x0(0)
		done = 0x0(0)
		error = 0x0(0)
	)
	hdr = (
		eth = (
		isValid = 0x1(1)
		dst = 0x000000000000(0)
		src = 0x000000000000(0)
		type = 0x0800(2048)
	)
		fec = (
		isValid = 0x0(0)
		traffic_class = 0x0(0)
		block_index = 0x00(0)
		packet_index = 0x00(0)
		original_type = 0x0000(0)
	)
		ipv4 = (
		isValid = 0x1(1)
		version = 0x4(4)
		ihl = 0x5(5)
		diffserv = 0x00(0)
		totallen = 0x047a(1146)
		identification = 0x76ea(30442)
		flags = 0x2(2)
		fragoffset = 0x0000(0)
		ttl = 0x40(64)
		protocol = 0x11(17)
		hdrchecksum = 0xc596(50582)
		srcAddr = 0x7f000001(2130706433)
		dstAddr = 0x7f000001(2130706433)
	)
		udp = (
		isValid = 0x1(1)
		sport = 0x2bcb(11211)
		dport = 0xa9d3(43475)
		len = 0x0466(1126)
		chksum = 0xfe69(65129)
	)
	)
	Deparser_extracts = (
		size = 0x00000150(336)
	)
Section emit_1 finished
-------------------------------------------------------------------
processing section emit_0 in stage 6
-------------------------------------------------------------------
Section emit_0 starting

	method update (tuples)


	method update (packet)
		 sport = 0x2bcb(11211)
		 dport = 0xa9d3(43475)
		 len = 0x0466(1126)
		 chksum = 0xfe69(65129)

	method insert
	inserting 8 bytes at byte 34:
0x0020(32) :       2b cb a9 d3 04 66 fe 69 
	method move_to_section = done(0)

updated tuples:
	control = (
		offset = 0x0150(336)
		virtual_offset = 0x0150(336)
		section = 0x0(0)
		activeBank = 0x0(0)
		done = 0x1(1)
		error = 0x0(0)
	)
	hdr = (
		eth = (
		isValid = 0x1(1)
		dst = 0x000000000000(0)
		src = 0x000000000000(0)
		type = 0x0800(2048)
	)
		fec = (
		isValid = 0x0(0)
		traffic_class = 0x0(0)
		block_index = 0x00(0)
		packet_index = 0x00(0)
		original_type = 0x0000(0)
	)
		ipv4 = (
		isValid = 0x1(1)
		version = 0x4(4)
		ihl = 0x5(5)
		diffserv = 0x00(0)
		totallen = 0x047a(1146)
		identification = 0x76ea(30442)
		flags = 0x2(2)
		fragoffset = 0x0000(0)
		ttl = 0x40(64)
		protocol = 0x11(17)
		hdrchecksum = 0xc596(50582)
		srcAddr = 0x7f000001(2130706433)
		dstAddr = 0x7f000001(2130706433)
	)
		udp = (
		isValid = 0x1(1)
		sport = 0x2bcb(11211)
		dport = 0xa9d3(43475)
		len = 0x0466(1126)
		chksum = 0xfe69(65129)
	)
	)
	Deparser_extracts = (
		size = 0x00000150(336)
	)
Section emit_0 finished
-------------------------------------------------------------------
final inout and output tuples:

Note: this engine's wrapper will clear the upper control tuple fields on output, except for the 'control.error' field.

	control = (
		offset = 0x0000(0)
		virtual_offset = 0x0000(0)
		section = 0x0(0)
		activeBank = 0x0(0)
		done = 0x0(0)
		error = 0x0(0)
	)
output packet (1160 bytes)
 0x0000(0) : 00 00 00 00 00 00 00 00 00 00 00 00 08 00 45 00 
0x0010(16) : 04 7a 76 ea 40 00 40 11 c5 96 7f 00 00 01 7f 00 
0x0020(32) : 00 01 2b cb a9 d3 04 66 fe 69 00 09 00 00 00 01 
0x0030(48) : 00 00 56 41 4c 55 45 20 11 10 10 10 10 10 10 10 
0x0040(64) : 49 4f 6a 53 2e 45 6d 4b 45 34 6d 4d 36 7a 6c 30 
0x0050(80) : 65 61 64 63 72 67 65 6e 34 68 77 6a 49 30 73 61 
0x0060(96) : 50 5a 30 4e 6f 6d 68 30 72 52 4e 78 50 36 79 31 
0x0070(112) : 67 5a 64 56 45 46 48 49 20 30 20 31 30 32 34 0d 
0x0080(128) : 0a 49 4f 6a 53 2e 45 6d 4b 45 34 6d 4d 36 7a 6c 
0x0090(144) : 30 65 61 64 63 72 67 65 6e 34 68 77 6a 49 30 73 
0x00a0(160) : 61 50 5a 30 4e 6f 6d 68 30 72 52 4e 78 50 36 79 
0x00b0(176) : 31 67 5a 64 56 45 46 48 49 78 42 2d 44 42 72 6e 
0x00c0(192) : 61 50 6f 78 42 59 64 42 4e 32 59 4a 52 66 46 53 
0x00d0(208) : 4a 6f 33 70 30 4a 34 49 45 46 49 52 51 37 43 2d 
0x00e0(224) : 57 2e 77 68 58 58 74 75 61 50 42 2d 32 51 53 4d 
0x00f0(240) : 44 56 39 44 6f 44 57 30 53 6f 52 73 76 65 72 51 
0x0100(256) : 63 6d 35 37 48 79 30 72 4d 42 72 4f 63 48 6b 70 
0x0110(272) : 6d 74 30 5a 34 57 5a 57 49 2d 4e 43 64 43 63 44 
0x0120(288) : 79 68 4c 45 65 4c 33 2e 57 75 4d 36 39 35 76 77 
0x0130(304) : 79 77 54 31 51 30 58 6a 2d 75 76 63 35 56 71 31 
0x0140(320) : 41 39 46 6f 55 4a 6d 2e 42 37 35 4c 43 2e 46 38 
0x0150(336) : 75 69 39 4a 69 68 30 69 5a 76 49 65 4f 36 67 59 
0x0160(352) : 46 76 4c 6a 43 35 69 4f 43 6e 6a 4f 6c 79 58 65 
0x0170(368) : 65 67 78 4b 4c 78 30 76 71 4a 58 43 50 42 6b 66 
0x0180(384) : 35 33 4d 48 39 32 66 4c 70 4d 6b 5a 49 46 42 77 
0x0190(400) : 76 36 46 46 31 46 38 72 59 66 31 79 72 6c 62 77 
0x01a0(416) : 70 78 42 79 2e 72 48 6e 42 2d 4b 55 45 56 4f 38 
0x01b0(432) : 62 64 4e 63 74 56 52 50 38 53 4c 7a 43 77 74 2d 
0x01c0(448) : 73 33 78 71 75 43 62 33 43 77 58 51 50 77 59 2d 
0x01d0(464) : 58 76 62 4f 4f 31 6f 58 54 37 55 66 32 4d 65 75 
0x01e0(480) : 50 5a 69 48 6d 48 4b 79 42 73 4d 62 6d 76 61 48 
0x01f0(496) : 6f 39 67 42 41 53 69 65 5a 41 48 62 57 77 54 76 
0x0200(512) : 54 39 41 44 52 56 39 63 4c 57 42 35 50 6c 4d 42 
0x0210(528) : 76 30 4d 33 53 32 68 30 44 7a 62 6a 74 33 64 4b 
0x0220(544) : 43 6e 59 64 47 68 45 62 42 50 67 61 39 31 6d 32 
0x0230(560) : 31 36 35 55 39 6e 55 4d 6b 33 33 62 36 67 76 4a 
0x0240(576) : 53 52 77 69 37 38 49 49 59 79 74 68 7a 64 6a 2d 
0x0250(592) : 6a 6f 54 73 5a 78 43 48 2e 47 73 35 77 6d 4f 4d 
0x0260(608) : 42 49 33 49 52 4c 62 7a 48 53 65 46 33 4c 45 6d 
0x0270(624) : 37 68 64 68 63 70 79 61 33 70 66 2e 5a 31 4b 6b 
0x0280(640) : 4b 4e 31 6c 69 63 69 2e 32 4b 44 35 66 52 72 6d 
0x0290(656) : 36 53 52 69 47 4f 47 4a 42 77 48 6b 78 63 53 46 
0x02a0(672) : 7a 54 2e 67 33 67 65 35 2e 72 41 64 47 30 4f 4d 
0x02b0(688) : 53 70 32 69 42 49 30 4d 43 48 34 38 74 58 4e 72 
0x02c0(704) : 2e 4d 56 32 30 37 37 2d 79 49 63 43 49 2e 59 6b 
0x02d0(720) : 6f 61 52 7a 73 52 4b 33 69 4f 42 61 76 59 50 75 
0x02e0(736) : 75 75 77 76 2d 31 75 78 4a 55 37 62 54 66 4b 46 
0x02f0(752) : 44 6c 43 33 41 57 36 73 76 48 51 6f 71 70 67 69 
0x0300(768) : 68 61 62 67 63 54 62 76 79 69 56 50 4c 70 65 59 
0x0310(784) : 59 71 63 69 4c 69 59 45 2e 7a 30 6f 6d 68 55 53 
0x0320(800) : 46 34 36 72 58 69 6c 54 4f 45 73 6b 31 55 47 5a 
0x0330(816) : 4a 73 46 65 5a 6e 73 58 6b 73 4a 56 58 6e 78 6e 
0x0340(832) : 72 31 63 4e 6a 4c 71 36 5a 68 71 61 39 34 37 53 
0x0350(848) : 78 4d 34 55 38 77 2d 73 6e 49 4c 49 33 47 33 76 
0x0360(864) : 49 67 47 2d 2d 34 35 5a 6c 76 37 76 2e 46 4c 76 
0x0370(880) : 62 51 4e 6a 4b 4d 61 35 65 76 4f 68 41 52 61 53 
0x0380(896) : 35 71 52 35 76 58 65 65 51 6c 58 4f 2e 74 48 61 
0x0390(912) : 48 65 48 62 2e 72 68 63 6c 33 49 76 55 73 4c 61 
0x03a0(928) : 68 6d 66 61 48 48 43 69 30 6b 34 2d 62 4d 5a 73 
0x03b0(944) : 2e 71 52 7a 67 36 5a 50 39 72 49 65 69 64 43 4e 
0x03c0(960) : 4e 72 78 66 36 37 4c 36 72 50 35 51 6c 65 47 6b 
0x03d0(976) : 54 69 68 37 6f 45 57 79 34 6f 61 6d 50 6d 37 6d 
0x03e0(992) : 62 32 50 68 39 6b 6e 2d 38 74 50 74 56 67 62 79 
0x03f0(1008) : 4d 47 33 38 56 5a 34 5a 4c 65 4a 6b 4f 51 56 7a 
0x0400(1024) : 53 75 65 62 64 51 61 6c 48 2e 63 6d 65 43 6a 2e 
0x0410(1040) : 53 6d 36 78 4b 42 55 66 70 6e 4f 43 42 74 39 64 
0x0420(1056) : 6c 6f 44 4d 43 6e 35 54 6c 69 44 4e 75 77 4c 4b 
0x0430(1072) : 68 53 47 2d 64 6b 65 51 57 30 63 68 74 6d 4a 64 
0x0440(1088) : 59 57 7a 6b 48 33 42 31 6c 4f 4f 64 4a 6b 78 2e 
0x0450(1104) : 41 42 7a 6e 77 62 42 51 63 6f 35 54 59 4f 34 34 
0x0460(1120) : 75 32 6f 41 35 7a 42 71 4c 5a 52 65 48 4d 63 52 
0x0470(1136) : 59 5a 43 53 39 4f 73 6c 41 78 43 69 4b 48 6d 43 
0x0480(1152) : 4a 0d 0a 45 4e 44 0d 0a 
Exiting engine Deparser
===================================================================
final inout and output tuples:
	ioports = (
		ingress_port = 0x0(0)
		egress_port = 0x0(0)
	)
output packet (1160 bytes)
 0x0000(0) : 00 00 00 00 00 00 00 00 00 00 00 00 08 00 45 00 
0x0010(16) : 04 7a 76 ea 40 00 40 11 c5 96 7f 00 00 01 7f 00 
0x0020(32) : 00 01 2b cb a9 d3 04 66 fe 69 00 09 00 00 00 01 
0x0030(48) : 00 00 56 41 4c 55 45 20 11 10 10 10 10 10 10 10 
0x0040(64) : 49 4f 6a 53 2e 45 6d 4b 45 34 6d 4d 36 7a 6c 30 
0x0050(80) : 65 61 64 63 72 67 65 6e 34 68 77 6a 49 30 73 61 
0x0060(96) : 50 5a 30 4e 6f 6d 68 30 72 52 4e 78 50 36 79 31 
0x0070(112) : 67 5a 64 56 45 46 48 49 20 30 20 31 30 32 34 0d 
0x0080(128) : 0a 49 4f 6a 53 2e 45 6d 4b 45 34 6d 4d 36 7a 6c 
0x0090(144) : 30 65 61 64 63 72 67 65 6e 34 68 77 6a 49 30 73 
0x00a0(160) : 61 50 5a 30 4e 6f 6d 68 30 72 52 4e 78 50 36 79 
0x00b0(176) : 31 67 5a 64 56 45 46 48 49 78 42 2d 44 42 72 6e 
0x00c0(192) : 61 50 6f 78 42 59 64 42 4e 32 59 4a 52 66 46 53 
0x00d0(208) : 4a 6f 33 70 30 4a 34 49 45 46 49 52 51 37 43 2d 
0x00e0(224) : 57 2e 77 68 58 58 74 75 61 50 42 2d 32 51 53 4d 
0x00f0(240) : 44 56 39 44 6f 44 57 30 53 6f 52 73 76 65 72 51 
0x0100(256) : 63 6d 35 37 48 79 30 72 4d 42 72 4f 63 48 6b 70 
0x0110(272) : 6d 74 30 5a 34 57 5a 57 49 2d 4e 43 64 43 63 44 
0x0120(288) : 79 68 4c 45 65 4c 33 2e 57 75 4d 36 39 35 76 77 
0x0130(304) : 79 77 54 31 51 30 58 6a 2d 75 76 63 35 56 71 31 
0x0140(320) : 41 39 46 6f 55 4a 6d 2e 42 37 35 4c 43 2e 46 38 
0x0150(336) : 75 69 39 4a 69 68 30 69 5a 76 49 65 4f 36 67 59 
0x0160(352) : 46 76 4c 6a 43 35 69 4f 43 6e 6a 4f 6c 79 58 65 
0x0170(368) : 65 67 78 4b 4c 78 30 76 71 4a 58 43 50 42 6b 66 
0x0180(384) : 35 33 4d 48 39 32 66 4c 70 4d 6b 5a 49 46 42 77 
0x0190(400) : 76 36 46 46 31 46 38 72 59 66 31 79 72 6c 62 77 
0x01a0(416) : 70 78 42 79 2e 72 48 6e 42 2d 4b 55 45 56 4f 38 
0x01b0(432) : 62 64 4e 63 74 56 52 50 38 53 4c 7a 43 77 74 2d 
0x01c0(448) : 73 33 78 71 75 43 62 33 43 77 58 51 50 77 59 2d 
0x01d0(464) : 58 76 62 4f 4f 31 6f 58 54 37 55 66 32 4d 65 75 
0x01e0(480) : 50 5a 69 48 6d 48 4b 79 42 73 4d 62 6d 76 61 48 
0x01f0(496) : 6f 39 67 42 41 53 69 65 5a 41 48 62 57 77 54 76 
0x0200(512) : 54 39 41 44 52 56 39 63 4c 57 42 35 50 6c 4d 42 
0x0210(528) : 76 30 4d 33 53 32 68 30 44 7a 62 6a 74 33 64 4b 
0x0220(544) : 43 6e 59 64 47 68 45 62 42 50 67 61 39 31 6d 32 
0x0230(560) : 31 36 35 55 39 6e 55 4d 6b 33 33 62 36 67 76 4a 
0x0240(576) : 53 52 77 69 37 38 49 49 59 79 74 68 7a 64 6a 2d 
0x0250(592) : 6a 6f 54 73 5a 78 43 48 2e 47 73 35 77 6d 4f 4d 
0x0260(608) : 42 49 33 49 52 4c 62 7a 48 53 65 46 33 4c 45 6d 
0x0270(624) : 37 68 64 68 63 70 79 61 33 70 66 2e 5a 31 4b 6b 
0x0280(640) : 4b 4e 31 6c 69 63 69 2e 32 4b 44 35 66 52 72 6d 
0x0290(656) : 36 53 52 69 47 4f 47 4a 42 77 48 6b 78 63 53 46 
0x02a0(672) : 7a 54 2e 67 33 67 65 35 2e 72 41 64 47 30 4f 4d 
0x02b0(688) : 53 70 32 69 42 49 30 4d 43 48 34 38 74 58 4e 72 
0x02c0(704) : 2e 4d 56 32 30 37 37 2d 79 49 63 43 49 2e 59 6b 
0x02d0(720) : 6f 61 52 7a 73 52 4b 33 69 4f 42 61 76 59 50 75 
0x02e0(736) : 75 75 77 76 2d 31 75 78 4a 55 37 62 54 66 4b 46 
0x02f0(752) : 44 6c 43 33 41 57 36 73 76 48 51 6f 71 70 67 69 
0x0300(768) : 68 61 62 67 63 54 62 76 79 69 56 50 4c 70 65 59 
0x0310(784) : 59 71 63 69 4c 69 59 45 2e 7a 30 6f 6d 68 55 53 
0x0320(800) : 46 34 36 72 58 69 6c 54 4f 45 73 6b 31 55 47 5a 
0x0330(816) : 4a 73 46 65 5a 6e 73 58 6b 73 4a 56 58 6e 78 6e 
0x0340(832) : 72 31 63 4e 6a 4c 71 36 5a 68 71 61 39 34 37 53 
0x0350(848) : 78 4d 34 55 38 77 2d 73 6e 49 4c 49 33 47 33 76 
0x0360(864) : 49 67 47 2d 2d 34 35 5a 6c 76 37 76 2e 46 4c 76 
0x0370(880) : 62 51 4e 6a 4b 4d 61 35 65 76 4f 68 41 52 61 53 
0x0380(896) : 35 71 52 35 76 58 65 65 51 6c 58 4f 2e 74 48 61 
0x0390(912) : 48 65 48 62 2e 72 68 63 6c 33 49 76 55 73 4c 61 
0x03a0(928) : 68 6d 66 61 48 48 43 69 30 6b 34 2d 62 4d 5a 73 
0x03b0(944) : 2e 71 52 7a 67 36 5a 50 39 72 49 65 69 64 43 4e 
0x03c0(960) : 4e 72 78 66 36 37 4c 36 72 50 35 51 6c 65 47 6b 
0x03d0(976) : 54 69 68 37 6f 45 57 79 34 6f 61 6d 50 6d 37 6d 
0x03e0(992) : 62 32 50 68 39 6b 6e 2d 38 74 50 74 56 67 62 79 
0x03f0(1008) : 4d 47 33 38 56 5a 34 5a 4c 65 4a 6b 4f 51 56 7a 
0x0400(1024) : 53 75 65 62 64 51 61 6c 48 2e 63 6d 65 43 6a 2e 
0x0410(1040) : 53 6d 36 78 4b 42 55 66 70 6e 4f 43 42 74 39 64 
0x0420(1056) : 6c 6f 44 4d 43 6e 35 54 6c 69 44 4e 75 77 4c 4b 
0x0430(1072) : 68 53 47 2d 64 6b 65 51 57 30 63 68 74 6d 4a 64 
0x0440(1088) : 59 57 7a 6b 48 33 42 31 6c 4f 4f 64 4a 6b 78 2e 
0x0450(1104) : 41 42 7a 6e 77 62 42 51 63 6f 35 54 59 4f 34 34 
0x0460(1120) : 75 32 6f 41 35 7a 42 71 4c 5a 52 65 48 4d 63 52 
0x0470(1136) : 59 5a 43 53 39 4f 73 6c 41 78 43 69 4b 48 6d 43 
0x0480(1152) : 4a 0d 0a 45 4e 44 0d 0a 
Exiting system XilinxSwitch
===================================================================
