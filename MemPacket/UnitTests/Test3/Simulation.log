Evaluating packet #1(58 bytes)
 0x0000(0) : 00 00 00 00 00 00 00 00 00 00 00 00 08 00 45 00 
0x0010(16) : 00 2c 00 00 40 00 40 11 3c bf 7f 00 00 01 7f 00 
0x0020(32) : 00 01 2b cb b7 7c 00 18 00 0a 00 00 00 00 00 01 
0x0030(48) : 00 00 53 54 4f 52 45 44 0d 0a 
===================================================================
Entering system XilinxSwitch
input packet (58 bytes)
 0x0000(0) : 00 00 00 00 00 00 00 00 00 00 00 00 08 00 45 00 
0x0010(16) : 00 2c 00 00 40 00 40 11 3c bf 7f 00 00 01 7f 00 
0x0020(32) : 00 01 2b cb b7 7c 00 18 00 0a 00 00 00 00 00 01 
0x0030(48) : 00 00 53 54 4f 52 45 44 0d 0a 
initial input and inout tuples:
	ioports = (
		ingress_port = 0x0(0)
		egress_port = 0x0(0)
	)
clear internal and output-only tuples
===================================================================
Entering engine Parser
input packet (58 bytes)
 0x0000(0) : 00 00 00 00 00 00 00 00 00 00 00 00 08 00 45 00 
0x0010(16) : 00 2c 00 00 40 00 40 11 3c bf 7f 00 00 01 7f 00 
0x0020(32) : 00 01 2b cb b7 7c 00 18 00 0a 00 00 00 00 00 01 
0x0030(48) : 00 00 53 54 4f 52 45 44 0d 0a 
initial input and inout tuples:
	control = (
		offset = 0x0000(0)
		virtual_offset = 0x0000(0)
		section = 0x0(0)
		activeBank = 0x0(0)
		done = 0x0(0)
		error = 0x0(0)
	)
clear internal and output-only tuples
	hdr = (
		eth = (
		isValid = 0x0(0)
		dst = 0x000000000000(0)
		src = 0x000000000000(0)
		type = 0x0000(0)
	)
		fec = (
		isValid = 0x0(0)
		traffic_class = 0x0(0)
		block_index = 0x00(0)
		packet_index = 0x00(0)
		original_type = 0x0000(0)
	)
		ipv4 = (
		isValid = 0x0(0)
		version = 0x0(0)
		ihl = 0x0(0)
		diffserv = 0x00(0)
		totallen = 0x0000(0)
		identification = 0x0000(0)
		flags = 0x0(0)
		fragoffset = 0x0000(0)
		ttl = 0x00(0)
		protocol = 0x00(0)
		hdrchecksum = 0x0000(0)
		srcAddr = 0x00000000(0)
		dstAddr = 0x00000000(0)
	)
		udp = (
		isValid = 0x0(0)
		sport = 0x0000(0)
		dport = 0x0000(0)
		len = 0x0000(0)
		chksum = 0x0000(0)
	)
	)
	Parser_extracts = (
		size = 0x00000000(0)
	)
processing section start in stage 1
-------------------------------------------------------------------
Section start starting

	extracting 112 bits at offset 0x0000(0)
		dst_0 = 0x000000000000(0)
		src_0 = 0x000000000000(0)
		type_0 = 0x0800(2048)

	method update (tuples)
		hdr.eth.isValid = 0x1(1)
		hdr.eth.dst = 0x000000000000(0)
		hdr.eth.src = 0x000000000000(0)
		hdr.eth.type = 0x0800(2048)
		Parser_extracts.size = 0x00000070(112)


	method move_to_section = parse_ipv4

updated tuples:
	control = (
		offset = 0x0070(112)
		virtual_offset = 0x0070(112)
		section = 0x2(2)
		activeBank = 0x0(0)
		done = 0x0(0)
		error = 0x0(0)
	)
	hdr = (
		eth = (
		isValid = 0x1(1)
		dst = 0x000000000000(0)
		src = 0x000000000000(0)
		type = 0x0800(2048)
	)
		fec = (
		isValid = 0x0(0)
		traffic_class = 0x0(0)
		block_index = 0x00(0)
		packet_index = 0x00(0)
		original_type = 0x0000(0)
	)
		ipv4 = (
		isValid = 0x0(0)
		version = 0x0(0)
		ihl = 0x0(0)
		diffserv = 0x00(0)
		totallen = 0x0000(0)
		identification = 0x0000(0)
		flags = 0x0(0)
		fragoffset = 0x0000(0)
		ttl = 0x00(0)
		protocol = 0x00(0)
		hdrchecksum = 0x0000(0)
		srcAddr = 0x00000000(0)
		dstAddr = 0x00000000(0)
	)
		udp = (
		isValid = 0x0(0)
		sport = 0x0000(0)
		dport = 0x0000(0)
		len = 0x0000(0)
		chksum = 0x0000(0)
	)
	)
	Parser_extracts = (
		size = 0x00000070(112)
	)
Section start finished
-------------------------------------------------------------------
processing section parse_ipv4 in stage 2
-------------------------------------------------------------------
Section parse_ipv4 starting

	extracting 160 bits at offset 0x0070(112)
		version_0 = 0x4(4)
		ihl_0 = 0x5(5)
		diffserv_0 = 0x00(0)
		totallen_0 = 0x002c(44)
		identification_0 = 0x0000(0)
		flags_0 = 0x2(2)
		fragoffset_0 = 0x0000(0)
		ttl_0 = 0x40(64)
		protocol_0 = 0x11(17)
		hdrchecksum_0 = 0x3cbf(15551)
		srcAddr_0 = 0x7f000001(2130706433)
		dstAddr_0 = 0x7f000001(2130706433)

	method update (tuples)
		hdr.ipv4.isValid = 0x1(1)
		hdr.ipv4.version = 0x4(4)
		hdr.ipv4.ihl = 0x5(5)
		hdr.ipv4.diffserv = 0x00(0)
		hdr.ipv4.totallen = 0x002c(44)
		hdr.ipv4.identification = 0x0000(0)
		hdr.ipv4.flags = 0x2(2)
		hdr.ipv4.fragoffset = 0x0000(0)
		hdr.ipv4.ttl = 0x40(64)
		hdr.ipv4.protocol = 0x11(17)
		hdr.ipv4.hdrchecksum = 0x3cbf(15551)
		hdr.ipv4.srcAddr = 0x7f000001(2130706433)
		hdr.ipv4.dstAddr = 0x7f000001(2130706433)
		Parser_extracts.size = 0x00000110(272)


	method move_to_section = parse_udp

updated tuples:
	control = (
		offset = 0x0110(272)
		virtual_offset = 0x0110(272)
		section = 0x3(3)
		activeBank = 0x0(0)
		done = 0x0(0)
		error = 0x0(0)
	)
	hdr = (
		eth = (
		isValid = 0x1(1)
		dst = 0x000000000000(0)
		src = 0x000000000000(0)
		type = 0x0800(2048)
	)
		fec = (
		isValid = 0x0(0)
		traffic_class = 0x0(0)
		block_index = 0x00(0)
		packet_index = 0x00(0)
		original_type = 0x0000(0)
	)
		ipv4 = (
		isValid = 0x1(1)
		version = 0x4(4)
		ihl = 0x5(5)
		diffserv = 0x00(0)
		totallen = 0x002c(44)
		identification = 0x0000(0)
		flags = 0x2(2)
		fragoffset = 0x0000(0)
		ttl = 0x40(64)
		protocol = 0x11(17)
		hdrchecksum = 0x3cbf(15551)
		srcAddr = 0x7f000001(2130706433)
		dstAddr = 0x7f000001(2130706433)
	)
		udp = (
		isValid = 0x0(0)
		sport = 0x0000(0)
		dport = 0x0000(0)
		len = 0x0000(0)
		chksum = 0x0000(0)
	)
	)
	Parser_extracts = (
		size = 0x00000110(272)
	)
Section parse_ipv4 finished
-------------------------------------------------------------------
processing section parse_udp in stage 3
-------------------------------------------------------------------
Section parse_udp starting

	extracting 64 bits at offset 0x0110(272)
		sport_0 = 0x2bcb(11211)
		dport_0 = 0xb77c(46972)
		len_0 = 0x0018(24)
		chksum_0 = 0x000a(10)

	method update (tuples)
		hdr.udp.isValid = 0x1(1)
		hdr.udp.sport = 0x2bcb(11211)
		hdr.udp.dport = 0xb77c(46972)
		hdr.udp.len = 0x0018(24)
		hdr.udp.chksum = 0x000a(10)
		Parser_extracts.size = 0x00000150(336)


	method move_to_section = accept

updated tuples:
	control = (
		offset = 0x0150(336)
		virtual_offset = 0x0150(336)
		section = 0x4(4)
		activeBank = 0x0(0)
		done = 0x0(0)
		error = 0x0(0)
	)
	hdr = (
		eth = (
		isValid = 0x1(1)
		dst = 0x000000000000(0)
		src = 0x000000000000(0)
		type = 0x0800(2048)
	)
		fec = (
		isValid = 0x0(0)
		traffic_class = 0x0(0)
		block_index = 0x00(0)
		packet_index = 0x00(0)
		original_type = 0x0000(0)
	)
		ipv4 = (
		isValid = 0x1(1)
		version = 0x4(4)
		ihl = 0x5(5)
		diffserv = 0x00(0)
		totallen = 0x002c(44)
		identification = 0x0000(0)
		flags = 0x2(2)
		fragoffset = 0x0000(0)
		ttl = 0x40(64)
		protocol = 0x11(17)
		hdrchecksum = 0x3cbf(15551)
		srcAddr = 0x7f000001(2130706433)
		dstAddr = 0x7f000001(2130706433)
	)
		udp = (
		isValid = 0x1(1)
		sport = 0x2bcb(11211)
		dport = 0xb77c(46972)
		len = 0x0018(24)
		chksum = 0x000a(10)
	)
	)
	Parser_extracts = (
		size = 0x00000150(336)
	)
Section parse_udp finished
-------------------------------------------------------------------
processing section accept in stage 4
-------------------------------------------------------------------
Section accept starting


	method move_to_section = done(0)

updated tuples:
	control = (
		offset = 0x0150(336)
		virtual_offset = 0x0150(336)
		section = 0x0(0)
		activeBank = 0x0(0)
		done = 0x1(1)
		error = 0x0(0)
	)
	hdr = (
		eth = (
		isValid = 0x1(1)
		dst = 0x000000000000(0)
		src = 0x000000000000(0)
		type = 0x0800(2048)
	)
		fec = (
		isValid = 0x0(0)
		traffic_class = 0x0(0)
		block_index = 0x00(0)
		packet_index = 0x00(0)
		original_type = 0x0000(0)
	)
		ipv4 = (
		isValid = 0x1(1)
		version = 0x4(4)
		ihl = 0x5(5)
		diffserv = 0x00(0)
		totallen = 0x002c(44)
		identification = 0x0000(0)
		flags = 0x2(2)
		fragoffset = 0x0000(0)
		ttl = 0x40(64)
		protocol = 0x11(17)
		hdrchecksum = 0x3cbf(15551)
		srcAddr = 0x7f000001(2130706433)
		dstAddr = 0x7f000001(2130706433)
	)
		udp = (
		isValid = 0x1(1)
		sport = 0x2bcb(11211)
		dport = 0xb77c(46972)
		len = 0x0018(24)
		chksum = 0x000a(10)
	)
	)
	Parser_extracts = (
		size = 0x00000150(336)
	)
Section accept finished
-------------------------------------------------------------------
final inout and output tuples:

Note: this engine's wrapper will clear the upper control tuple fields on output, except for the 'control.error' field.

	control = (
		offset = 0x0000(0)
		virtual_offset = 0x0000(0)
		section = 0x0(0)
		activeBank = 0x0(0)
		done = 0x0(0)
		error = 0x0(0)
	)
	hdr = (
		eth = (
		isValid = 0x1(1)
		dst = 0x000000000000(0)
		src = 0x000000000000(0)
		type = 0x0800(2048)
	)
		fec = (
		isValid = 0x0(0)
		traffic_class = 0x0(0)
		block_index = 0x00(0)
		packet_index = 0x00(0)
		original_type = 0x0000(0)
	)
		ipv4 = (
		isValid = 0x1(1)
		version = 0x4(4)
		ihl = 0x5(5)
		diffserv = 0x00(0)
		totallen = 0x002c(44)
		identification = 0x0000(0)
		flags = 0x2(2)
		fragoffset = 0x0000(0)
		ttl = 0x40(64)
		protocol = 0x11(17)
		hdrchecksum = 0x3cbf(15551)
		srcAddr = 0x7f000001(2130706433)
		dstAddr = 0x7f000001(2130706433)
	)
		udp = (
		isValid = 0x1(1)
		sport = 0x2bcb(11211)
		dport = 0xb77c(46972)
		len = 0x0018(24)
		chksum = 0x000a(10)
	)
	)
	Parser_extracts = (
		size = 0x00000150(336)
	)
Exiting engine Parser
===================================================================
===================================================================
Entering engine CheckCache_lvl
input packet (0 bytes)
initial input and inout tuples:
	hdr = (
		eth = (
		isValid = 0x1(1)
		dst = 0x000000000000(0)
		src = 0x000000000000(0)
		type = 0x0800(2048)
	)
		fec = (
		isValid = 0x0(0)
		traffic_class = 0x0(0)
		block_index = 0x00(0)
		packet_index = 0x00(0)
		original_type = 0x0000(0)
	)
		ipv4 = (
		isValid = 0x1(1)
		version = 0x4(4)
		ihl = 0x5(5)
		diffserv = 0x00(0)
		totallen = 0x002c(44)
		identification = 0x0000(0)
		flags = 0x2(2)
		fragoffset = 0x0000(0)
		ttl = 0x40(64)
		protocol = 0x11(17)
		hdrchecksum = 0x3cbf(15551)
		srcAddr = 0x7f000001(2130706433)
		dstAddr = 0x7f000001(2130706433)
	)
		udp = (
		isValid = 0x1(1)
		sport = 0x2bcb(11211)
		dport = 0xb77c(46972)
		len = 0x0018(24)
		chksum = 0x000a(10)
	)
	)
	ioports = (
		ingress_port = 0x0(0)
		egress_port = 0x0(0)
	)
clear internal and output-only tuples
	control = (
		offset = 0x0000(0)
		virtual_offset = 0x0000(0)
		section = 0x0(0)
		activeBank = 0x0(0)
		done = 0x0(0)
		error = 0x0(0)
	)
	CheckCache_fl = (
		forward_1 = 0x0(0)
	)
	local_state = (
		id = 0x0000(0)
	)
processing section setup in stage 1
-------------------------------------------------------------------
Section setup starting


	method move_to_section = done(0)

updated tuples:
	control = (
		offset = 0x0000(0)
		virtual_offset = 0x0000(0)
		section = 0x0(0)
		activeBank = 0x0(0)
		done = 0x1(1)
		error = 0x0(0)
	)
	CheckCache_fl = (
		forward_1 = 0x0(0)
	)
	hdr = (
		eth = (
		isValid = 0x1(1)
		dst = 0x000000000000(0)
		src = 0x000000000000(0)
		type = 0x0800(2048)
	)
		fec = (
		isValid = 0x0(0)
		traffic_class = 0x0(0)
		block_index = 0x00(0)
		packet_index = 0x00(0)
		original_type = 0x0000(0)
	)
		ipv4 = (
		isValid = 0x1(1)
		version = 0x4(4)
		ihl = 0x5(5)
		diffserv = 0x00(0)
		totallen = 0x002c(44)
		identification = 0x0000(0)
		flags = 0x2(2)
		fragoffset = 0x0000(0)
		ttl = 0x40(64)
		protocol = 0x11(17)
		hdrchecksum = 0x3cbf(15551)
		srcAddr = 0x7f000001(2130706433)
		dstAddr = 0x7f000001(2130706433)
	)
		udp = (
		isValid = 0x1(1)
		sport = 0x2bcb(11211)
		dport = 0xb77c(46972)
		len = 0x0018(24)
		chksum = 0x000a(10)
	)
	)
	ioports = (
		ingress_port = 0x0(0)
		egress_port = 0x0(0)
	)
	local_state = (
		id = 0x0000(0)
	)
Section setup finished
-------------------------------------------------------------------
final inout and output tuples:

Note: this engine's wrapper will clear the upper control tuple fields on output, except for the 'control.error' field.

	CheckCache_fl = (
		forward_1 = 0x0(0)
	)
	hdr = (
		eth = (
		isValid = 0x1(1)
		dst = 0x000000000000(0)
		src = 0x000000000000(0)
		type = 0x0800(2048)
	)
		fec = (
		isValid = 0x0(0)
		traffic_class = 0x0(0)
		block_index = 0x00(0)
		packet_index = 0x00(0)
		original_type = 0x0000(0)
	)
		ipv4 = (
		isValid = 0x1(1)
		version = 0x4(4)
		ihl = 0x5(5)
		diffserv = 0x00(0)
		totallen = 0x002c(44)
		identification = 0x0000(0)
		flags = 0x2(2)
		fragoffset = 0x0000(0)
		ttl = 0x40(64)
		protocol = 0x11(17)
		hdrchecksum = 0x3cbf(15551)
		srcAddr = 0x7f000001(2130706433)
		dstAddr = 0x7f000001(2130706433)
	)
		udp = (
		isValid = 0x1(1)
		sport = 0x2bcb(11211)
		dport = 0xb77c(46972)
		len = 0x0018(24)
		chksum = 0x000a(10)
	)
	)
	ioports = (
		ingress_port = 0x0(0)
		egress_port = 0x0(0)
	)
	local_state = (
		id = 0x0000(0)
	)
Exiting engine CheckCache_lvl
===================================================================
===================================================================
Entering engine CheckCache_lvl_0
input packet (0 bytes)
initial input and inout tuples:
	CheckCache_fl = (
		forward_1 = 0x0(0)
	)
	hdr = (
		eth = (
		isValid = 0x1(1)
		dst = 0x000000000000(0)
		src = 0x000000000000(0)
		type = 0x0800(2048)
	)
		fec = (
		isValid = 0x0(0)
		traffic_class = 0x0(0)
		block_index = 0x00(0)
		packet_index = 0x00(0)
		original_type = 0x0000(0)
	)
		ipv4 = (
		isValid = 0x1(1)
		version = 0x4(4)
		ihl = 0x5(5)
		diffserv = 0x00(0)
		totallen = 0x002c(44)
		identification = 0x0000(0)
		flags = 0x2(2)
		fragoffset = 0x0000(0)
		ttl = 0x40(64)
		protocol = 0x11(17)
		hdrchecksum = 0x3cbf(15551)
		srcAddr = 0x7f000001(2130706433)
		dstAddr = 0x7f000001(2130706433)
	)
		udp = (
		isValid = 0x1(1)
		sport = 0x2bcb(11211)
		dport = 0xb77c(46972)
		len = 0x0018(24)
		chksum = 0x000a(10)
	)
	)
	ioports = (
		ingress_port = 0x0(0)
		egress_port = 0x0(0)
	)
	local_state = (
		id = 0x0000(0)
	)
clear internal and output-only tuples
	control = (
		offset = 0x0000(0)
		virtual_offset = 0x0000(0)
		section = 0x0(0)
		activeBank = 0x0(0)
		done = 0x0(0)
		error = 0x0(0)
	)
	memcached_input = (
		stateful_valid = 0x0(0)
	)
processing section condition_sec_0 in stage 1
-------------------------------------------------------------------
Section condition_sec_0 starting

	method update (tuples)
		local_state.id = 0x0005(5)


	method move_to_section = condition_sec

updated tuples:
	control = (
		offset = 0x0000(0)
		virtual_offset = 0x0000(0)
		section = 0x2(2)
		activeBank = 0x0(0)
		done = 0x0(0)
		error = 0x0(0)
	)
	CheckCache_fl = (
		forward_1 = 0x0(0)
	)
	hdr = (
		eth = (
		isValid = 0x1(1)
		dst = 0x000000000000(0)
		src = 0x000000000000(0)
		type = 0x0800(2048)
	)
		fec = (
		isValid = 0x0(0)
		traffic_class = 0x0(0)
		block_index = 0x00(0)
		packet_index = 0x00(0)
		original_type = 0x0000(0)
	)
		ipv4 = (
		isValid = 0x1(1)
		version = 0x4(4)
		ihl = 0x5(5)
		diffserv = 0x00(0)
		totallen = 0x002c(44)
		identification = 0x0000(0)
		flags = 0x2(2)
		fragoffset = 0x0000(0)
		ttl = 0x40(64)
		protocol = 0x11(17)
		hdrchecksum = 0x3cbf(15551)
		srcAddr = 0x7f000001(2130706433)
		dstAddr = 0x7f000001(2130706433)
	)
		udp = (
		isValid = 0x1(1)
		sport = 0x2bcb(11211)
		dport = 0xb77c(46972)
		len = 0x0018(24)
		chksum = 0x000a(10)
	)
	)
	ioports = (
		ingress_port = 0x0(0)
		egress_port = 0x0(0)
	)
	local_state = (
		id = 0x0005(5)
	)
	memcached_input = (
		stateful_valid = 0x0(0)
	)
Section condition_sec_0 finished
-------------------------------------------------------------------
processing section condition_sec in stage 2
-------------------------------------------------------------------
Section condition_sec starting

	method update (tuples)
		local_state.id = 0x0005(5)


	method move_to_section = act_0_sec

updated tuples:
	control = (
		offset = 0x0000(0)
		virtual_offset = 0x0000(0)
		section = 0x1(1)
		activeBank = 0x0(0)
		done = 0x0(0)
		error = 0x0(0)
	)
	CheckCache_fl = (
		forward_1 = 0x0(0)
	)
	hdr = (
		eth = (
		isValid = 0x1(1)
		dst = 0x000000000000(0)
		src = 0x000000000000(0)
		type = 0x0800(2048)
	)
		fec = (
		isValid = 0x0(0)
		traffic_class = 0x0(0)
		block_index = 0x00(0)
		packet_index = 0x00(0)
		original_type = 0x0000(0)
	)
		ipv4 = (
		isValid = 0x1(1)
		version = 0x4(4)
		ihl = 0x5(5)
		diffserv = 0x00(0)
		totallen = 0x002c(44)
		identification = 0x0000(0)
		flags = 0x2(2)
		fragoffset = 0x0000(0)
		ttl = 0x40(64)
		protocol = 0x11(17)
		hdrchecksum = 0x3cbf(15551)
		srcAddr = 0x7f000001(2130706433)
		dstAddr = 0x7f000001(2130706433)
	)
		udp = (
		isValid = 0x1(1)
		sport = 0x2bcb(11211)
		dport = 0xb77c(46972)
		len = 0x0018(24)
		chksum = 0x000a(10)
	)
	)
	ioports = (
		ingress_port = 0x0(0)
		egress_port = 0x0(0)
	)
	local_state = (
		id = 0x0005(5)
	)
	memcached_input = (
		stateful_valid = 0x0(0)
	)
Section condition_sec finished
-------------------------------------------------------------------
processing section act_0_sec in stage 3
-------------------------------------------------------------------
Section act_0_sec starting

	method update (tuples)
		memcached_input.stateful_valid = 0x1(1)
		local_state.id = 0x0004(4)


	method move_to_section = local_end

updated tuples:
	control = (
		offset = 0x0000(0)
		virtual_offset = 0x0000(0)
		section = 0x4(4)
		activeBank = 0x0(0)
		done = 0x0(0)
		error = 0x0(0)
	)
	CheckCache_fl = (
		forward_1 = 0x0(0)
	)
	hdr = (
		eth = (
		isValid = 0x1(1)
		dst = 0x000000000000(0)
		src = 0x000000000000(0)
		type = 0x0800(2048)
	)
		fec = (
		isValid = 0x0(0)
		traffic_class = 0x0(0)
		block_index = 0x00(0)
		packet_index = 0x00(0)
		original_type = 0x0000(0)
	)
		ipv4 = (
		isValid = 0x1(1)
		version = 0x4(4)
		ihl = 0x5(5)
		diffserv = 0x00(0)
		totallen = 0x002c(44)
		identification = 0x0000(0)
		flags = 0x2(2)
		fragoffset = 0x0000(0)
		ttl = 0x40(64)
		protocol = 0x11(17)
		hdrchecksum = 0x3cbf(15551)
		srcAddr = 0x7f000001(2130706433)
		dstAddr = 0x7f000001(2130706433)
	)
		udp = (
		isValid = 0x1(1)
		sport = 0x2bcb(11211)
		dport = 0xb77c(46972)
		len = 0x0018(24)
		chksum = 0x000a(10)
	)
	)
	ioports = (
		ingress_port = 0x0(0)
		egress_port = 0x0(0)
	)
	local_state = (
		id = 0x0004(4)
	)
	memcached_input = (
		stateful_valid = 0x1(1)
	)
Section act_0_sec finished
-------------------------------------------------------------------
processing section local_end in stage 4
-------------------------------------------------------------------
Section local_end starting


	method move_to_section = done(0)

updated tuples:
	control = (
		offset = 0x0000(0)
		virtual_offset = 0x0000(0)
		section = 0x0(0)
		activeBank = 0x0(0)
		done = 0x1(1)
		error = 0x0(0)
	)
	CheckCache_fl = (
		forward_1 = 0x0(0)
	)
	hdr = (
		eth = (
		isValid = 0x1(1)
		dst = 0x000000000000(0)
		src = 0x000000000000(0)
		type = 0x0800(2048)
	)
		fec = (
		isValid = 0x0(0)
		traffic_class = 0x0(0)
		block_index = 0x00(0)
		packet_index = 0x00(0)
		original_type = 0x0000(0)
	)
		ipv4 = (
		isValid = 0x1(1)
		version = 0x4(4)
		ihl = 0x5(5)
		diffserv = 0x00(0)
		totallen = 0x002c(44)
		identification = 0x0000(0)
		flags = 0x2(2)
		fragoffset = 0x0000(0)
		ttl = 0x40(64)
		protocol = 0x11(17)
		hdrchecksum = 0x3cbf(15551)
		srcAddr = 0x7f000001(2130706433)
		dstAddr = 0x7f000001(2130706433)
	)
		udp = (
		isValid = 0x1(1)
		sport = 0x2bcb(11211)
		dport = 0xb77c(46972)
		len = 0x0018(24)
		chksum = 0x000a(10)
	)
	)
	ioports = (
		ingress_port = 0x0(0)
		egress_port = 0x0(0)
	)
	local_state = (
		id = 0x0004(4)
	)
	memcached_input = (
		stateful_valid = 0x1(1)
	)
Section local_end finished
-------------------------------------------------------------------
final inout and output tuples:

Note: this engine's wrapper will clear the upper control tuple fields on output, except for the 'control.error' field.

	CheckCache_fl = (
		forward_1 = 0x0(0)
	)
	hdr = (
		eth = (
		isValid = 0x1(1)
		dst = 0x000000000000(0)
		src = 0x000000000000(0)
		type = 0x0800(2048)
	)
		fec = (
		isValid = 0x0(0)
		traffic_class = 0x0(0)
		block_index = 0x00(0)
		packet_index = 0x00(0)
		original_type = 0x0000(0)
	)
		ipv4 = (
		isValid = 0x1(1)
		version = 0x4(4)
		ihl = 0x5(5)
		diffserv = 0x00(0)
		totallen = 0x002c(44)
		identification = 0x0000(0)
		flags = 0x2(2)
		fragoffset = 0x0000(0)
		ttl = 0x40(64)
		protocol = 0x11(17)
		hdrchecksum = 0x3cbf(15551)
		srcAddr = 0x7f000001(2130706433)
		dstAddr = 0x7f000001(2130706433)
	)
		udp = (
		isValid = 0x1(1)
		sport = 0x2bcb(11211)
		dport = 0xb77c(46972)
		len = 0x0018(24)
		chksum = 0x000a(10)
	)
	)
	ioports = (
		ingress_port = 0x0(0)
		egress_port = 0x0(0)
	)
	local_state = (
		id = 0x0004(4)
	)
	memcached_input = (
		stateful_valid = 0x1(1)
	)
Exiting engine CheckCache_lvl_0
===================================================================
===================================================================
Entering engine memcached_0
input packet (58 bytes)
 0x0000(0) : 00 00 00 00 00 00 00 00 00 00 00 00 08 00 45 00 
0x0010(16) : 00 2c 00 00 40 00 40 11 3c bf 7f 00 00 01 7f 00 
0x0020(32) : 00 01 2b cb b7 7c 00 18 00 0a 00 00 00 00 00 01 
0x0030(48) : 00 00 53 54 4f 52 45 44 0d 0a 
initial input and inout tuples:
	control = (
		offset = 0x0000(0)
		virtual_offset = 0x0000(0)
		section = 0x0(0)
		activeBank = 0x0(0)
		done = 0x0(0)
		error = 0x0(0)
	)
	CheckCache_fl = (
		forward_1 = 0x0(0)
	)
	hdr = (
		eth = (
		isValid = 0x1(1)
		dst = 0x000000000000(0)
		src = 0x000000000000(0)
		type = 0x0800(2048)
	)
		fec = (
		isValid = 0x0(0)
		traffic_class = 0x0(0)
		block_index = 0x00(0)
		packet_index = 0x00(0)
		original_type = 0x0000(0)
	)
		ipv4 = (
		isValid = 0x1(1)
		version = 0x4(4)
		ihl = 0x5(5)
		diffserv = 0x00(0)
		totallen = 0x002c(44)
		identification = 0x0000(0)
		flags = 0x2(2)
		fragoffset = 0x0000(0)
		ttl = 0x40(64)
		protocol = 0x11(17)
		hdrchecksum = 0x3cbf(15551)
		srcAddr = 0x7f000001(2130706433)
		dstAddr = 0x7f000001(2130706433)
	)
		udp = (
		isValid = 0x1(1)
		sport = 0x2bcb(11211)
		dport = 0xb77c(46972)
		len = 0x0018(24)
		chksum = 0x000a(10)
	)
	)
	ioports = (
		ingress_port = 0x0(0)
		egress_port = 0x0(0)
	)
	local_state = (
		id = 0x0004(4)
	)
	Parser_extracts = (
		size = 0x00000150(336)
	)
	memcached_input = (
		stateful_valid = 0x1(1)
	)
clear internal and output-only tuples
	memcached_output = (
		forward = 0x0(0)
	)
Enter USER ENGINE FUNCTION
0
134235392
12384900049027089
4377357000804237056
329628933423128
2814749767106561
91621573150020
939563472260169728
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<Inside MemCore<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<< 
The No. 0Packet
7
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<Inside MemCore<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<< 
===================================================================
Entering engine CheckCache_lvl_1
input packet (0 bytes)
initial input and inout tuples:
	CheckCache_fl = (
		forward_1 = 0x0(0)
	)
	hdr = (
		eth = (
		isValid = 0x1(1)
		dst = 0x000000000000(0)
		src = 0x000000000000(0)
		type = 0x0800(2048)
	)
		fec = (
		isValid = 0x0(0)
		traffic_class = 0x0(0)
		block_index = 0x00(0)
		packet_index = 0x00(0)
		original_type = 0x0000(0)
	)
		ipv4 = (
		isValid = 0x1(1)
		version = 0x4(4)
		ihl = 0x5(5)
		diffserv = 0x00(0)
		totallen = 0x002c(44)
		identification = 0x0000(0)
		flags = 0x2(2)
		fragoffset = 0x0000(0)
		ttl = 0x40(64)
		protocol = 0x11(17)
		hdrchecksum = 0x3cbf(15551)
		srcAddr = 0x7f000001(2130706433)
		dstAddr = 0x7f000001(2130706433)
	)
		udp = (
		isValid = 0x1(1)
		sport = 0x2bcb(11211)
		dport = 0xb77c(46972)
		len = 0x0018(24)
		chksum = 0x000a(10)
	)
	)
	ioports = (
		ingress_port = 0x0(0)
		egress_port = 0x0(0)
	)
	local_state = (
		id = 0x0004(4)
	)
	memcached_output = (
		forward = 0x0(0)
	)
clear internal and output-only tuples
	control = (
		offset = 0x0000(0)
		virtual_offset = 0x0000(0)
		section = 0x0(0)
		activeBank = 0x0(0)
		done = 0x0(0)
		error = 0x0(0)
	)
processing section local_start in stage 1
-------------------------------------------------------------------
Section local_start starting


	method move_to_section = memcached_sec

updated tuples:
	control = (
		offset = 0x0000(0)
		virtual_offset = 0x0000(0)
		section = 0x2(2)
		activeBank = 0x0(0)
		done = 0x0(0)
		error = 0x0(0)
	)
	CheckCache_fl = (
		forward_1 = 0x0(0)
	)
	hdr = (
		eth = (
		isValid = 0x1(1)
		dst = 0x000000000000(0)
		src = 0x000000000000(0)
		type = 0x0800(2048)
	)
		fec = (
		isValid = 0x0(0)
		traffic_class = 0x0(0)
		block_index = 0x00(0)
		packet_index = 0x00(0)
		original_type = 0x0000(0)
	)
		ipv4 = (
		isValid = 0x1(1)
		version = 0x4(4)
		ihl = 0x5(5)
		diffserv = 0x00(0)
		totallen = 0x002c(44)
		identification = 0x0000(0)
		flags = 0x2(2)
		fragoffset = 0x0000(0)
		ttl = 0x40(64)
		protocol = 0x11(17)
		hdrchecksum = 0x3cbf(15551)
		srcAddr = 0x7f000001(2130706433)
		dstAddr = 0x7f000001(2130706433)
	)
		udp = (
		isValid = 0x1(1)
		sport = 0x2bcb(11211)
		dport = 0xb77c(46972)
		len = 0x0018(24)
		chksum = 0x000a(10)
	)
	)
	ioports = (
		ingress_port = 0x0(0)
		egress_port = 0x0(0)
	)
	local_state = (
		id = 0x0004(4)
	)
	memcached_output = (
		forward = 0x0(0)
	)
Section local_start finished
-------------------------------------------------------------------
processing section memcached_sec in stage 2
-------------------------------------------------------------------
Section memcached_sec starting

	method update (tuples)
		CheckCache_fl.forward_1 = 0x0(0)


	method move_to_section = sink

updated tuples:
	control = (
		offset = 0x0000(0)
		virtual_offset = 0x0000(0)
		section = 0x3(3)
		activeBank = 0x0(0)
		done = 0x0(0)
		error = 0x0(0)
	)
	CheckCache_fl = (
		forward_1 = 0x0(0)
	)
	hdr = (
		eth = (
		isValid = 0x1(1)
		dst = 0x000000000000(0)
		src = 0x000000000000(0)
		type = 0x0800(2048)
	)
		fec = (
		isValid = 0x0(0)
		traffic_class = 0x0(0)
		block_index = 0x00(0)
		packet_index = 0x00(0)
		original_type = 0x0000(0)
	)
		ipv4 = (
		isValid = 0x1(1)
		version = 0x4(4)
		ihl = 0x5(5)
		diffserv = 0x00(0)
		totallen = 0x002c(44)
		identification = 0x0000(0)
		flags = 0x2(2)
		fragoffset = 0x0000(0)
		ttl = 0x40(64)
		protocol = 0x11(17)
		hdrchecksum = 0x3cbf(15551)
		srcAddr = 0x7f000001(2130706433)
		dstAddr = 0x7f000001(2130706433)
	)
		udp = (
		isValid = 0x1(1)
		sport = 0x2bcb(11211)
		dport = 0xb77c(46972)
		len = 0x0018(24)
		chksum = 0x000a(10)
	)
	)
	ioports = (
		ingress_port = 0x0(0)
		egress_port = 0x0(0)
	)
	local_state = (
		id = 0x0004(4)
	)
	memcached_output = (
		forward = 0x0(0)
	)
Section memcached_sec finished
-------------------------------------------------------------------
processing section sink in stage 3
-------------------------------------------------------------------
Section sink starting


	method move_to_section = done(0)

updated tuples:
	control = (
		offset = 0x0000(0)
		virtual_offset = 0x0000(0)
		section = 0x0(0)
		activeBank = 0x0(0)
		done = 0x1(1)
		error = 0x0(0)
	)
	CheckCache_fl = (
		forward_1 = 0x0(0)
	)
	hdr = (
		eth = (
		isValid = 0x1(1)
		dst = 0x000000000000(0)
		src = 0x000000000000(0)
		type = 0x0800(2048)
	)
		fec = (
		isValid = 0x0(0)
		traffic_class = 0x0(0)
		block_index = 0x00(0)
		packet_index = 0x00(0)
		original_type = 0x0000(0)
	)
		ipv4 = (
		isValid = 0x1(1)
		version = 0x4(4)
		ihl = 0x5(5)
		diffserv = 0x00(0)
		totallen = 0x002c(44)
		identification = 0x0000(0)
		flags = 0x2(2)
		fragoffset = 0x0000(0)
		ttl = 0x40(64)
		protocol = 0x11(17)
		hdrchecksum = 0x3cbf(15551)
		srcAddr = 0x7f000001(2130706433)
		dstAddr = 0x7f000001(2130706433)
	)
		udp = (
		isValid = 0x1(1)
		sport = 0x2bcb(11211)
		dport = 0xb77c(46972)
		len = 0x0018(24)
		chksum = 0x000a(10)
	)
	)
	ioports = (
		ingress_port = 0x0(0)
		egress_port = 0x0(0)
	)
	local_state = (
		id = 0x0004(4)
	)
	memcached_output = (
		forward = 0x0(0)
	)
Section sink finished
-------------------------------------------------------------------
final inout and output tuples:

Note: this engine's wrapper will clear the upper control tuple fields on output, except for the 'control.error' field.

	hdr = (
		eth = (
		isValid = 0x1(1)
		dst = 0x000000000000(0)
		src = 0x000000000000(0)
		type = 0x0800(2048)
	)
		fec = (
		isValid = 0x0(0)
		traffic_class = 0x0(0)
		block_index = 0x00(0)
		packet_index = 0x00(0)
		original_type = 0x0000(0)
	)
		ipv4 = (
		isValid = 0x1(1)
		version = 0x4(4)
		ihl = 0x5(5)
		diffserv = 0x00(0)
		totallen = 0x002c(44)
		identification = 0x0000(0)
		flags = 0x2(2)
		fragoffset = 0x0000(0)
		ttl = 0x40(64)
		protocol = 0x11(17)
		hdrchecksum = 0x3cbf(15551)
		srcAddr = 0x7f000001(2130706433)
		dstAddr = 0x7f000001(2130706433)
	)
		udp = (
		isValid = 0x1(1)
		sport = 0x2bcb(11211)
		dport = 0xb77c(46972)
		len = 0x0018(24)
		chksum = 0x000a(10)
	)
	)
	ioports = (
		ingress_port = 0x0(0)
		egress_port = 0x0(0)
	)
Exiting engine CheckCache_lvl_1
===================================================================
===================================================================
Entering engine Deparser
input packet (60 bytes)
 0x0000(0) : 00 00 00 00 00 00 00 00 00 00 00 00 08 00 45 00 
0x0010(16) : 00 2c 00 00 40 00 40 11 3c bf 7f 00 00 01 7f 00 
0x0020(32) : 00 01 2b cb b7 7c 00 18 00 0a 00 00 00 00 00 01 
0x0030(48) : 00 00 53 54 4f 52 45 44 0d 0a 00 00 
initial input and inout tuples:
	control = (
		offset = 0x0000(0)
		virtual_offset = 0x0000(0)
		section = 0x0(0)
		activeBank = 0x0(0)
		done = 0x0(0)
		error = 0x0(0)
	)
	hdr = (
		eth = (
		isValid = 0x1(1)
		dst = 0x000000000000(0)
		src = 0x000000000000(0)
		type = 0x0800(2048)
	)
		fec = (
		isValid = 0x0(0)
		traffic_class = 0x0(0)
		block_index = 0x00(0)
		packet_index = 0x00(0)
		original_type = 0x0000(0)
	)
		ipv4 = (
		isValid = 0x1(1)
		version = 0x4(4)
		ihl = 0x5(5)
		diffserv = 0x00(0)
		totallen = 0x002c(44)
		identification = 0x0000(0)
		flags = 0x2(2)
		fragoffset = 0x0000(0)
		ttl = 0x40(64)
		protocol = 0x11(17)
		hdrchecksum = 0x3cbf(15551)
		srcAddr = 0x7f000001(2130706433)
		dstAddr = 0x7f000001(2130706433)
	)
		udp = (
		isValid = 0x1(1)
		sport = 0x2bcb(11211)
		dport = 0xb77c(46972)
		len = 0x0018(24)
		chksum = 0x000a(10)
	)
	)
	Deparser_extracts = (
		size = 0x00000150(336)
	)
clear internal and output-only tuples
processing section extract_headers_sec in stage 1
-------------------------------------------------------------------
Section extract_headers_sec starting


	method remove
	removing 42 bytes at byte 0:
 0x0000(0) : 00 00 00 00 00 00 00 00 00 00 00 00 08 00 45 00 
0x0010(16) : 00 2c 00 00 40 00 40 11 3c bf 7f 00 00 01 7f 00 
0x0020(32) : 00 01 2b cb b7 7c 00 18 00 0a 
	method move_to_section = act_sec

updated tuples:
	control = (
		offset = 0x0000(0)
		virtual_offset = 0x0150(336)
		section = 0x1(1)
		activeBank = 0x0(0)
		done = 0x0(0)
		error = 0x0(0)
	)
	hdr = (
		eth = (
		isValid = 0x1(1)
		dst = 0x000000000000(0)
		src = 0x000000000000(0)
		type = 0x0800(2048)
	)
		fec = (
		isValid = 0x0(0)
		traffic_class = 0x0(0)
		block_index = 0x00(0)
		packet_index = 0x00(0)
		original_type = 0x0000(0)
	)
		ipv4 = (
		isValid = 0x1(1)
		version = 0x4(4)
		ihl = 0x5(5)
		diffserv = 0x00(0)
		totallen = 0x002c(44)
		identification = 0x0000(0)
		flags = 0x2(2)
		fragoffset = 0x0000(0)
		ttl = 0x40(64)
		protocol = 0x11(17)
		hdrchecksum = 0x3cbf(15551)
		srcAddr = 0x7f000001(2130706433)
		dstAddr = 0x7f000001(2130706433)
	)
		udp = (
		isValid = 0x1(1)
		sport = 0x2bcb(11211)
		dport = 0xb77c(46972)
		len = 0x0018(24)
		chksum = 0x000a(10)
	)
	)
	Deparser_extracts = (
		size = 0x00000150(336)
	)
Section extract_headers_sec finished
-------------------------------------------------------------------
processing section act_sec in stage 2
-------------------------------------------------------------------
Section act_sec starting


	method move_to_section = emit_3

updated tuples:
	control = (
		offset = 0x0000(0)
		virtual_offset = 0x0150(336)
		section = 0x5(5)
		activeBank = 0x0(0)
		done = 0x0(0)
		error = 0x0(0)
	)
	hdr = (
		eth = (
		isValid = 0x1(1)
		dst = 0x000000000000(0)
		src = 0x000000000000(0)
		type = 0x0800(2048)
	)
		fec = (
		isValid = 0x0(0)
		traffic_class = 0x0(0)
		block_index = 0x00(0)
		packet_index = 0x00(0)
		original_type = 0x0000(0)
	)
		ipv4 = (
		isValid = 0x1(1)
		version = 0x4(4)
		ihl = 0x5(5)
		diffserv = 0x00(0)
		totallen = 0x002c(44)
		identification = 0x0000(0)
		flags = 0x2(2)
		fragoffset = 0x0000(0)
		ttl = 0x40(64)
		protocol = 0x11(17)
		hdrchecksum = 0x3cbf(15551)
		srcAddr = 0x7f000001(2130706433)
		dstAddr = 0x7f000001(2130706433)
	)
		udp = (
		isValid = 0x1(1)
		sport = 0x2bcb(11211)
		dport = 0xb77c(46972)
		len = 0x0018(24)
		chksum = 0x000a(10)
	)
	)
	Deparser_extracts = (
		size = 0x00000150(336)
	)
Section act_sec finished
-------------------------------------------------------------------
processing section emit_3 in stage 3
-------------------------------------------------------------------
Section emit_3 starting

	method update (tuples)


	method update (packet)
		 dst = 0x000000000000(0)
		 src = 0x000000000000(0)
		 type = 0x0800(2048)

	method insert
	inserting 14 bytes at byte 0:
 0x0000(0) : 00 00 00 00 00 00 00 00 00 00 00 00 08 00 
	method move_to_section = emit_2

updated tuples:
	control = (
		offset = 0x0070(112)
		virtual_offset = 0x0150(336)
		section = 0x4(4)
		activeBank = 0x0(0)
		done = 0x0(0)
		error = 0x0(0)
	)
	hdr = (
		eth = (
		isValid = 0x1(1)
		dst = 0x000000000000(0)
		src = 0x000000000000(0)
		type = 0x0800(2048)
	)
		fec = (
		isValid = 0x0(0)
		traffic_class = 0x0(0)
		block_index = 0x00(0)
		packet_index = 0x00(0)
		original_type = 0x0000(0)
	)
		ipv4 = (
		isValid = 0x1(1)
		version = 0x4(4)
		ihl = 0x5(5)
		diffserv = 0x00(0)
		totallen = 0x002c(44)
		identification = 0x0000(0)
		flags = 0x2(2)
		fragoffset = 0x0000(0)
		ttl = 0x40(64)
		protocol = 0x11(17)
		hdrchecksum = 0x3cbf(15551)
		srcAddr = 0x7f000001(2130706433)
		dstAddr = 0x7f000001(2130706433)
	)
		udp = (
		isValid = 0x1(1)
		sport = 0x2bcb(11211)
		dport = 0xb77c(46972)
		len = 0x0018(24)
		chksum = 0x000a(10)
	)
	)
	Deparser_extracts = (
		size = 0x00000150(336)
	)
Section emit_3 finished
-------------------------------------------------------------------
processing section emit_2 in stage 4
-------------------------------------------------------------------
Section emit_2 starting

	method update (tuples)


	method update (packet)
		 traffic_class = 0x0(0)
		 block_index = 0x00(0)
		 packet_index = 0x00(0)
		 original_type = 0x0000(0)

	method insert
	inserting 0 bytes at byte 14:
 0x0000(0) :                                           
	method move_to_section = emit_1

updated tuples:
	control = (
		offset = 0x0070(112)
		virtual_offset = 0x0150(336)
		section = 0x3(3)
		activeBank = 0x0(0)
		done = 0x0(0)
		error = 0x0(0)
	)
	hdr = (
		eth = (
		isValid = 0x1(1)
		dst = 0x000000000000(0)
		src = 0x000000000000(0)
		type = 0x0800(2048)
	)
		fec = (
		isValid = 0x0(0)
		traffic_class = 0x0(0)
		block_index = 0x00(0)
		packet_index = 0x00(0)
		original_type = 0x0000(0)
	)
		ipv4 = (
		isValid = 0x1(1)
		version = 0x4(4)
		ihl = 0x5(5)
		diffserv = 0x00(0)
		totallen = 0x002c(44)
		identification = 0x0000(0)
		flags = 0x2(2)
		fragoffset = 0x0000(0)
		ttl = 0x40(64)
		protocol = 0x11(17)
		hdrchecksum = 0x3cbf(15551)
		srcAddr = 0x7f000001(2130706433)
		dstAddr = 0x7f000001(2130706433)
	)
		udp = (
		isValid = 0x1(1)
		sport = 0x2bcb(11211)
		dport = 0xb77c(46972)
		len = 0x0018(24)
		chksum = 0x000a(10)
	)
	)
	Deparser_extracts = (
		size = 0x00000150(336)
	)
Section emit_2 finished
-------------------------------------------------------------------
processing section emit_1 in stage 5
-------------------------------------------------------------------
Section emit_1 starting

	method update (tuples)


	method update (packet)
		 version = 0x4(4)
		 ihl = 0x5(5)
		 diffserv = 0x00(0)
		 totallen = 0x002c(44)
		 identification = 0x0000(0)
		 flags = 0x2(2)
		 fragoffset = 0x0000(0)
		 ttl = 0x40(64)
		 protocol = 0x11(17)
		 hdrchecksum = 0x3cbf(15551)
		 srcAddr = 0x7f000001(2130706433)
		 dstAddr = 0x7f000001(2130706433)

	method insert
	inserting 20 bytes at byte 14:
 0x0000(0) :                                           45 00 
0x0010(16) : 00 2c 00 00 40 00 40 11 3c bf 7f 00 00 01 7f 00 
0x0020(32) : 00 01 
	method move_to_section = emit_0

updated tuples:
	control = (
		offset = 0x0110(272)
		virtual_offset = 0x0150(336)
		section = 0x2(2)
		activeBank = 0x0(0)
		done = 0x0(0)
		error = 0x0(0)
	)
	hdr = (
		eth = (
		isValid = 0x1(1)
		dst = 0x000000000000(0)
		src = 0x000000000000(0)
		type = 0x0800(2048)
	)
		fec = (
		isValid = 0x0(0)
		traffic_class = 0x0(0)
		block_index = 0x00(0)
		packet_index = 0x00(0)
		original_type = 0x0000(0)
	)
		ipv4 = (
		isValid = 0x1(1)
		version = 0x4(4)
		ihl = 0x5(5)
		diffserv = 0x00(0)
		totallen = 0x002c(44)
		identification = 0x0000(0)
		flags = 0x2(2)
		fragoffset = 0x0000(0)
		ttl = 0x40(64)
		protocol = 0x11(17)
		hdrchecksum = 0x3cbf(15551)
		srcAddr = 0x7f000001(2130706433)
		dstAddr = 0x7f000001(2130706433)
	)
		udp = (
		isValid = 0x1(1)
		sport = 0x2bcb(11211)
		dport = 0xb77c(46972)
		len = 0x0018(24)
		chksum = 0x000a(10)
	)
	)
	Deparser_extracts = (
		size = 0x00000150(336)
	)
Section emit_1 finished
-------------------------------------------------------------------
processing section emit_0 in stage 6
-------------------------------------------------------------------
Section emit_0 starting

	method update (tuples)


	method update (packet)
		 sport = 0x2bcb(11211)
		 dport = 0xb77c(46972)
		 len = 0x0018(24)
		 chksum = 0x000a(10)

	method insert
	inserting 8 bytes at byte 34:
0x0020(32) :       2b cb b7 7c 00 18 00 0a 
	method move_to_section = done(0)

updated tuples:
	control = (
		offset = 0x0150(336)
		virtual_offset = 0x0150(336)
		section = 0x0(0)
		activeBank = 0x0(0)
		done = 0x1(1)
		error = 0x0(0)
	)
	hdr = (
		eth = (
		isValid = 0x1(1)
		dst = 0x000000000000(0)
		src = 0x000000000000(0)
		type = 0x0800(2048)
	)
		fec = (
		isValid = 0x0(0)
		traffic_class = 0x0(0)
		block_index = 0x00(0)
		packet_index = 0x00(0)
		original_type = 0x0000(0)
	)
		ipv4 = (
		isValid = 0x1(1)
		version = 0x4(4)
		ihl = 0x5(5)
		diffserv = 0x00(0)
		totallen = 0x002c(44)
		identification = 0x0000(0)
		flags = 0x2(2)
		fragoffset = 0x0000(0)
		ttl = 0x40(64)
		protocol = 0x11(17)
		hdrchecksum = 0x3cbf(15551)
		srcAddr = 0x7f000001(2130706433)
		dstAddr = 0x7f000001(2130706433)
	)
		udp = (
		isValid = 0x1(1)
		sport = 0x2bcb(11211)
		dport = 0xb77c(46972)
		len = 0x0018(24)
		chksum = 0x000a(10)
	)
	)
	Deparser_extracts = (
		size = 0x00000150(336)
	)
Section emit_0 finished
-------------------------------------------------------------------
final inout and output tuples:

Note: this engine's wrapper will clear the upper control tuple fields on output, except for the 'control.error' field.

	control = (
		offset = 0x0000(0)
		virtual_offset = 0x0000(0)
		section = 0x0(0)
		activeBank = 0x0(0)
		done = 0x0(0)
		error = 0x0(0)
	)
output packet (60 bytes)
 0x0000(0) : 00 00 00 00 00 00 00 00 00 00 00 00 08 00 45 00 
0x0010(16) : 00 2c 00 00 40 00 40 11 3c bf 7f 00 00 01 7f 00 
0x0020(32) : 00 01 2b cb b7 7c 00 18 00 0a 00 00 00 00 00 01 
0x0030(48) : 00 00 53 54 4f 52 45 44 0d 0a 00 00 
Exiting engine Deparser
===================================================================
final inout and output tuples:
	ioports = (
		ingress_port = 0x0(0)
		egress_port = 0x0(0)
	)
output packet (60 bytes)
 0x0000(0) : 00 00 00 00 00 00 00 00 00 00 00 00 08 00 45 00 
0x0010(16) : 00 2c 00 00 40 00 40 11 3c bf 7f 00 00 01 7f 00 
0x0020(32) : 00 01 2b cb b7 7c 00 18 00 0a 00 00 00 00 00 01 
0x0030(48) : 00 00 53 54 4f 52 45 44 0d 0a 00 00 
Exiting system XilinxSwitch
===================================================================
