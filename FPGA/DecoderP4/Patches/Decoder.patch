Decoder/XilinxSwitch/vivado_sim.bash
--- Decoder.original/XilinxSwitch/vivado_sim.bash	2018-05-09 16:31:13.390624782 -0400
+++ Decoder/XilinxSwitch/vivado_sim.bash	2018-05-09 16:30:25.746438707 -0400
@@ -1,14 +1,17 @@
 #!/bin/bash
+[ -z "$XILINX_VIVADO" ] && echo "Please set the XILINX_VIVADO environment variable." && exit 1
 
 # Clean up any old files 
 rm -rf xsim.dir
 
 set -euo pipefail
 set -x
-find -name "*.v" -o -name "*.vp" -o -name "*.sv" | { xargs -I % xvlog -sv % || true; } 
-find -name "*.c" | { xargs -I % xsc --compile % || true; } 
-xsc --compile ./XilinxSwitch.TB/XilinxSwitch.cpp -gcc_compile_options "-I./XilinxSwitch.TB/" --gcc_compile_options "-I./Parser_t.TB/" --gcc_compile_options "-I./Update_lvl_t.TB/" --gcc_compile_options "-I./Update_lvl_0_t.TB/" --gcc_compile_options "-I./Decoder_0_t.TB/" --gcc_compile_options "-I./Update_lvl_1_t.TB/" --gcc_compile_options "-I./Deparser_t.TB/" 
-xsc --compile ./XilinxSwitch.TB/sdnet_lib.cpp -gcc_compile_options "-I./XilinxSwitch.TB/" --gcc_compile_options "-I./Parser_t.TB/" --gcc_compile_options "-I./Update_lvl_t.TB/" --gcc_compile_options "-I./Update_lvl_0_t.TB/" --gcc_compile_options "-I./Decoder_0_t.TB/" --gcc_compile_options "-I./Update_lvl_1_t.TB/" --gcc_compile_options "-I./Deparser_t.TB/" 
-xsc --link 
+find -name "*.v" -o -name "*.vp" -o -name "*.sv" | { xargs -I % ${XILINX_VIVADO}/bin/xvlog -sv % || true; } 
+find -name "*.vhd" | { xargs -I % ${XILINX_VIVADO}/bin/xvhdl % || true; }
+mkdir -p xsim.dir/xsc
+find -name "*.c" | xargs ${XILINX_VIVADO}/bin/xsc -mt off -v 1
+g++ -std=gnu++11 -c -m64 -Wa,-W -fPIC ./XilinxSwitch.TB/XilinxSwitch.cpp -o xsim.dir/xsc/XilinxSwitch.o -I./XilinxSwitch.TB/ -I./Parser_t.TB/ -I./Update_lvl_t.TB/ -I./Update_lvl_0_t.TB/ -I./Decoder_0_t.TB/ -I./Update_lvl_1_t.TB/ -I./fec_0_t.TB/ -I./Deparser_t.TB/ -D__USE_XOPEN2K8 -DHAVE_DECL_BASENAME=1 
+g++ -std=gnu++11 -c -m64 -Wa,-W -fPIC ./XilinxSwitch.TB/sdnet_lib.cpp -o xsim.dir/xsc/sdnet_lib.o -I./XilinxSwitch.TB/ -I./Parser_t.TB/ -I./Update_lvl_t.TB/ -I./Update_lvl_0_t.TB/ -I./Decoder_0_t.TB/ -I./Update_lvl_1_t.TB/ -I./fec_0_t.TB/ -I./Deparser_t.TB/ -D__USE_XOPEN2K8 -DHAVE_DECL_BASENAME=1 
+LIBRARY_PATH=/usr/lib/x86_64-linux-gnu g++ -std=gnu++11 -Wa,-W  -O -fPIC  -m64  -shared  -o xsim.dir/xsc/dpi.so xsim.dir/xsc/*.o ${XILINX_VIVADO}/lib/lnx64.o/librdi_simulator_kernel.so -D__USE_XOPEN2K8 -DHAVE_DECL_BASENAME=1 
 xelab -L work --debug all -sv_lib dpi.so XilinxSwitch_tb 
 xsim --runall XilinxSwitch_tb 
Decoder/XilinxSwitch/XilinxSwitch.TB/compile.bash
--- Decoder.original/XilinxSwitch/XilinxSwitch.TB/compile.bash	2018-05-09 16:31:13.598625579 -0400
+++ Decoder/XilinxSwitch/XilinxSwitch.TB/compile.bash	2018-05-09 16:30:25.746438707 -0400
@@ -1,4 +1,5 @@
 #!/bin/bash
 set -euo pipefail
 set -x
-g++ -I. -std=c++11 $(find .. -name '*.cpp') -o XilinxSwitch -D__USE_XOPEN2K8 -DHAVE_DECL_BASENAME=1
+g++ -g -O0 -I. -I$SDSOC_ROOT/Vivado_HLS/include -std=c++11 $(find .. -name '*.cpp') -o XilinxSwitch -D__USE_XOPEN2K8 -DHAVE_DECL_BASENAME=1
+
Decoder/XilinxSwitch/XilinxSwitch.TB/XilinxSwitch.hpp
--- Decoder.original/XilinxSwitch/XilinxSwitch.TB/XilinxSwitch.hpp	2018-05-09 16:31:13.494625181 -0400
+++ Decoder/XilinxSwitch/XilinxSwitch.TB/XilinxSwitch.hpp	2018-05-09 16:30:39.550493331 -0400
@@ -58,6 +58,8 @@
 	Update_lvl_1_t Update_lvl_1;
 	Deparser_t Deparser;
 
+	int Packet_count;
+
 	// system ctor
 	XilinxSwitch(std::string n) : _name(n),
 		Parser("Parser"),
@@ -65,47 +67,54 @@
 		Update_lvl_0("Update_lvl_0"),
 		Decoder_0("Decoder_0"),
 		Update_lvl_1("Update_lvl_1"),
-		Deparser("Deparser") { }
+		Deparser("Deparser"),
+		Packet_count(0) { }
 
 	// system function
-	void operator()() {
-		std::cout << "===================================================================" << std::endl;
-		std::cout << "Entering system " << _name << std::endl;
-		// input packet
-		std::cout << "input packet (" << packet_in.size() << " bytes)" << std::endl;
-		std::cout << packet_in;
-		// input and inout tuples:
-		std::cout << "initial input and inout tuples:" << std::endl;
-		std::cout << "	ioports = " << ioports.to_string() << std::endl;
-		// clear internal and output-only tuples:
-		std::cout << "clear internal and output-only tuples" << std::endl;
-
-		// evaluate engines in topologically-sorted order
-
-		Parser.packet_in = packet_in;
-		Parser.control = 0;
-		Parser();
-
-		Update_lvl.hdr = Parser.hdr;
-		Update_lvl.ioports = ioports;
-		Update_lvl();
-
-		Update_lvl_0.Update_fl = Update_lvl.Update_fl;
-		Update_lvl_0.hdr = Update_lvl.hdr;
-		Update_lvl_0.ioports = Update_lvl.ioports;
-		Update_lvl_0.local_state = Update_lvl.local_state;
-		Update_lvl_0();
-
-		Decoder_0.Update_fl = Update_lvl_0.Update_fl;
-		Decoder_0.hdr = Update_lvl_0.hdr;
-		Decoder_0.ioports = Update_lvl_0.ioports;
-		Decoder_0.local_state = Update_lvl_0.local_state;
-		Decoder_0.Parser_extracts = Parser.Parser_extracts;
-		Decoder_0.Decoder_input = Update_lvl_0.Decoder_input;
-		Decoder_0.packet_in = Parser.packet_out;
-		Decoder_0.control = 0;
+	int operator()() {
+		if (Packet_count <= 1) {
+			std::cout << "===================================================================" << std::endl;
+			std::cout << "Entering system " << _name << std::endl;
+			// input packet
+			std::cout << "input packet (" << packet_in.size() << " bytes)" << std::endl;
+			std::cout << packet_in;
+			// input and inout tuples:
+			std::cout << "initial input and inout tuples:" << std::endl;
+			std::cout << "	ioports = " << ioports.to_string() << std::endl;
+			// clear internal and output-only tuples:
+			std::cout << "clear internal and output-only tuples" << std::endl;
+
+			// evaluate engines in topologically-sorted order
+
+			Parser.packet_in = packet_in;
+			Parser.control = 0;
+			Parser();
+
+			Update_lvl.hdr = Parser.hdr;
+			Update_lvl.ioports = ioports;
+			Update_lvl();
+
+			Update_lvl_0.Update_fl = Update_lvl.Update_fl;
+			Update_lvl_0.hdr = Update_lvl.hdr;
+			Update_lvl_0.ioports = Update_lvl.ioports;
+			Update_lvl_0.local_state = Update_lvl.local_state;
+			Update_lvl_0();
+
+			Decoder_0.Update_fl = Update_lvl_0.Update_fl;
+			Decoder_0.hdr = Update_lvl_0.hdr;
+			Decoder_0.ioports = Update_lvl_0.ioports;
+			Decoder_0.local_state = Update_lvl_0.local_state;
+			Decoder_0.Parser_extracts = Parser.Parser_extracts;
+			Decoder_0.Decoder_input = Update_lvl_0.Decoder_input;
+			Decoder_0.packet_in = Parser.packet_out;
+			Decoder_0.control = 0;
+		}
 		Decoder_0();
 
+		Packet_count = Decoder_0.Decoder_output.packet_count.to_ulong();
+		if (Packet_count == 0)
+			return 0;
+
 		Update_lvl_1.Update_fl = Decoder_0.Update_fl;
 		Update_lvl_1.hdr = Decoder_0.hdr;
 		Update_lvl_1.ioports = Decoder_0.ioports;
@@ -131,6 +140,8 @@
 		std::cout << packet_out;
 		std::cout << "Exiting system " << _name << std::endl;
 		std::cout << "===================================================================" << std::endl;
+
+		return Packet_count;
 	}
 };
 //######################################################
Decoder/XilinxSwitch/XilinxSwitch.TB/XilinxSwitch.cpp
--- Decoder.original/XilinxSwitch/XilinxSwitch.TB/XilinxSwitch.cpp	2018-05-09 16:31:13.494625181 -0400
+++ Decoder/XilinxSwitch/XilinxSwitch.TB/XilinxSwitch.cpp	2018-05-09 16:30:42.430504652 -0400
@@ -99,13 +99,18 @@
 			_tuple_in_stream << ((_LV<8>)_DUT.ioports).to_hex() << ' ';
 			_tuple_in_stream << std::endl;
 			// eval engine
-			_DUT();
-			// format packet
-			WritePcapPacket(_packet_out_pcap,  _DUT.packet_out);
-			busFormatPacket(_packet_out_bus,   _DUT.packet_out, _bus_width, _packet_out_format);
-			// format output and inout tuples
-			_tuple_out_stream << ((_LV<8>)_DUT.ioports).to_hex() << ' ';
-			_tuple_out_stream << std::endl;
+			int Packet_count;
+			do {
+				Packet_count = _DUT();
+				if (Packet_count == 0)
+					break;
+				// format packet
+				WritePcapPacket(_packet_out_pcap,  _DUT.packet_out);
+				busFormatPacket(_packet_out_bus,   _DUT.packet_out, _bus_width, _packet_out_format);
+				// format output and inout tuples
+				_tuple_out_stream << ((_LV<8>)_DUT.ioports).to_hex() << ' ';
+				_tuple_out_stream << std::endl;
+			} while (Packet_count > 1);
 		} // for _p
 		// close files
 		_packet_in_pcap.close();
